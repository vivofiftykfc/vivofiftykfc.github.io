<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>06-09-思考与构建</title>
    <link href="/2025/06/09/%E5%8F%8D%E6%80%9D/2025-06-09-%E6%80%9D%E8%80%83%E4%B8%8E%E6%9E%84%E5%BB%BA/"/>
    <url>/2025/06/09/%E5%8F%8D%E6%80%9D/2025-06-09-%E6%80%9D%E8%80%83%E4%B8%8E%E6%9E%84%E5%BB%BA/</url>
    
    <content type="html"><![CDATA[<p>这个大概是在看漫画的时候莫名想到的吧，是个小说改的，原作者总是喜欢给自己的一些体会加到这本书里面，于是在书中就能看到作者自己的一些恋爱观、人生哲学以及恋爱小情趣。</p><p>然后想了很多，作为我个人而言吗，我固然在现在是想多接触一些人，想谈个恋爱之类的，但是思来想去感觉有个很大的问题就是和别人聊天的时候总是聊不到一块去，比如有的时候就是我单方面的诉苦，有的时候就是直接尬在那里。这个我觉得应该有两方面的问题：聊天技巧和知识丰度或者说观点的有趣程度。</p><p>关于聊天技巧我觉得首先可以给之前刷到的一个东西先讲出来：大冰之前跟一个小伙子连线，也是我这个问题，说话总是不到点子上，废话很多，表达能力很差。然后给的一个建议就是要少说，说话之前可以先停顿一下组织删掉自己的语言，大概可能2-3秒，最多不过五秒，多了可以先说我先想一会，然后删繁就简，讲出最精炼最能抓住重点的话来。这样做有两个核心逻辑在里面：第一个你本身不会说话，所以与其担心有啥没讲到，不如先守拙，言多必失吗；第二个，这个也是一个锻炼思维能力的过程，通过精炼自己的话来达到一个能够言简意赅阐释清楚意思的一个效果。当然还有有一些额外的好处，就是别人第一反应是得到了你的尊重，你在认真思考他的话。</p><p>然后其他的聊天技巧就之后再说，这个可以着重找一些资料，同时多加练习，多做一些有价值的对话，聊一些信息量大的话题，做一些头脑风暴。</p><p>还有聊天时候的观点以及聊天的相关内容，我觉得一方面要减少在碎片化娱乐项目上浪费的时间，刷一个小时短视频不如打一小时游戏，至少打了游戏看了番也算在兴趣爱好上多做了一些努力；其次多去找一些有价值有思考内容的资料，比如多去整理知乎的高赞回答，多去看一些书，学习一些技能，不要总是脑腐。我甚至觉得接下来可以每周有空闲时间给知乎的高赞回答的底层逻辑梳理一下吧，不过可能没法发到我这里来了。</p><p>睡觉。</p>]]></content>
    
    
    
    <tags>
      
      <tag>一些思考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Git介绍及用法</title>
    <link href="/2025/06/03/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-06-03-Git%E7%94%A8%E6%B3%95%E5%8F%8A%E4%BB%8B%E7%BB%8D/"/>
    <url>/2025/06/03/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-06-03-Git%E7%94%A8%E6%B3%95%E5%8F%8A%E4%BB%8B%E7%BB%8D/</url>
    
    <content type="html"><![CDATA[<p>这篇blogs算是读git官方的这个 <ahref="https://git-scm.com/book/zh/v2">Pro Git Book</a>整的一个笔记。很多都是直接cv的。这篇blogs就看了他的前两章，后面的像是在服务器上搭建Git之类的之后再说吧。# Git历史</p><h3 id="版本控制发展">版本控制发展</h3><p>本地版本控制-&gt;集中版本控制-&gt;分布式版本控制</p><p>Git是在linux的开发过程中，在分布式版本控制系统bitkeeper收回免费linux开发组对该系统的使用权力后，由linus牵头写的一个版本开发系统，有简单而快速、支持并行开发、完全分布式、支持超大规模项目管理的特点。</p><h3 id="思路与优势">思路与优势</h3><p>Git的思路是每次存下一个文件快照的索引，每当提交更新，他就会做一个快照，并保存这个快照的索引。为了效率，如果有文件没有更改，他就不会重新储存，直接保留一个连接指向之前存过的文件的。在Git中的绝大多数操作都只需要访问本地文件和资源，一般不需要来自网络上其它计算机的信息。</p><p>这和之前的例如CVS、Subversion、Perforce按照类似于记录下各个版本之间的差异，按照类似于补丁的形式给记录下来，（通常称作基于差异（delta-based）的版本控制）。Perforce的话，没有连接服务器时几乎不能做什么事；而用 Subversion 和 CVS 的话，你能修改文件，但不能向数据库提交修改（因为你的本地数据库离线了）。</p><p>Git有三种状态，你的文件可能处于其中之一： <strong>已提交（committed）</strong>、<strong>已修改（modified）</strong> 和 <strong>已暂存（staged）</strong>。</p><ul><li>已修改表示修改了文件，但还没保存到数据库中。</li><li>已暂存表示对一个已修改文件的当前版本做了标记，使之包含在下次提交的快照中。</li><li>已提交表示数据已经安全地保存在本地数据库中。</li></ul><p>这会让我们的 Git项目拥有三个阶段：工作区（某个版本独立出来让你改的）、暂存区（一个Git仓库目录的文件，写了下次提交要上报什么东西）以及Git 目录（.git）。</p><h1 id="git安装">Git安装</h1><ul><li>linux（Debian系为例）：<code>sudo apt install git-all</code></li><li>MacOS：<code>git --version</code>之后跟着系统提示走就行，直接用二进制安装程序详见Git官网：<ahref="https://git-scm.com/downloads/mac">Git - Downloading</a></li><li>Windows：直接用二进制安装程序详见<ahref="https://git-scm.com/downloads/win">Git - DownloadingPackage</a></li><li>源码编译：详见<ahref="https://git-scm.com/book/zh/v2/%E8%B5%B7%E6%AD%A5-%E5%AE%89%E8%A3%85-Git">Git- 安装 Git</a>，这个我觉得没必要还耗费时间，有兴趣可以自己做一下。</li></ul><h1 id="git配置">Git配置</h1><p>用Git自带的工具<code>git config</code>。具体变量会存在三个位置：</p><ol type="1"><li><p>系统内全部用户：<code>/etc/gitconfig</code> ，如果在执行 <code>git config</code> 时带上 <code>--system</code> 选项，那么它就会读写该文件中的配置变量。注意这个是系统配置文件，要sudo。</p></li><li><p>当前用户：<code>~/.gitconfig</code> 或 <code>~/.config/git/config</code>，你可以传递 <code>--global</code> 选项让 Git读写此文件，这会对你系统上所有的仓库生效。</p></li><li><p>当前使用仓库：<code>.git/config</code>，你可以在该仓库下传递 <code>--local</code> 选项让Git 强制读写此文件，虽然默认情况下用的就是它。</p></li></ol><p>每一个更细的级别会覆盖上一个大级别级别的配置。</p><p>在 Windows 系统中，Git会查找 <code>$HOME</code> 目录下（一般情况下是 <code>C:\Users\$USER</code> ）的 <code>.gitconfig</code> 文件。Git 同样也会寻找 <code>/etc/gitconfig</code> 文件，但只限于 MSys的根目录下，即安装 Git 时所选的目标位置。 如果你在 Windows 上使用 Git2.x 以后的版本，那么还有一个系统级的配置文件，Windows XP上在 <code>C:\Documents and Settings\All Users\Application Data\Git\config</code> ，WindowsVista及其以后的版本在 <code>C:\ProgramData\Git\config</code> 。此文件只能以管理员权限通过 <code>git config -f &lt;file&gt;</code> 来修改。</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --list --show-origin <span class="hljs-comment">#查看所有的配置以及它们所在的文件</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --list               <span class="hljs-comment">#查看所有的配置</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --list &lt;key&gt;         <span class="hljs-comment">#查看某项配置 eg:git config user.name</span></span><br></code></pre></td></tr></table></figure><h3 id="用户信息">用户信息</h3><p>安装完 Git 之后，要做的第一件事就是设置你的用户名和邮件地址。这一点很重要，因为每一个 Git提交都会使用这些信息，它们会写入到你的每一次提交中，不可更改：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global user.name <span class="hljs-string">&quot;John Doe&quot;</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global user.email johndoe@example.com</span><br></code></pre></td></tr></table></figure><p>这个 <code>--global</code>从上文可知是当前用户下的配置，如果要在特定项目下配其他的话在此项目中用去掉<code>--global</code> 的命令就行。</p><h3 id="ide配置">IDE配置</h3><p>一般来说在linux下会直接用系统默认的文本编辑器，更换编辑器命令（以emacs为例）：</p><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git config --global core.editor emacs</span><br></code></pre></td></tr></table></figure><p>Windows 系统上，指定可执行文件的完整路径即可。</p><h1 id="git帮助">Git帮助</h1><figure class="highlight console"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs console"><span class="hljs-meta prompt_">$ </span><span class="language-bash">git <span class="hljs-built_in">help</span> &lt;verb&gt;      <span class="hljs-comment">#eg:git help config（找git config）</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">git &lt;verb&gt; --<span class="hljs-built_in">help</span>    <span class="hljs-comment">#eg:git add -h</span></span><br><span class="hljs-meta prompt_">$ </span><span class="language-bash">man git-&lt;verb&gt;</span><br></code></pre></td></tr></table></figure><h1 id="git拉包">Git拉包</h1><h2 id="在已存在的目录中初始化仓库">在已存在的目录中初始化仓库</h2><p>在当前目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs bash">git init <span class="hljs-comment">#初始化，创建.git子目录，是git仓库中所有的必须文件</span><br>git add *.c<br>git add LICENSE<br>git commit -m <span class="hljs-string">&#x27;initial project version&#x27;</span><br></code></pre></td></tr></table></figure><h2 id="克隆现有的仓库">克隆现有的仓库</h2><p>Git克隆的是该仓库服务器上几乎所有数据，默认是没一个版本都会拉下来</p><p>在目标克隆目录下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">clone</span> https://github.com/libgit2/libgit2 <br>git <span class="hljs-built_in">clone</span> https://github.com/libgit2/libgit2 mylibgit  <span class="hljs-comment">#自定目录名</span><br></code></pre></td></tr></table></figure><p>这会在当前目录下创建一个名为 “libgit2”的目录，并在这个目录下初始化一个 <code>.git</code> 文件夹，从远程仓库拉取下所有数据放入 <code>.git</code> 文件夹，然后从中读取最新版本的文件的拷贝。如果你进入到这个新建的 <code>libgit2</code> 文件夹，你会发现所有的项目文件已经在里面了，准备就绪等待后续的开发和使用。</p><p>传输协议之后再写。</p><h1 id="git上传zzzz">Git上传(zzzz)</h1><p>文件的状态变化周期：</p><p>![[file-20250604000404216.png]]</p><p>接下来根据这个文件状态变化周期来进行叙述：</p><h2 id="跟踪新文件与暂存更改">跟踪新文件与暂存更改</h2><p>只有把文件添加到更新下面之后才能进行版本控制！新建文件后仍为未跟踪状态，需要执行<code>git add &lt;文件&gt;</code>将其转为已暂存，后续所有提交都只包含暂存区的内容；<code>git add</code>也可接受目录路径，递归跟踪目录下所有文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git add .  <span class="hljs-comment">#添加全部的文件</span><br></code></pre></td></tr></table></figure><p>注意有的时候你中途add进去一个新文件，在add之后在上传时，上传的是你add时的版本，再次修改的文件还在非暂存区中，需要重新add。</p><h2 id="忽略不需要版本控制的文件">忽略不需要版本控制的文件</h2><p>在项目根目录（或子目录）创建<code>.gitignore</code>，列出要忽略的模式（支持 glob 语法）；</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">*.o        <span class="hljs-comment"># 忽略所有 .o 文件 </span><br>*.a        <span class="hljs-comment"># 忽略所有 .a 文件 </span><br>!lib.a     <span class="hljs-comment"># 但跟踪lib.a</span><br>*~         <span class="hljs-comment"># 忽略 Emacs 自动保存的临时文件  </span><br>/TODO      <span class="hljs-comment"># 只忽略仓库根目录下的 TODO 文件，匹配模式防止递归  </span><br>build/     <span class="hljs-comment"># 忽略任何目录下名为 build 的文件夹，指定文件夹递归入库  </span><br></code></pre></td></tr></table></figure><h2 id="查看文件状态">查看文件状态</h2><ul><li><code>git status</code>：显示当前分支、与远程分支的关系，以及“已暂存”和“未暂存”更改、和“未跟踪”文件；</li><li><code>git status -s</code>（或<code>--short</code>）：以紧凑格式显示状态</li></ul><h2 id="查看修改细节">查看修改细节</h2><p>在提交前，应先用 <code>git status</code>确认所有需要包含的修改都已暂存，然后再检查差异。</p><p>有一点需要注意的是，若只想看“未暂存”的修改，直接运行<code>git diff</code>；若想查看“已暂存且待提交”部分，可用<code>git diff --cached</code>（或 <code>--staged</code>）。</p><h2 id="移除文件">移除文件</h2><h3 id="彻底移除工作目录-git-仓库">1. <strong>彻底移除（工作目录 &amp;Git 仓库）</strong>：</h3><p> <code>git rm &lt;file&gt;</code>：</p><ul><li>从工作目录中删除文件。</li><li>将删除操作<strong>暂存</strong>（记录到暂存区）。</li><li>提交后，文件将不再被 Git 跟踪，且从磁盘消失。</li></ul><h3 id="仅移除-git-跟踪保留文件在工作目录">2. <strong>仅移除 Git跟踪（保留文件在工作目录）</strong>：</h3><p><code>git rm --cached &lt;file&gt;</code>：</p><ul><li>将文件从 Git 的跟踪列表和暂存区移除。</li><li><strong>保留</strong>文件在工作目录中，使其成为未跟踪文件。</li><li>适用于误添加到暂存区但需保留本地的文件（如日志、编译产物）。</li></ul><h3 id="强制移除-f">3.<strong>强制移除（<code>-f</code>）</strong>：</h3><ul><li>当文件已被修改且添加到暂存区时，需使用 <code>git rm -f &lt;file&gt;</code> 强制删除。</li><li>防止误删尚未提交快照的修改（这些修改无法由 Git 恢复）。</li></ul><h3 id="删除模式匹配的文件">4.<strong>删除模式匹配的文件</strong>：</h3><ul><li>使用 <code>git rm</code> 配合 glob模式（如 <code>git rm log/\*.log</code> 删除 <code>log/</code> 下所有 <code>.log</code> 文件）。</li><li><strong>注意</strong>：通常需转义 <code>*</code> 等特殊字符（如 <code>\*</code>）。</li></ul><h2 id="移动重命名文件"><strong>移动/重命名文件</strong></h2><p>Git通过内容变化智能推断文件是否被移动或重命名。可以用<code>git mv &lt;old_name&gt; &lt;new_name&gt;</code>进行重命名或者移动，该命令等效于执行以下三条命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">mv</span> &lt;old_name&gt; &lt;new_name&gt;   <span class="hljs-comment"># 1. 工作目录中重命名/移动</span><br>git <span class="hljs-built_in">rm</span> &lt;old_name&gt;          <span class="hljs-comment"># 2. 删除旧文件（暂存）</span><br>git add &lt;new_name&gt;         <span class="hljs-comment"># 3. 添加新文件（暂存）</span><br></code></pre></td></tr></table></figure><p>提交后，Git会将其识别为重命名操作（<code>git status</code> 会显示 <code>renamed</code>）。</p><p>如果你使用其他方式（如系统命令或文件管理器）移动/重命名了文件，需要手动执行：</p><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gherkin">git rm <span class="hljs-variable">&lt;old_name&gt;</span>  <span class="hljs-comment"># 告诉 Git 删除旧路径的文件</span><br>git add <span class="hljs-variable">&lt;new_name&gt;</span> <span class="hljs-comment"># 告诉 Git 跟踪新路径的文件</span><br></code></pre></td></tr></table></figure><p>提交前完成这两步，Git 同样能识别为重命名。</p><h2 id="提交更改">提交更改</h2><p>执行 <code>git commit</code>会打开默认文本编辑器，其中包含对本次提交的注释模板（类似<code>git status</code>输出的注释行），在文件首行输入提交说明即可；也可使用<code>git commit -m "提交信息"</code>将提交说明写在命令行中。注意每次<code>git commit</code>实现一个功能或者改好一个bug就好，注释一定要写清楚，一定，一定。</p><p>提交完成后，会输出当前所在分支、生成的提交 SHA-1以及此次修改涉及的文件数、行数等统计信息；</p><p>每次提交只记录暂存区的快照，未暂存的更改不会被包含，仍保留在工作目录中，需在下次提交前再次执行<code>git add</code>。</p><h2 id="进阶跳过使用add">进阶：跳过使用add</h2><p>为了方便，可以直接：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git commit -a<br></code></pre></td></tr></table></figure><p>以此来跳过使用add和暂存区域，但是会给所有跟踪过的文件暂存一块提交，就不这么精细</p><h1 id="git回顾">Git回顾</h1><h2 id="查看提交历史">查看提交历史</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">git <span class="hljs-built_in">log</span><br></code></pre></td></tr></table></figure><p>这个是用来看提交历史流程，最新的在上，旧的在下面。会给作者名、提交者、概要之类的信息。</p><p>这个可以有很多参数进行细致的查看，这里由于笔者本人大型项目开发经验欠缺，暂时先略过，等我用到再说。</p><h1 id="git撤销">Git撤销</h1><p>这个可能会导致工作丢失，如果操作不好的话。</p><p>暂时先写到这里，等期末考完再说下一步。</p><p>Git GUI汉化包：<ahref="https://github.com/stayor/git-gui-zh">stayor/git-gui-zh</a></p><p>参考资料：</p><ul><li><ahref="https://github.com/stayor/git-gui-zh">stayor/git-gui-zh</a></li><li><a href="https://zhuanlan.zhihu.com/p/259270374">Git的汉化 -知乎</a></li><li><a href="https://git-scm.com/book/en/v2">Git</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾的小杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>CMake与动态静态库</title>
    <link href="/2025/05/29/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-05-29-CMake%E4%B8%8E%E5%8A%A8%E6%80%81%E9%9D%99%E6%80%81%E5%BA%93/"/>
    <url>/2025/05/29/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-05-29-CMake%E4%B8%8E%E5%8A%A8%E6%80%81%E9%9D%99%E6%80%81%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="cmake">CMake</h1><p>本篇来源于上信号与系统时候摸的鱼。</p><h2 id="基本概念">基本概念</h2><p>用 CMakeList.txt 自动生成各平台的构建文件，是生成构建系统的工具。</p><p>稍高于基准的手动配置(定义项目结构，依赖项，编译选项，不用手动配置工具。</p><h2 id="配置">配置</h2><ul><li>CMakeLists.txt</li><li>构建目录（mkdir build），是保证源代码的整洁。</li></ul><p>（感觉下一篇可以写一写 PATH。注册表什么的？）</p><h2 id="cmakelist.txt-语法">CMakeList.txt 语法</h2><ul><li><a href="https://www.runoob.com/cmake/cmake-tutorial.html">CMake教程 | 菜鸟教程</a></li></ul><p>（静态库与动态库又是什么？）</p><h2 id="使用流程">使用流程</h2><ul><li>创 build 目录 → 生成构建文件（.../build # Cmake...）。</li><li>编译与构建（make ...）。</li><li>清理构建文件（make clean / 删除 Cmakecache.txt）。</li></ul><p>作为编译流程的一部分，下级有make、ninja、vs之类的构建工具，可以进一步了解。</p><h1 id="静态库与动态库">静态库与动态库</h1><p>基础是菜鸟教程的一篇blog。</p><ul><li><ahref="https://www.runoob.com/w3cnote/cpp-static-library-and-dynamic-library.html">C++静态库与动态库| 菜鸟教程</a></li></ul><p>同理不讲这俩的底层格式之内存布局。</p><h2 id="什么是库">什么是库</h2><p>底层轮子工具包，让后人不必重复造轮子。本底是可视行代码的三进制形式，可载入内存使用。</p><ul><li>静态库（.a、.lib）</li><li>动态库（.so、.dll）。</li></ul><p>源文件 → 编译 → 链接 → 执行</p><p>动/静态库于链接时接入，区别来自如何处理链接。</p><h3 id="静态库">静态库</h3><p>编译到程序中的库</p><h4 id="优点">优点</h4><ul><li>移植到别的计算机的时候方便，不用配环境</li><li>方便更新</li></ul><h4 id="缺点">缺点</h4><ul><li>占用大</li><li>更新不方便</li></ul><h4 id="构建">构建</h4><ul><li>Linux下用ar工具构建</li><li>Windows用lib.exe构建</li></ul><h3 id="动态库">动态库</h3><h4 id="优点-1">优点</h4><ul><li>运行程序时调用</li><li>方便更新</li></ul><h4 id="缺点-1">缺点</h4><ul><li>DLL HELL，就需要总是配环境</li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾的小杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>星际穿越</title>
    <link href="/2025/05/29/%E7%95%AA%E5%89%A7%E9%89%B4%E8%B5%8F/%E7%94%B5%E5%BD%B1/2025-05-29-%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/"/>
    <url>/2025/05/29/%E7%95%AA%E5%89%A7%E9%89%B4%E8%B5%8F/%E7%94%B5%E5%BD%B1/2025-05-29-%E6%98%9F%E9%99%85%E7%A9%BF%E8%B6%8A/</url>
    
    <content type="html"><![CDATA[<p>在此再次感谢我的搭档与我共同完成本次作品。下面展示我写的这部分</p><hr /><h2 id="介绍与背景阐述">介绍与背景阐述</h2><p>星际穿越是由著名导演克里斯托弗·诺兰指导的一部原创科幻冒险电影，上映于2014年11月5日，豆瓣评分9.4。</p><p>诺兰这样解释创作初衷，“小时候，成为一名宇航员是最崇高的梦想和最终极的野心。我怀念对不断探索和向着银河最深处前进的坚持。希望我们这次能够开启‘向外延伸’的新时代。”《星际穿越》既是他对经典太空电影的致敬，也是他童年梦想的延续。在制作中，他也一如既往的倾向于使用实景拍摄和IMAX 胶片，而非完全依赖 CG，以求真实感与沉浸感。</p><p>为了确保电影中科学理论的真实性，诺兰邀请了诺贝尔奖得主、理论物理学家基普·索恩担任科学顾问，确保虫洞与黑洞等天体物理现象的严谨性。索恩团队使用数千台计算机模拟爱因斯坦方程，绘制出的黑洞影像对天体物理学研究也产生了积极影响。同时索恩著有《星际穿越的科学》这本书对影片中的科学原理进行逐一刨析。</p><h2 id="观后感">观后感</h2><p>《星际穿越》的故事结构精巧，总体来看具有明暗两层线，明线是库珀在超立方体里面用传递信息的方式救了女儿和全人类，引力是传递信息的媒介，而爱是库珀行动的动机。暗线则是高维人类使用造虫洞、超立方体的方式来拯救现在的人类。</p><p>《星际穿越》的伏笔与铺垫则又如公式般严谨而精密：开篇书房里无端震颤的书架、墨菲口中“幽灵”的呓语、沙子间暗藏的NASA基地坐标，这些看似好似超自然现象都伏笔，都在结尾库珀在超立方体表面拨动世界管，墨菲破解手表指针震颤的瞬间被回收，形成闭环。诺兰让我们明白，五维空间的书架既是父爱的载体，也是人类为自救埋下的时光胶囊，正如墨菲定律所言：所有被引力牵引的偶然，终将成为必然的星光。</p><p>《星际穿越》在细节处理和次要人物塑造上也值得我们进行探讨。以男主人公库珀的两个孩子而言，墨菲是仰望星空的开拓者，是被万人敬仰的存在；但儿子则是脚踩泥土的守望者，至关重要但却容易被人遗忘，甚至连名字都是最普通的汤姆。当父亲将“守护家园”的承诺托付给儿子时，这个剧中唯一的普通人用自己的脊梁撑起了整个人类。他对父亲有着无条件的信任，父亲只不过是一句照顾好家人的交代，自己便在老屋和农田中坚守了几十年，直到墨菲回家仍能找到几十年前父亲送给自己的手表，进而破译出父亲的暗语。父亲的宇航服与儿子的犁头同样闪耀：前者传递出黑洞的相关数据，后者则为信息的传递保留了桥梁。拯救人类的不能只有几个能力超群的英雄，更有千千万万汤姆这样坚守的普通人。</p><p>影片结束后，我又在思考这个问题：人们为什么会迷恋这种科幻作品？我想，人们迷恋科幻，或许恰是因为这些作品如同棱镜，折射出人类灵魂深处最深邃的悖论：我们既是浩瀚星尘的产物，是理性的孩子，又是星尘中唯一会为星光流泪的感性存在。正如《三体》中，歌者以二向箔将太阳系化作梵高笔下的流动星河，冰冷的理性与炽热的悲悯在一瞬间交织成璀璨绝唱；而在《银河帝国》里，心理史学框架下的人们更是在用自己的一生谱写着信仰与背叛、权利与情感的史诗。科幻从不只是对未来的单纯狂想，更是在剖析着我们内心的理性与感性。正是在科幻作品的映射下，在公式的演算与人性的光辉中，我们才能真正看清自己。</p><p>而《星际穿越》之所以震撼人心，我想正是因为它关注到了这种矛盾，将其谱写为星空下的史诗。当库珀漂浮在超立方体表面，用手指拨动书籍的世界管，冷冰冰的公式与黑洞奇点数据便有了体温；黑洞吸积盘辐射的每道射线，都成了跨越维度的思念回响。诺兰与索恩用这样一个故事让我们明白：原来科学与技术作为我们人类挑战自然时最有力的武器，面对我们自己时也能雕刻出爱的形状。正如卡尔·萨根在《宇宙》中写道：“我们DNA里的氮元素，牙齿里的钙元素，血液里的铁元素，都是曾经大爆炸时散落的星辰。”科技与人情从来不是对立面，而是如同光的波粒二象性一般，是同一种物质在不同维度的投影。</p><p>当片尾字幕随管风琴的轰鸣升向黑暗，银幕外的我们仍被困在名为“人类”的困局里：我们既是星尘中的尘埃，又是星尘中唯一试图理解尘埃的神明。诺兰用也在本部影片中告诉我们，当引力波的涟漪在时空中扩散之时，唯有爱能让杂波变为传递信息的使者；当分子在虚空中漫无目的的运动之时，唯有篝火旁相扣的十指能定义存在的温度。或许宇宙从不关心人类如何用虫洞开辟出自己种族生的道路，不关心人类是如何在黑板上写下一行行公式与符号，但正是这种宇宙眼里徒劳的浪漫，让我们在无尽熵增的荒漠中，种出了名为文明的绿洲。让我们仰头去凝望夜空吧，那每一道来自远古的光斑都在低语：去计算光年，去笑，去流泪，去成为宇宙最温柔的星尘。</p><p>不要温和地走进那良夜，</p><p>老年应当在日暮时燃烧咆哮；</p><p>怒斥，怒斥光明的消逝。</p>]]></content>
    
    
    <categories>
      
      <category>番剧鉴赏</category>
      
      <category>电影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>番剧鉴赏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-28-廿</title>
    <link href="/2025/05/28/%E5%8F%8D%E6%80%9D/2025-05-28-%E5%BB%BF/"/>
    <url>/2025/05/28/%E5%8F%8D%E6%80%9D/2025-05-28-%E5%BB%BF/</url>
    
    <content type="html"><![CDATA[<p>今天是端午节的前三天，农历五月初二，我的二十岁生日。</p><p>大抵只消这一句，我那假想中的读者们就能知道为什么会取这样一个题目了吧。是的，人生的第二十个年头，就要来了；人生的第二十个夏天，就要来了。</p><p>在这样一个特殊的日子里，我又敲击起键盘，大概是要假装写下一些什么东西吧，像每个愿意给生活带来点仪式感的人一样。</p><p>从哪里开始记下流水账呢，是早上起来狂赶到综教上信号与系统还是昨晚补完作业呢？或许还是感觉从昨晚在床上刷手机到4点然后才睡着吧。近来确实较为忙碌，从上周的集创赛初赛结束，紧接着就是电工杯数学建模和去视听会帮忙干活，忙活到这周本来以为能稍微喘息一下，结果又是老师开始催集创赛的进度，又是要去剪光影组最后一期节目做后期，然后还有市创和校创的的中期赶进度。这些是我喜欢的工作吗？好像是的。但是我为什么做完这些会很累呢，这真的是我想要的生活吗？我真的愿意凭借这些东西来养活我自己吗？我真的能凭借这些来养活我自己吗？再或者，进一步想，我为什么要活下去呢？活下去又是为了什么呢？我不知道。我找不到活下去的理由，只不过是有我不能销掉地球online的号的缘由罢了。于是，即使是在复习完Z变换后的夜半时分，即使已是缺月挂疏桐，电子设备上的劣质小视频仍伴我直至鸡鸣破晓、红日初升。</p><p>凤箫声动，蛾眉不见阑珊处；玉壶光转，鱼龙又为何人舞</p><p>怎么高中的臭毛病又犯了，还在这编酸词儿呢。</p><p>用人话说就是，或许真的是我无法从别的地方找到慰藉，抑或是单纯的抖音至少给了我一个保障：只要我有电有网，就会一直给我推荐可能有兴趣的视频，然后，我又在二十岁的第一天，因为玩乐清醒直到天明。</p><p>然后就是睡了三个小时，去上信号与系统。讲的是Z变换，还有两周就结课准备考试了。说实在我觉得这门课还真算有意思的，至少来说让我学到信号是啥，系统是啥，明白怎么用各种变换，各种时域频域分析来处理信号，就好像我真的学完这门课能够轻轻松松的拿捏了信号一般，给人以一种虚假而又真实的掌握了某些事物命运的感觉。</p><p>在这里要感谢一个哥们-sc，在上信号与系统的课上提醒我今天是我生日。真太感动了宝贝儿，我自己都快忘掉这个东西了。或许可以进一步讲讲纪念日对于人的意义？曾经我对生日、毕业这种特殊的日子嗤之以鼻，也就放假的日子会特别关注。今天在这里或许可以说这样一句莫名其妙的话：所有的纪念日实际上你不去关注，不认为有意义那就确实没有意义，但是如果你关注了，觉得他有意义，那么这些纪念日对你来说就是十分到有意义。他就相当于跑马拉松时候的里程标记，你不在意他继续跑下去一点问题没有，但是如果你注意了他，就会意识到自己已经经历了这么多，回头想一想自己在这段路上的得与失，然后调整心境，不论好坏，继续向前。</p><p>下午是十分神经的社会实践的课堂部分，老师也在吹水，听完安排签完到就跑了，大可略过不提。</p><p>晚上吃完饭去工训楼摆弄无人机，比较抽象，臣等刚克一城，陛下何故催军？岂敢定居？一月三捷。整完学长走了去吃烤串，馆子还行，然后哥们两个一拍脑门走咱俩单独飞去，一到机场自己飞，赶紧收工。实际上丁神还是挺靠谱的，不过这把倒是显得我不靠谱就是了。</p><p>做完跟丁神骑车从南校区中间道旁树旁走，夏日的晚风总是带不来一丝凉意，耳畔却是操场上踢着足球的哥们的呐喊（怎么回忆起来操场好像还亮着灯？）。莫名感觉很青春，在二十岁的第一天，在已经疲惫不堪、宛如社畜或老人的二十岁的第一天，在10点多的单车上感受到了一点青春的自由与朝气。也许这就是这个世界送给我的，二十岁的最好的礼物吧。</p><p>莫道桑榆晚，为霞尚满天。抓住青春的尾巴，尽量在脑海中形成一些值得回味的突触连接吧。</p><p>与君，共勉。</p>]]></content>
    
    
    <categories>
      
      <category>反思</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一些思考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-07-深夜随便写写</title>
    <link href="/2025/05/07/%E5%8F%8D%E6%80%9D/2025-05-07-%E6%B7%B1%E5%A4%9C%E7%9D%A1%E4%B8%8D%E7%9D%80%E9%9A%8F%E4%BE%BF%E5%86%99%E7%82%B9%E4%B8%9C%E8%A5%BF/"/>
    <url>/2025/05/07/%E5%8F%8D%E6%80%9D/2025-05-07-%E6%B7%B1%E5%A4%9C%E7%9D%A1%E4%B8%8D%E7%9D%80%E9%9A%8F%E4%BE%BF%E5%86%99%E7%82%B9%E4%B8%9C%E8%A5%BF/</url>
    
    <content type="html"><![CDATA[<p>刚刚抄完信号与系统的第六章作业，然后给课件翻了翻，毕竟明天又要小测，看着还行，至少能自己看懂啥意思，然后就又不想看了，莫名其妙又开了个文件想写些东西。</p><p>但是又写些什么呢，想想点酸词，诸如什么长夜漫漫，京郊黑黑之类的，倒也没什么意思，毕竟谁又会特地来这看这篇文章呢？各种推荐算法怎么也不会把流量分给我这里，真算起身边人来也不会有谁没事来看我一眼。</p><p>莫名的又想到了今天看到的一个新闻，讲一个湖南的男子准备跳湘江自杀，行动之前又点了一杯奶茶，还整个备注说自己要死了，后续就是奶茶店店主、小哥、警察一块给他救回来了。众人去的时候，那哥们看着是就剩个头还在水面上，不知道的还以为江上飘着个皮球，嗐呀，这事闹的。</p><p>实际上要我说，这人应该是不想死的，真要是一心寻死，哪会还把自己的死讯广而告之。哥们只不过是太寂寞了，从陌生人那里得到一些温暖，就又愿意继续活下去了。比如店员的那句“我多给你打一勺冻冻你不要死好不好”，说实在的看到这句话我莫名其妙的有点想笑，真就跟哄小孩一样，摸摸头给个笑脸就不哭了，但是不可否认的是这哥们应该是真就缺这一点。同时又有一种感慨吧，在我这个社会渣泽的角度看来，又是麻烦不知名的店员、警察，用自己的生命作为威胁换来一点点的陌生人的关心，等他回过味来的时候，真的不会为自己的这种以命博同情的做法而感到更进一步的寂寞或者羞耻吗。</p><p>我假想的读者啊，可能你会觉得我这样说过于残忍，指责我是一个冷血的社会败类，大概确实是这样的吧，我接受你的批评，因为我自己也不知道我这样想是对错，我甚至不知道为什么我要三更半夜不睡觉在这敲键盘。我只知道的是像这哥们一样，生而为人，很难遇到知心的伴侣，无论同性或是异性，人人都是孤岛，并不是什么广袤大地的一部分。</p><p>但是如何去纾解命运中寂寞的底色呢，我不知道，否则我也不会在这里继续漫无目的的敲击键盘了。</p><p>睡觉。</p>]]></content>
    
    
    <categories>
      
      <category>反思</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一些思考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>05-04-巴普洛夫的二八狗</title>
    <link href="/2025/05/04/%E5%8F%8D%E6%80%9D/2025-05-04-%E5%B7%B4%E6%99%AE%E6%B4%9B%E5%A4%AB%E7%9A%84%E4%BA%8C%E5%85%AB%E7%8B%97/"/>
    <url>/2025/05/04/%E5%8F%8D%E6%80%9D/2025-05-04-%E5%B7%B4%E6%99%AE%E6%B4%9B%E5%A4%AB%E7%9A%84%E4%BA%8C%E5%85%AB%E7%8B%97/</url>
    
    <content type="html"><![CDATA[<p>原谅我在五四青年节用这样一个奇妙的名字来写这篇文章。主要是刚才在浴室里面思考我近来的状态，发现自己对正儿八经的学习和工作总是提不起兴趣，或者说干活所用到的时间比其他人正常情况下所用的时间要多不少，就比如之前做那个广播台的节目，再比如建模的时候我用三天舍友就用一天，问题很大反正是。</p><p>要是解决我总是拖延不干活的问题（包括现在这篇文章也是我顶着几个火烧眉毛的ddl搁这写的），首先我觉得要先去把自己想象成巴普洛夫的狗。抛开原始的乱七八糟的生物学结论不谈，我这关注的是巴老先生的狗之所以能够学习到相关的行为，其背后的逻辑是啥样的：（大概就是学习的正反馈的构成）</p><pre><code class=" mermaid">flowchart TD A[初始的动力打开学习开关]--&gt;B[进行相关知识的学习] B--&gt;C[学习得到好结果] C--&gt;D[转化为进行下去的动力] D--&gt;B</code></pre><p>高中的时候之所以能够卷生卷死，实际上确实在我这是有一个这样的逻辑的，主要矛盾给放到上个好大学上面，然后十分频繁的考试又能够有效的将我的学习成果量化出来转变为动力，这个正循环确实是从初中开始一直支撑我走到大学。</p><p>但是大学以来这个学习的正循环很显然被打破了，总是感觉学习没啥意思，学起来也没啥（同时也能发现我这快两年了大多数情况下还是这个德行）</p><p>一个是要找到开始学习的动力，这个确实很虚而且我自己也很需要，对于我自己而言实际上我也没有想明白；一个是要找到能将学习进度转换为下一步的策略，这个我觉得我也比较缺少；再一个可能还有个技巧，连带着后文一起讲吧。</p><p>然后是为什么干活时间总是比别人久，我觉得两方面原因，一个是感觉有的东西他真没必要追求最好，比如舍友他们的目标就是做完而已，毕竟做完就能有资格，所以他们做的快；跟我在一起的搭档也是配完音就不返音不怎么修改，因为实际上第一遍也能展示自己的百分之八十，为什么还要投入更多的时间在上面只为那百分之二十呢？霓虹那边我记得看泡沫年代的微观经济学分析的时候有这样一个例子，企业为了去节约成本，把目光放在了让员工节约最后的那一点边角料上，为了节约边角料去浪费巨量的人力成本。我这样做又和日本企业节约边角料有什么区别呢？这和以前上课插入浪费时间的例行公事部分的时候老师安慰“多学一点没有什么害处”又有多大的区别呢？歌颂完美是好，但是很多情况下我也没有必要去追求完美，因为有的东西的完美的性价比真的不如我再拿时间去干别的事。</p><p>于是就又引到了二八定理上，百分之八十的收益是在百分之二十的时间里面，二要不要花费这百分之八十的时间去完成这个百分之二十还要掂量掂量，看他值不值得，能不能提供给我应有的成绩，足量的进行下一步学习的动力。</p><p>当然话是这么讲，我写这篇文章耽误我其他事又与上述说法相违背了呢）</p><p>话继续拐过来，第二个原因就是无法进行心流状态。中学的时候我接触手机之类的东西远没有现在多，现在干什么活干着干着总会倾向于开摆，比如我写代码写一半开始写这篇稿子就是其中之一。这一点我觉得，一个是要降低娱乐的吸引力，第二个又回到上述的那个巴普洛夫里面，要利用这种正反馈机制，来让这个学习研究更吸引自己。</p><p>ok大概就这么多，吸取上述的经验，一共两个事：</p><ul><li>要明白自己学习的奖励机制是啥，把自己当成巴普洛夫的狗</li><li>要进行取舍，用二八法来决定做到什么程度，杜绝完美主义</li></ul><p>差不多就写这么多，然后我要践行上面的东西了，再</p>]]></content>
    
    
    <categories>
      
      <category>反思</category>
      
    </categories>
    
    
    <tags>
      
      <tag>一些思考</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>岭回归与Lasso回归-ridge&amp;lasso</title>
    <link href="/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E5%B2%AD%E5%9B%9E%E5%BD%92%E4%B8%8ELasso%E5%9B%9E%E5%BD%92/"/>
    <url>/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E5%B2%AD%E5%9B%9E%E5%BD%92%E4%B8%8ELasso%E5%9B%9E%E5%BD%92/</url>
    
    <content type="html"><![CDATA[<h1 id="岭回归与lasso回归完全解析">岭回归与Lasso回归完全解析</h1><h2 id="一为什么需要正则化回归">一、为什么需要正则化回归？</h2><h3 id="ols的困境">1. OLS的困境</h3><p>多元线性回归（OLS）是建模的基础方法，但当数据存在<strong>多重共线性</strong>或<strong>变量过多</strong>时，OLS会面临两大问题：- <strong>系数估计不稳定</strong>：微小数据变动导致系数剧烈波动 -<strong>过拟合风险</strong>：模型在训练集表现好，但泛化能力差</p><h3 id="正则化的引入">2. 正则化的引入</h3><p>通过在损失函数中加入<strong>惩罚项</strong>，限制模型复杂度： -<strong>岭回归（Ridge）</strong>：L2正则化 -<strong>Lasso回归</strong>：L1正则化</p><hr /><h2 id="二数学原理从ols到正则化">二、数学原理：从OLS到正则化</h2><h3 id="ols回归">1. OLS回归</h3><p>损失函数：<br /><span class="math display">\[\min_{\beta} \sum_{i=1}^n (y_i - \beta_0 - \sum_{j=1}^p \beta_jx_{ij})^2\]</span></p><h3 id="岭回归ridge">2. 岭回归（Ridge）</h3><p>加入L2范数（欧氏范数）惩罚项（λ控制惩罚力度）：<br /><span class="math display">\[\min_{\beta} \left[ \sum_{i=1}^n (y_i - \beta_0 - \sum_{j=1}^p \beta_jx_{ij})^2 + \lambda \sum_{j=1}^p \beta_j^2 \right]\]</span></p><p><strong>特点</strong>： - 所有系数被等比例压缩，但不会归零 -解决多重共线性问题，提升模型稳定性 -是以放弃无偏性、降低精度为代价解决病态矩阵问题的回归方法</p><h3 id="lasso回归">3. Lasso回归</h3><p>加入L1（曼哈顿范数）惩罚项：<br /><span class="math display">\[\min_{\beta} \left[ \sum_{i=1}^n (y_i - \beta_0 - \sum_{j=1}^p \beta_jx_{ij})^2 + \lambda \sum_{j=1}^p |\beta_j| \right]\]</span></p><p><strong>特点</strong>： -可将不重要变量的系数压缩至零，实现<strong>变量选择</strong> -适用于高维数据（变量数&gt;样本数）</p><hr /><h2id="三核心操作正则化参数λ的选择">三、核心操作：正则化参数λ的选择</h2><h3 id="交叉验证k-fold-cv">1. 交叉验证（K-Fold CV）</h3><ul><li><strong>步骤</strong>：将数据分为K份，轮流用K-1份训练，1份验证，计算平均误差</li><li><strong>目标</strong>：选择使验证误差最小的λ值</li></ul><h3 id="正则化路径">2. 正则化路径</h3><ul><li><strong>岭回归</strong>：系数随λ增大逐渐趋近于零</li><li><strong>Lasso</strong>：系数随λ增大会突然变为零</li></ul><p><strong>Python示例（可视化路径）</strong>： <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LassoCV, RidgeCV<br><span class="hljs-keyword">import</span> matplotlib.pyplot <span class="hljs-keyword">as</span> plt<br><br><span class="hljs-comment"># Lasso路径</span><br>alphas = np.logspace(-<span class="hljs-number">4</span>, <span class="hljs-number">0</span>, <span class="hljs-number">100</span>)<br>coefs = []<br><span class="hljs-keyword">for</span> alpha <span class="hljs-keyword">in</span> alphas:<br>    lasso = Lasso(alpha=alpha)<br>    lasso.fit(X, y)<br>    coefs.append(lasso.coef_)<br><br>plt.plot(alphas, coefs)<br>plt.xscale(<span class="hljs-string">&#x27;log&#x27;</span>)<br>plt.xlabel(<span class="hljs-string">&#x27;λ&#x27;</span>)<br>plt.ylabel(<span class="hljs-string">&#x27;Coefficients&#x27;</span>)<br>plt.title(<span class="hljs-string">&#x27;Lasso Regularization Path&#x27;</span>)<br></code></pre></td></tr></table></figure></p><hr /><h2 id="四实战案例棉花产量预测">四、实战案例：棉花产量预测</h2><h3 id="数据说明">1. 数据说明</h3><ul><li><strong>自变量</strong>：种子费、化肥费、农药费、机械费、灌溉费</li><li><strong>因变量</strong>：棉花单产（1990-2007年数据）</li></ul><h3 id="操作流程python实现">2. 操作流程（Python实现）</h3><h4 id="数据标准化">(1) 数据标准化</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.preprocessing <span class="hljs-keyword">import</span> StandardScaler<br>scaler = StandardScaler()<br>X_scaled = scaler.fit_transform(X)<br></code></pre></td></tr></table></figure><h4 id="lasso回归建模">(2) Lasso回归建模</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> sklearn.linear_model <span class="hljs-keyword">import</span> LassoCV<br><br><span class="hljs-comment"># 10折交叉验证选择λ</span><br>lasso = LassoCV(cv=<span class="hljs-number">10</span>, random_state=<span class="hljs-number">42</span>)<br>lasso.fit(X_scaled, y)<br><br><span class="hljs-comment"># 输出结果</span><br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;最优λ：&quot;</span>, lasso.alpha_)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;非零系数：&quot;</span>, lasso.coef_)<br></code></pre></td></tr></table></figure><h4 id="结果解读">(3) 结果解读</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs css">最优λ：<span class="hljs-number">0.05</span><br>非零系数：种子费<span class="hljs-selector-attr">[0.32]</span>、农药费<span class="hljs-selector-attr">[-0.34]</span>、灌溉费<span class="hljs-selector-attr">[0.74]</span><br></code></pre></td></tr></table></figure><ul><li><strong>结论</strong>：机械费、化肥费被剔除，模型保留3个关键变量</li></ul><hr /><h2 id="五注意">五、注意</h2><h3 id="必须标准化数据">1. 必须标准化数据</h3><ul><li><strong>原因</strong>：正则化对尺度敏感，大范围变量会主导惩罚项</li><li><strong>方法</strong>：使用<code>StandardScaler</code>将变量标准化为均值为0，方差为1</li></ul><h3 id="如何解释系数">2. 如何解释系数？</h3><ul><li><strong>岭回归</strong>：系数代表变量对目标的影响方向，但大小受λ影响</li><li><strong>Lasso</strong>：非零系数表示重要变量，但绝对值无直接可比性</li></ul><h3 id="λ的选择陷阱">3. λ的选择陷阱</h3><ul><li><strong>过小</strong>：接近OLS，失去正则化效果</li><li><strong>过大</strong>：所有系数被过度压缩，模型欠拟合</li></ul><hr /><h2 id="六模型对比与选择">六、模型对比与选择</h2><table><thead><tr><th>指标</th><th>岭回归</th><th>Lasso回归</th></tr></thead><tbody><tr><td>正则化类型</td><td>L2</td><td>L1</td></tr><tr><td>系数特性</td><td>连续压缩，不归零</td><td>稀疏性（部分归零）</td></tr><tr><td>适用场景</td><td>多重共线性严重</td><td>高维数据/变量选择</td></tr><tr><td>计算复杂度</td><td>解析解（快速）</td><td>需迭代优化（较慢）</td></tr><tr><td>软件实现</td><td><code>RidgeCV</code>（Python）</td><td><code>LassoCV</code>（Python）</td></tr></tbody></table><hr /><h2 id="七常见问题解答">七、常见问题解答</h2><h3 id="q1何时用岭回归何时用lasso">Q1：何时用岭回归？何时用Lasso？</h3><ul><li><strong>岭回归</strong>：变量均重要，但存在共线性（如经济指标分析）</li><li><strong>Lasso</strong>：变量数多，需筛选关键因素（如基因数据建模）</li></ul><h3 id="q2elastic-net是什么">Q2：Elastic Net是什么？</h3><ul><li><strong>混合正则化</strong>：L1+L2，平衡变量选择与稳定性</li><li><strong>公式</strong>：<br /><span class="math display">\[\text{损失函数} + \lambda (\alpha \sum|\beta_j| + (1-\alpha) \sum \beta_j^2)\]</span></li></ul><h3 id="q3如何解释λ0的情况">Q3：如何解释λ=0的情况？</h3><ul><li>λ=0时，模型退化为普通OLS回归</li></ul>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>预测类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>多元线性回归分析</title>
    <link href="/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/"/>
    <url>/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E5%A4%9A%E5%85%83%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="多元线性回归分析">多元线性回归分析</h1><p>回归分析是数据分析的核心工具，旨在通过研究自变量 X 与因变量 Y的相关性，揭示 Y的形成机制，并实现预测。多元线性回归通过线性组合解释变量，量化各因素对结果的影响权重，广泛应用于经济、管理、工程等领域。</p><hr /><h2 id="一用途">一、用途</h2><ol type="1"><li><strong>识别重要变量</strong>：筛选出与 Y 显著相关的X（如逐步回归法）；<br /></li><li><strong>判断方向性</strong>：确定 X 对 Y 的正/负向影响；<br /></li><li><strong>估计权重</strong>：通过回归系数反映变量的相对重要性。</li></ol><hr /><h2 id="二构建">二、构建</h2><p><span class="math display">\[Y_i = \beta_0 + \beta_1 X_{1i} + \beta_2 X_{2i} + \cdots + \beta_kX_{ki} + \mu_i\]</span> 其中 <span class="math inline">\(\beta_0\)</span>为截距项，<span class="math inline">\(\beta_j\)</span>为偏回归系数，<span class="math inline">\(\mu_i\)</span> 为扰动项。</p><ul><li><span class="math inline">\(\beta_j\)</span>：控制其他变量时，<spanclass="math inline">\(X_j\)</span> 每增加1单位，<spanclass="math inline">\(Y\)</span> 平均变化 <spanclass="math inline">\(\beta_j\)</span> 单位；<br /></li><li>可以先 <span class="math inline">\(Z-Score\)</span>标准化数据再看回归系数，绝对值越大贡献越显著。</li></ul><hr /><h2 id="三模型检验与优化">三、模型检验与优化</h2><h3 id="拟合优度">1. 拟合优度</h3><ul><li><strong>判定系数 <spanclass="math inline">\(R^2\)</span></strong>：反映模型解释的变异比例，<spanclass="math inline">\(R^2 \in [0,1]\)</span>，越高越好；<br /></li><li><strong>调整 <spanclass="math inline">\(R^2\)</span></strong>：避免自变量过多导致的虚假高拟合。</li></ul><h3 id="异方差处理">2. 异方差处理</h3><ul><li><strong>症状</strong>：残差随预测值增大而扩散；<br /></li><li><strong>诊断</strong>：BP检验、怀特检验；<br /></li><li><strong>解决</strong>：使用 <code>OLS + 稳健标准误</code>或广义最小二乘法（GLS）。</li></ul><h3 id="多重共线性">3. 多重共线性</h3><ul><li><strong>症状</strong>：系数符号反常、<spanclass="math inline">\(t\)</span> 检验不显著但 <spanclass="math inline">\(R^2\)</span> 较高；<br /></li><li><strong>诊断</strong>：方差膨胀因子（VIF &gt; 10 为严重）；<br /></li><li><strong>解决</strong>：剔除高相关变量、增大样本量、主成分降维。</li><li>具体这个又可以开另外一个blogs来说明。</li></ul><hr /><h2 id="四stata示例">四、Stata示例</h2><h3 id="基础回归">1. 基础回归</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-comment">* 导入数据并描述统计</span><br>import excel <span class="hljs-string">&quot;data.xlsx&quot;</span>, firstrow <span class="hljs-keyword">clear</span><br><span class="hljs-keyword">summarize</span> Y X1 X2<br><br><span class="hljs-comment">* 多元回归（含虚拟变量）</span><br><span class="hljs-keyword">regress</span> Y X1 X2 i.region, robust<br></code></pre></td></tr></table></figure><h3 id="逐步回归">2. 逐步回归</h3><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs stata"><span class="hljs-comment">* 向前逐步回归（显著性阈值5%）</span><br><span class="hljs-keyword">stepwise</span> <span class="hljs-keyword">regress</span> Y X1 X2 X3, pe(0.05) robust<br><br><span class="hljs-comment">* 向后逐步回归</span><br><span class="hljs-keyword">stepwise</span> <span class="hljs-keyword">regress</span> Y X1 X2 X3, <span class="hljs-keyword">pr</span>(0.05) robust<br></code></pre></td></tr></table></figure><hr /><h2 id="五应用与创新">五、应用与创新</h2><h3 id="局限性">1. 局限性</h3><ul><li><strong>内生性</strong>：遗漏变量或测量误差导致系数有偏，详细说明就是如果满足误差项<span class="math inline">\(μ\)</span>和所有的自变量均不相关，则称该回归模型具有外生性；如果相关，则存在内生性，内生性会导致回归系数估计的不准确：不满足无偏和一致性，需引入工具变量；<br /></li><li><strong>模型过拟合</strong>：变量过多时，需通过交叉验证或正则化（LASSO/Ridge）优化；<br /></li><li><strong>非线性关系误判</strong>：可通过变量变换（如取对数）或引入交互项。</li></ul><h3 id="创新拓展">2. 创新拓展</h3><ul><li><p><strong>结合主成分分析</strong>：对高维数据降维后回归，解决多重共线性；</p></li><li><p><strong>混合效应模型</strong>：处理面板数据中的个体/时间效应；</p></li><li><p><strong>机器学习融合</strong>：用随机森林筛选重要变量，再构建回归模型。</p></li><li><p><strong>取对数</strong>：取对数意味着原被解释变量对解释变量的弹性，即百分比的变化而不是数值的变化，好处有：（1）减弱数据的异方差性（2）如果变量本身不符合正态分布，取了对数后可能渐近服从正态分布（3）模型形式的需要，让模型具有经济学意义。</p></li><li><p><strong>事先标准化易于解释</strong>：可以先 <spanclass="math inline">\(Z-Score\)</span>标准化数据再看回归系数，绝对值越大贡献越显著。</p></li><li><p><strong>虚拟变量引入</strong>：</p><p>定性变量（如性别、地域）需转换为0-1虚拟变量。例如：<br /><span class="math display">\[\text{工资} = \beta_0 + \delta_0 \text{Female}_i + \beta_1\text{教育年限}_i + \mu_i\]</span> <span class="math inline">\(\delta_0\)</span>表示在同等教育水平下，女性与男性的工资差异。$ _i$ 的0-1标识男女</p></li></ul><hr /><h2 id="六案例分析">六、案例分析</h2><p>这俩都是清风数学建模的东西：</p><h3 id="案例1电商产品评价量影响因素">案例1：电商产品评价量影响因素</h3><ul><li><strong>目标</strong>：探究价格、品牌、产地等因素对销量的影响；<br /></li><li><strong>方法</strong>：标准化回归系数 + 虚拟变量；<br /></li><li><strong>结论</strong>：价格负向显著，进口品牌溢价明显。</li></ul><h3 id="案例2人口预测">案例2：人口预测</h3><ul><li><strong>数据</strong>：历史人口与经济指标；<br /></li><li><strong>模型</strong>：引入Logistic曲线拟合增长趋势；<br /></li><li><strong>创新</strong>：结合时间序列ARIMA预测经济变量。</li></ul>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>预测类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>灰色预测模型-GM(n,m)</title>
    <link href="/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-GM(n,m)/"/>
    <url>/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E7%81%B0%E8%89%B2%E9%A2%84%E6%B5%8B%E6%A8%A1%E5%9E%8B-GM(n,m)/</url>
    
    <content type="html"><![CDATA[<h1 id="灰色预测模型-gmnm">灰色预测模型-GM(n,m)</h1><p>具体推导部分由于本人这次数模用不上这个模型，ai生成之后还没有审核过。</p><h2 id="一背景">一、背景</h2><h3 id="数据困境">1. 数据困境</h3><p>在数学建模中，我们常遇到<strong>数据量少</strong>（4~10期）、<strong>信息不完整</strong>的情况。例如：- 某城市过去5年的GDP数据 - 某新型材料3年的实验测试记录 -某传染病爆发初期的7天感染人数</p><p><strong>传统预测方法（如回归分析、时间序列）需要大量数据支撑</strong>，而灰色预测能在小样本，少信息的条件下挖掘规律。</p><h3 id="灰色系统理论">2. 灰色系统理论</h3><ul><li><strong>白色系统</strong>：信息完全明确（如电路系统）</li><li><strong>灰色系统</strong>：部分信息已知，部分未知（如经济系统）</li><li><strong>黑色系统</strong>：信息完全未知（如宇宙暗物质）</li></ul><p>灰色预测正是针对<strong>灰色系统</strong>的建模方法，核心思想：<strong>通过数据加工处理，将杂乱无章的原始数据整理成规律性较强的序列，然后建立微分方程来预测未来发展趋势</strong>。</p><h3 id="使用场景">3.使用场景</h3><p>下面是清风数学建模的看法：</p><p>使用哪种模型进行预测是仁者见 仁智者见智的事情：</p><p>（1）数据是以年份度量的非负数据（如果是月份或者季度数据一定要用我们上一讲学过的时间序列模型）；</p><p>（2）数据能经过准指数规律的检验（除了前两期外，后面至少90%的期数的光滑比要低于0.5）；</p><p>（3）数据的期数较短且和其他数据之间的关联性不强（小于等于10，也不能太短了，比如只有3期数据），要是数据期数较长，一般用传统的时间序列模型比较合适。</p><hr /><h2 id="二详解--以gm11为例">二、详解--以GM(1,1)为例</h2><h3 id="数据预处理">1. 数据预处理</h3><h4 id="数据正向化">(1) 数据正向化</h4><p>详见评价类模型里面的相关正向化策略。</p><h4 id="数据检验">(2) 数据检验</h4><ul><li><strong>级比检验</strong>：验证数据是否适合GM建模 <spanclass="math display">\[\sigma(k) = \frac{x^{(0)}(k)}{x^{(0)}(k-1)} \quad (k=2,3,...,n)\]</span> 要求所有级比落在区间 <spanclass="math inline">\((e^{-\frac{2}{n+1}}, e^{\frac{2}{n+1}})\)</span>内</li></ul><hr /><h3 id="模型构建四步核心操作">2. 模型构建：四步核心操作</h3><h4 id="步骤1一次累加生成1-ago">步骤1：一次累加生成（1-AGO）</h4><p><strong>目的</strong>：将波动数据转化为单调增长序列<br /><span class="math display">\[x^{(1)}(k) = \sum_{i=1}^k x^{(0)}(i) \quad (k=1,2,...,n)\]</span></p><p><strong>示例</strong>：</p><table><thead><tr><th>原始数据</th><th>2.87</th><th>3.28</th><th>3.34</th><th>3.39</th><th>3.68</th></tr></thead><tbody><tr><td>累加序列</td><td>2.87</td><td>6.15</td><td>9.49</td><td>12.88</td><td>16.56</td></tr></tbody></table><h4 id="步骤2紧邻均值生成z序列">步骤2：紧邻均值生成（Z序列）</h4><p><strong>作用</strong>：构造微分方程的离散近似<br /><span class="math display">\[z^{(1)}(k) = 0.5x^{(1)}(k) + 0.5x^{(1)}(k-1) \quad (k=2,3,...,n)\]</span></p><p><strong>接上例</strong>： | Z序列 | - | (2.87+6.15)/2=4.51 |(6.15+9.49)/2=7.82 | ... |</p><h4 id="步骤3建立灰色微分方程">步骤3：建立灰色微分方程</h4><p><span class="math display">\[x^{(0)}(k) + a z^{(1)}(k) = b\]</span> 通过最小二乘法求解参数： <span class="math display">\[\begin{bmatrix}a \\b\end{bmatrix} = (B^T B)^{-1} B^T Y\]</span> 其中： <span class="math display">\[B = \begin{bmatrix}-z^{(1)}(2) &amp; 1 \\-z^{(1)}(3) &amp; 1 \\\vdots &amp; \vdots \\-z^{(1)}(n) &amp; 1\end{bmatrix}, \quadY = \begin{bmatrix}x^{(0)}(2) \\x^{(0)}(3) \\\vdots \\x^{(0)}(n)\end{bmatrix}\]</span></p><h4 id="步骤4求解白化方程">步骤4：求解白化方程</h4><p>得到连续型微分方程： <span class="math display">\[\frac{dx^{(1)}}{dt} + a x^{(1)} = b\]</span> 其解为： <span class="math display">\[\hat{x}^{(1)}(t) = \left(x^{(0)}(1) - \frac{b}{a}\right)e^{-a(t-1)} +\frac{b}{a}\]</span></p><p><strong>预测值还原</strong>： <span class="math display">\[\hat{x}^{(0)}(k) = \hat{x}^{(1)}(k) - \hat{x}^{(1)}(k-1)\]</span></p><hr /><h3 id="模型检验">3. 模型检验</h3><h4 id="准指数规律检验关键">(1) 准指数规律检验（关键！）</h4><ul><li><strong>光滑比</strong>：((k) = )</li><li><strong>通过标准</strong>：<ul><li>前两期可放宽</li><li>后80%期数的((k)&lt;0.5)</li></ul></li></ul><h4 id="发展系数检验">(2) 发展系数检验</h4><table><thead><tr><th>发展系数(-a)</th><th>适用性</th></tr></thead><tbody><tr><td>&lt;0.3</td><td>中长期预测（5-10期）</td></tr><tr><td>0.3~0.5</td><td>短期预测（1-3期）</td></tr><tr><td>&gt;0.5</td><td>需残差修正或更换模型</td></tr></tbody></table><h4 id="残差检验">(3) 残差检验</h4><p><span class="math display">\[\text{平均相对误差} = \frac{1}{n-1}\sum_{k=2}^n\left|\frac{x^{(0)}(k)-\hat{x}^{(0)}(k)}{x^{(0)}(k)}\right|\]</span> - &lt;10%：高精度 - 10%~20%：合格 - &gt;20%：模型不可信</p><hr /><h2id="三matlab实战长江水质污染预测">三、MATLAB实战：长江水质污染预测</h2><h3 id="数据准备">1. 数据准备</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 1995-2004年排污量（万吨）</span><br>data = [<span class="hljs-number">174</span>, <span class="hljs-number">179</span>, <span class="hljs-number">183</span>, <span class="hljs-number">189</span>, <span class="hljs-number">207</span>, <span class="hljs-number">234</span>, <span class="hljs-number">220.5</span>, <span class="hljs-number">256</span>, <span class="hljs-number">270</span>, <span class="hljs-number">285</span>];<br></code></pre></td></tr></table></figure><h3 id="完整代码实现">2. 完整代码实现</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[predict, a, b]</span> = <span class="hljs-title">GM11</span><span class="hljs-params">(data, forecast_num)</span></span><br>    <span class="hljs-comment">% 数据检验</span><br>    n = <span class="hljs-built_in">length</span>(data);<br>    lambda = data(<span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>)./data(<span class="hljs-number">1</span>:<span class="hljs-keyword">end</span><span class="hljs-number">-1</span>);<br>    range = [<span class="hljs-built_in">exp</span>(<span class="hljs-number">-2</span>/(n+<span class="hljs-number">1</span>)), <span class="hljs-built_in">exp</span>(<span class="hljs-number">2</span>/(n+<span class="hljs-number">1</span>))];<br>    <span class="hljs-keyword">if</span> any(lambda &lt; range(<span class="hljs-number">1</span>)) || any(lambda &gt; range(<span class="hljs-number">2</span>))<br>        error(<span class="hljs-string">&#x27;级比检验未通过！&#x27;</span>);<br>    <span class="hljs-keyword">end</span><br>    <br>    <span class="hljs-comment">% 累加生成</span><br>    X1 = cumsum(data);<br>    <br>    <span class="hljs-comment">% 紧邻均值</span><br>    Z = (X1(<span class="hljs-number">1</span>:<span class="hljs-keyword">end</span><span class="hljs-number">-1</span>) + X1(<span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>)) / <span class="hljs-number">2</span>;<br>    <br>    <span class="hljs-comment">% 构建矩阵</span><br>    B = [-Z&#x27;, <span class="hljs-built_in">ones</span>(n<span class="hljs-number">-1</span>,<span class="hljs-number">1</span>)];<br>    Y = data(<span class="hljs-number">2</span>:<span class="hljs-keyword">end</span>)&#x27;;<br>    <br>    <span class="hljs-comment">% 参数估计</span><br>    u = (B&#x27;*B) \ B&#x27;*Y;<br>    a = u(<span class="hljs-number">1</span>);<br>    b = u(<span class="hljs-number">2</span>);<br>    <br>    <span class="hljs-comment">% 模型求解</span><br>    predict_X1 = (data(<span class="hljs-number">1</span>)-b/a)*<span class="hljs-built_in">exp</span>(-a*(<span class="hljs-number">0</span>:n+forecast_num<span class="hljs-number">-1</span>)) + b/a;<br>    predict = diff(predict_X1);<br>    <br>    <span class="hljs-comment">% 检验</span><br>    error = <span class="hljs-built_in">abs</span>(data - predict(<span class="hljs-number">1</span>:n))./data;<br>    <span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;平均相对误差：&#x27;</span>, num2str(<span class="hljs-built_in">mean</span>(error)*<span class="hljs-number">100</span>), <span class="hljs-string">&#x27;%&#x27;</span>]);<br><span class="hljs-keyword">end</span><br></code></pre></td></tr></table></figure><h3 id="运行结果">3. 运行结果</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs matlab">&gt;&gt; [predict, a, b] = GM11(data, <span class="hljs-number">3</span>);<br>平均相对误差：<span class="hljs-number">4.23</span><span class="hljs-comment">%</span><br>&gt;&gt; <span class="hljs-built_in">disp</span>(predict(<span class="hljs-number">11</span>:<span class="hljs-number">13</span>))  <span class="hljs-comment">% 预测2005-2007年</span><br>  <span class="hljs-number">303.01</span>   <span class="hljs-number">324.33</span>   <span class="hljs-number">346.72</span><br></code></pre></td></tr></table></figure><hr /><h2 id="四避坑指南">四、避坑指南</h2><h3 id="数据量不足4期">1. 数据量不足4期</h3><ul><li><strong>处理方法</strong>：使用三种GM变体（传统/新信息/新陈代谢）求平均</li></ul><h3 id="出现负值预测">2. 出现负值预测</h3><ul><li><strong>原因</strong>：未进行正向化处理</li><li><strong>解决</strong>：检查数据预处理步骤，使用(x' = x - (x) +1)平移</li></ul><h3 id="长期预测失真">3. 长期预测失真</h3><ul><li><strong>对策</strong>：采用滚动预测，每预测一期就更新模型</li></ul><h3 id="如何提高精度">4. 如何提高精度</h3><ul><li>残差修正：对预测残差再次建立GM(1,1)模型</li><li>组合预测：与ARIMA、指数平滑等模型加权结合</li></ul><hr /><h2 id="五应用场景推荐">五、应用场景推荐</h2><table><thead><tr><th>场景</th><th>适用性</th><th>示例</th></tr></thead><tbody><tr><td>经济指标预测</td><td>★★★★★</td><td>GDP、人口增长率</td></tr><tr><td>工程技术预测</td><td>★★★★☆</td><td>材料疲劳寿命、设备故障率</td></tr><tr><td>生态环境预测</td><td>★★★★☆</td><td>污染物浓度、碳排放趋势</td></tr><tr><td>突发事件预测</td><td>★★☆☆☆</td><td>疫情传播、灾害损失</td></tr></tbody></table>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>预测类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>拟合算法</title>
    <link href="/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E6%8B%9F%E5%90%88%E7%AE%97%E6%B3%95/"/>
    <url>/2025/05/02/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E9%A2%84%E6%B5%8B%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-05-02-%E6%8B%9F%E5%90%88%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1 id="拟合算法">拟合算法</h1><p>与插值算法不同，拟合算法不要求曲线严格经过所有数据点，而是寻求一个函数（曲线），使得该曲线在某种准则下与所有数据点的总体误差最小。拟合的核心目标是<strong>通过对已有数据特征拟合构建最佳数学模型</strong>，广泛应用于趋势预测、参数估计等领域。</p><hr /><h2 id="一与插值的区别">一、与插值的区别</h2><table><thead><tr><th>方法</th><th>特点</th><th>适用场景</th></tr></thead><tbody><tr><td>插值</td><td>曲线必须经过所有样本点，易受龙格现象影响</td><td>数据精确、样本量少</td></tr><tr><td>拟合</td><td>曲线无需经过所有点，通过最小化误差平方和寻找全局最优解</td><td>数据含噪声、趋势分析</td></tr></tbody></table><p>当样本点过多时，高阶插值多项式会出现震荡现象，而拟合算法通过低阶函数（如线性、指数函数）能更稳定地反映数据趋势。</p><hr /><h2 id="二原理">二、原理</h2><h3 id="数学模型">1. 数学模型</h3><p>设样本点为 <span class="math inline">\((x_i, y_i), i = 1, 2, \ldots,n\)</span>，拟合曲线为 <span class="math inline">\(y = kx +b\)</span>，目标是最小化<strong>误差平方和</strong>： <spanclass="math display">\[\min_{k,b} \sum_{i=1}^{n} (y_i - \hat{y}_i)^2 \quad \text{其中} \quad\hat{y}_i = kx_i + b\]</span></p><h3 id="参数求解">2. 参数求解</h3><p>通过求偏导并令导数为零，可得闭合解： <span class="math display">\[k = \frac{n \sum x_i y_i - \sum x_i \sum y_i}{n \sum x_i^2 - (\sumx_i)^2}, \quadb = \frac{\sum x_i^2 \sum y_i - \sum x_i \sum x_i y_i}{n \sum x_i^2 -(\sum x_i)^2}\]</span></p><h3 id="拓展">3. 拓展</h3><p>多项式线性，如二次函数等： <span class="math display">\[\quad \hat{y}_i = kx_i + kx_i^2 + b\]</span></p><hr /><h2 id="三拟合优度评价">三、拟合优度评价</h2><h3 id="判定系数-r2">1. 判定系数 <spanclass="math inline">\(R^2\)</span></h3><ul><li><strong>总体平方和（SST）</strong>：反映数据总波动<br /><span class="math display">\[ SST = \sum_{i=1}^n (y_i - \overline{y})^2\]</span></li><li><strong>误差平方和（SSE）</strong>：反映拟合误差<br /><span class="math display">\[ SSE = \sum_{i=1}^n (y_i - \hat{y}_i)^2\]</span></li><li><strong>回归平方和（SSR）</strong>：反映模型解释的波动<br /><span class="math display">\[ SSR = \sum_{i=1}^n (\hat{y}_i -\overline{y})^2 \]</span></li></ul><p><strong>拟合优度</strong>：<br /><span class="math display">\[ R^2 = \frac{SSR}{SST} = 1 -\frac{SSE}{SST} \]</span><br />- $ R^2 <span class="math inline">\(，越接近1说明拟合效果越好。- **注意**：\)</span> R^2 $ 仅适用于线性参数模型（如 $ y = a + bx^2 $视为线性，因其对参数 (a,b) 为线性）。</p><hr /><h2 id="四matlab实现">四、MATLAB实现</h2><h3 id="代码示例">1. 代码示例</h3><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 导入数据</span><br>load data1<br><span class="hljs-built_in">plot</span>(x, y, <span class="hljs-string">&#x27;o&#x27;</span>)<br>xlabel(<span class="hljs-string">&#x27;x&#x27;</span>); ylabel(<span class="hljs-string">&#x27;y&#x27;</span>);<br><br><span class="hljs-comment">% 计算参数</span><br>n = <span class="hljs-built_in">length</span>(x);<br>k = (n*sum(x.*y) - sum(x)*sum(y)) / (n*sum(x.^<span class="hljs-number">2</span>) - sum(x)^<span class="hljs-number">2</span>);<br>b = (sum(x.^<span class="hljs-number">2</span>)*sum(y) - sum(x)*sum(x.*y)) / (n*sum(x.^<span class="hljs-number">2</span>) - sum(x)^<span class="hljs-number">2</span>);<br><br><span class="hljs-comment">% 绘制拟合曲线</span><br><span class="hljs-built_in">hold</span> on<br>fplot(@(x) k*x + b, [<span class="hljs-built_in">min</span>(x), <span class="hljs-built_in">max</span>(x)])<br><span class="hljs-built_in">legend</span>(<span class="hljs-string">&#x27;样本数据&#x27;</span>, <span class="hljs-string">&#x27;拟合曲线&#x27;</span>)<br></code></pre></td></tr></table></figure><h3 id="拟合工具箱cftool">2. 拟合工具箱（cftool）</h3><p>输入 <code>cftool</code>调用MATLAB拟合工具箱，支持多种函数类型（多项式、指数、自定义方程），自动计算参数及拟合优度。</p><hr /><h2 id="五应用">五、应用</h2><h3 id="案例1美国人口预测">案例1：美国人口预测</h3><p>使用Logistic模型拟合历史数据： <span class="math display">\[x(t) = \frac{x_m}{1 + \left( \frac{x_m}{3.9} - 1 \right) e^{-r(t-1790)}}\]</span> 通过非线性最小二乘法估计参数 <spanclass="math inline">\(x_m\)</span> 和 <spanclass="math inline">\(r\)</span>，预测未来30年人口趋势。</p><h3 id="案例2鱼类生长模型">案例2：鱼类生长模型</h3><p>对鲨鱼体长-体重数据采用指数和正弦函数拟合，通过SSE选择最优模型：<span class="math display">\[\text{体长增长方程：} \quad y = 69.32e^{-0.004x} \quad (R^2 = 0.9704)\]</span></p><hr /><h2 id="六总结">六、总结</h2><ol type="1"><li><strong>适用场景</strong>：数据含噪声、需提取整体趋势、变量间关系复杂时优先选用拟合。</li><li><strong>模型选择</strong>：优先线性参数模型以利用 <spanclass="math inline">\(R^2\)</span> 评价，非线性模型直接比较SSE。</li><li><strong>工具推荐</strong>：MATLABcftool可快速实现多函数拟合与可视化。</li></ol>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>预测类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>异常值检验</title>
    <link href="/2025/05/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/2025-05-01-%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/"/>
    <url>/2025/05/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86/2025-05-01-%E5%BC%82%E5%B8%B8%E5%80%BC%E5%A4%84%E7%90%86/</url>
    
    <content type="html"><![CDATA[<p>还是碰到了异常值处理的问题，然后这里还是写篇blogs汇总一些相关的算法，我尽量全面一些吧，### <strong>1. 基于统计的方法</strong></p><h4 id="修正z-score法"><strong>（1）修正Z-Score法</strong></h4><ul><li><strong>适用场景</strong>：单变量数据，数据分布轻微偏离正态或存在少量异常值干扰时。</li><li><strong>使用方法</strong>：<ol type="1"><li>计算数据的中位数（Median）和MAD（Median Absolute Deviation）。<br /></li><li>使用修正Z-Score公式：$ = $ 。<br /></li><li>设定阈值（如 |修正Z| &gt; 3），超出视为异常值。</li></ol></li><li><strong>本质</strong>：用中位数和MAD替代均值和标准差，减少异常值对统计量的影响。<br /></li><li><strong>局限性</strong>：仅适用于单变量，对极端偏态分布可能不敏感。<br /></li><li><strong>优势</strong>：比传统Z-Score更稳健，适合处理有污染的数据。</li></ul><hr /><h4 id="grubbs检验"><strong>（2）Grubbs检验</strong></h4><ul><li><strong>适用场景</strong>：严格正态分布的单变量数据，需检测单个异常值。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>假设数据服从正态分布，计算最大值或最小值的Grubbs统计量。<br /></li><li>对比临界值表（依赖样本量和显著性水平α），判断是否拒绝原假设（无异常值）。<br /></li></ol></li><li><strong>本质</strong>：通过假设检验识别单个异常值。<br /></li><li><strong>局限性</strong>：需严格正态性假设，且只能逐个检测。<br /></li><li><strong>优势</strong>：统计学意义明确，适合科研场景。</li></ul><hr /><h3 id="基于分位数的方法"><strong>2. 基于分位数的方法</strong></h3><h4 id="iqr法箱线图法"><strong>（1）IQR法（箱线图法）</strong></h4><ul><li><strong>适用场景</strong>：任意分布的单变量数据，尤其是偏态分布。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>计算Q1（25%分位数）、Q3（75%分位数）及IQR = Q3 - Q1。<br /></li><li>设定异常值范围：$ = Q1 - 1.5 , = Q3 + 1.5 $。<br /></li></ol></li><li><strong>本质</strong>：通过分位数定义数据的“正常范围”，对尾部数据敏感度低。<br /></li><li><strong>局限性</strong>：可能遗漏多变量组合异常，阈值固定（1.5倍IQR）。<br /></li><li><strong>优势</strong>：简单高效，无需分布假设。</li></ul><hr /><h4 id="百分位数截断法"><strong>（2）百分位数截断法</strong></h4><ul><li><strong>适用场景</strong>：经验分布未知，需快速截断极端值（如金融风控）。<br /></li><li><strong>使用方法</strong>：直接去除前α%和后β%的数据（如α=1%,β=1%）。<br /></li><li><strong>本质</strong>：基于经验分位数硬截断，依赖领域知识设定阈值。<br /></li><li><strong>局限性</strong>：可能误删正常数据，阈值选择主观。<br /></li><li><strong>优势</strong>：快速直接，适用于高噪声场景。基本上就等于瞎用。</li></ul><hr /><h3 id="基于距离的方法"><strong>3. 基于距离的方法</strong></h3><h4 id="马氏距离mahalanobis-distance"><strong>（1）马氏距离（MahalanobisDistance）</strong></h4><ul><li><strong>适用场景</strong>：多变量数据，变量间存在相关性（如身高体重组合异常）。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>计算数据协方差矩阵Σ及其逆矩阵。<br /></li><li>计算每个样本的马氏距离：$ D = $ 。<br /></li><li>基于χ²分布设定阈值（如置信度95%）。<br /></li></ol></li><li><strong>本质</strong>：考虑变量相关性的广义距离，识别多维空间中的离群点。<br /></li><li><strong>局限性</strong>：依赖协方差矩阵估计，对高维数据不稳定（需样本量&gt;维度）。<br /></li><li><strong>优势</strong>：全面捕捉多变量异常。</li></ul><hr /><h4 id="k近邻k-nn距离法"><strong>（2）K近邻（K-NN）距离法</strong></h4><ul><li><strong>适用场景</strong>：非结构化数据或局部异常检测（如图像、文本）。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>计算每个点到其K个最近邻的平均距离。<br /></li><li>距离超过阈值的点视为异常。<br /></li></ol></li><li><strong>本质</strong>：通过局部密度差异识别异常，稀疏区域的点更可能异常。<br /></li><li><strong>局限性</strong>：计算复杂度高，需选择K值。<br /></li><li><strong>优势</strong>：无需分布假设，适合复杂数据结构。</li></ul><hr /><h3 id="基于密度的方法"><strong>4. 基于密度的方法</strong></h3><h4 id="局部离群因子lof"><strong>（1）局部离群因子（LOF）</strong></h4><ul><li><strong>适用场景</strong>：多变量数据，检测局部密度异常的样本（如密集区域中的稀疏点）。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>计算每个点的局部密度（K邻域内点的密度）。<br /></li><li>LOF值 = 该点密度与邻居密度的平均比值，LOF ≫1 则为异常。<br /></li></ol></li><li><strong>本质</strong>：通过相对密度判断异常，解决全局方法在局部区域的盲区。<br /></li><li><strong>局限性</strong>：计算复杂度高，对K值敏感。<br /></li><li><strong>优势</strong>：能识别“局部”异常，适合非均匀分布数据。</li></ul><hr /><h3 id="机器学习方法"><strong>5. 机器学习方法</strong></h3><h4 id="孤立森林isolation-forest"><strong>（1）孤立森林（IsolationForest）</strong></h4><ul><li><strong>适用场景</strong>：高维数据、非结构化数据（如日志、时间序列）。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>构建多棵随机树，通过随机分割特征空间隔离样本。<br /></li><li>异常值因路径较短被快速隔离，计算异常分数。<br /></li></ol></li><li><strong>本质</strong>：异常值在特征空间中更易被“孤立”。<br /></li><li><strong>局限性</strong>：对局部异常可能不敏感，需调参（树的数量、深度）。<br /></li><li><strong>优势</strong>：线性时间复杂度，适合大规模数据。</li></ul><hr /><h4 id="dbscan聚类"><strong>（2）DBSCAN聚类</strong></h4><ul><li><strong>适用场景</strong>：基于密度的聚类，自动识别噪声点作为异常值。<br /></li><li><strong>使用方法</strong>：<ol type="1"><li>设定邻域半径ε和最小样本数min_samples。<br /></li><li>无法形成核心簇的点标记为噪声（异常值）。<br /></li></ol></li><li><strong>本质</strong>：将低密度区域点视为异常。<br /></li><li><strong>局限性</strong>：对ε和min_samples敏感，高维数据效果差。<br /></li><li><strong>优势</strong>：无需预设异常值比例，适合未知分布数据。</li></ul><hr /><h3id="总结注意事项与方法选择"><strong>总结：注意事项与方法选择</strong></h3><h4 id="注意事项"><strong>注意事项</strong></h4><ol type="1"><li><strong>避免盲目删除</strong>：异常值可能是关键信号（如欺诈、设备故障），需结合业务判断。<br /></li><li><strong>多变量协同分析</strong>：单变量方法可能遗漏组合异常（如身高正常但体重极低）。<br /></li><li><strong>动态调整阈值</strong>：流数据或分布漂移时，需滚动更新统计量（如移动窗口IQR）。<br /></li><li><strong>可视化验证</strong>：箱线图、散点图矩阵、t-SNE降维图辅助决策。</li></ol><h4 id="方法选择指南"><strong>方法选择指南</strong></h4><table><thead><tr><th><strong>场景特征</strong></th><th><strong>推荐方法</strong></th></tr></thead><tbody><tr><td>单变量、近似正态分布</td><td>修正Z-Score、3σ原则</td></tr><tr><td>单变量、偏态分布</td><td>IQR法、百分位数截断</td></tr><tr><td>多变量、变量相关</td><td>马氏距离、LOF</td></tr><tr><td>高维数据、计算效率要求高</td><td>孤立森林</td></tr><tr><td>局部异常检测</td><td>LOF、K-NN距离</td></tr><tr><td>无分布假设、自动化需求</td><td>DBSCAN、百分位数截断</td></tr></tbody></table><h4 id="核心原则"><strong>核心原则</strong></h4><ul><li><strong>简单优先</strong>：单变量数据优先用IQR或Z-Score。<br /></li><li><strong>领域适配</strong>：金融风控用百分位数截断，工业检测用LOF或孤立森林。<br /></li><li><strong>交叉验证</strong>：结合统计检验（如正态性检验）和业务反馈优化阈值。</li><li><strong>简单场景</strong>：IQR（稳健）、Z-Score（正态分布）。</li><li><strong>复杂场景</strong>：LOF（局部异常）、孤立森林（高维数据）。</li><li><strong>领域结合</strong>：根据业务背景选择方法（如百分位数截断用于金融风控）。</li><li><strong>交叉验证</strong>：结合统计检验（如正态性检验）和领域知识优化策略。</li></ul><p>当然，具体应用的话还是要看你的这个题目是第几题，时间多少，能拿多少时间来做这个东西。</p>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>数据处理</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>数学建模综述</title>
    <link href="/2025/04/21/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BB%BC%E8%BF%B0/"/>
    <url>/2025/04/21/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1%E7%BB%BC%E8%BF%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="数学建模综述">数学建模综述</h1><p>数学建模是我个人觉得挺值得去打的一个比赛类型，主要是可以从比赛中学到论文的基本撰写流程与思路技巧、传统建模分析的基础方法（尤其是在这个机器学习横行的当下显得更为重要）、利用科学思维分析现实问题的能力（可以让自己变得更理性），功利点的话还有加综测保研考验复试的用途。我们学校的相关制度也比较成熟，三段校赛给基础模型学一遍，然后美赛国赛换着打，挺建议我们学校的大一的学弟学妹参加，正好大一上学学编程工数淑芬，大一下来打这个，挺好的。</p><p>本文就按照我的思路进行一些梳理吧。注意本人是工科生，可能会更偏重与用工科惯用套路来想，像是微分方程推导建模之类的就略过不谈了。</p><p>同时还有一点，机器学习的方法我也不讲了，一个是这个玩意很多模型都是黑箱没法解释，一个是本来这类比赛的初衷就不是机器学习，有的比赛就直接给机器学习给ban了。</p><p>本博客基于25年网协数学建模例会进行叙述（很多都是直接抄的），感谢分享人郭文涛。</p><h2 id="建模编程">建模编程</h2><p>按照这几个大类来思考模型选用。如果是入门者建议就从零开始边打边学，像毛主席讲的“从战争中学习战争”吗。</p><p>个人建议的入门路径是：参与校赛，利用CSDN/知乎/B站+SPSS验证+GPT/DeepSeek/现在流行的ai进行解释，逐步学会相关方法。</p><pre><code class=" mermaid">flowchart LR  B[AI及搜索了解可用模型]  B --&gt; C[SPSS验证方法可行性]  C --&gt; D[写代码]</code></pre><p>当然，前提是你要知道有什么方法可以选，明白几个方向的模型有什么选项、他的输入和输出是什么、主要思想是什么、适用场景和特点有哪些。</p><h3 id="优化">优化</h3><p>优化得出最大最小值。具体而言是变量+约束条件+目标函数，如果你学过神经网络的一些基本概念就会知道这个和训练时放个目标函数然后往那里学习的思路是有点像的。具体而言是我告诉你现在有哪些变量，然后我最后想要得到一个什么东西（最短路径是什么等等），然后你来给我建模得到这样一个模型。</p><p>注意事项有：</p><ul><li>线性寻路等存在最佳唯一解。</li><li>退火、遗传、粒子群为模拟结果，可能有局部最优解，最好多跑几轮。</li><li>微分差分方程一般是生物、种群的题，多轮模拟添加竞争等条件，美赛A题比较常见。</li><li>图论当时那个分享人不会，然后我也不咋会，这个东西有点太理论了。</li></ul><pre><code class=" mermaid">flowchart LR  A[优化模型] --&gt; B[数学规划]  B --&gt; B1[dp]  A --&gt; C[微分、差分方程]  C --&gt; C1[传染病模型SIR]  C --&gt; C2[Lotka-Volterra]  C --&gt; C3[Leslie种群模型]  A --&gt; D[图论与网络]  D --&gt; D1[最短路]  D --&gt; D2[网络最大流]  D --&gt; D3[旅行商问题TSP]  A --&gt; E[优化算法]  E --&gt; E1[退火算法]  E --&gt; E2[遗传算法]  E --&gt; E3[粒子群算法]</code></pre><h3 id="分类">分类</h3><p>给现有的物品分出等级，可能会伴随着大量的数据。一般不会单独出题，比如评价的时候会有这种东西的出现。</p><p>K-means和SVM、XGBoost比较重要</p><pre><code class=" mermaid">flowchart LR  A[分类模型] --&gt; B1[判别分析]  B1 --&gt; B11[距离判别法]  B1 --&gt; B12[Fisher判别法]  B1 --&gt; B13[Bayes判别法]  A --&gt; B2[聚类分析]  B2 --&gt; B21[K-means聚类]  A --&gt; B3[神经网络分类]  B3 --&gt; B22[CNN]  B3 --&gt; B23[yolo]  B3 --&gt; B31[随机森林]  B3 --&gt; B32[SVM]  B3 --&gt; B33[XGBoost]</code></pre><h3 id="评价">评价</h3><p>评价方案的好坏，给出相应的评判方法，25年校赛第一轮的B题就是这个，当时用的熵权法+TOPSIS做的就挺好，然后先用PCA筛几个变量下去，还能画点好看的热力图什么的。这类题实在不会用AHP这种纯主观的糊弄糊弄也不是不行，至少能给题做出来。</p><p>但是要注意一点，这种比较套路化的思路同质化就会比较严重，具体怎么抉择还是自己仔细想一想吧。</p><pre><code class=" mermaid">flowchart LR  A[评价模型] --&gt; B1[层次分析法（AHP）]  A --&gt; B2[灰色关联度分析]  A --&gt; B3[BP神经网络]  A --&gt; B4[数据包络法DEA]  A --&gt; B5[组合评价法]  A --&gt; B6[熵权法+TOPSIS]</code></pre><h3 id="预测">预测</h3><p>预测未来的变化</p><ul><li>输入：按照时间排布的变量</li><li>输出：按照时间排布的变量未来值</li><li>主要使用：线性回归、ARIMA</li><li>多变量：可以尝试使用LSTM，也可以非时序，给定要素做判断</li></ul><pre><code class=" mermaid">flowchart LR  A[预测模型] --&gt; B1[回归分析]  B1 --&gt; B11[线性回归]  B1 --&gt; B12[岭回归]  A --&gt; B2[时间序列分析]  B2 --&gt; B21[ARIMA]  A --&gt; B3[灰色预测]  B3 --&gt; B31[&quot;GM(1,1)&quot;]  A --&gt; B4[&quot;支持向量机 SVM&quot;]  A --&gt; B5[机器学习]  B5 --&gt; B51[BP神经网络]  B5 --&gt; B52[LSTM]  B5 --&gt; B53[GRU]  B5 --&gt; B54[随机森林]  B5 --&gt; B55[梯度提升机 GBDT]  B5 --&gt; B56[XGBoost 回归]  B5 --&gt; B57[LightGBM]  B5 --&gt; B58[SVR 回归]  A --&gt; B6[组合预测]</code></pre><h3 id="总体流程">总体流程</h3><pre><code class=" mermaid">flowchart LR  B[AI及搜索了解可用模型]  B --&gt; C[SPSS验证方法可行性]  C --&gt; D[写代码]  D --&gt; E[优化图表]  E --&gt; F[结果验证，评估]</code></pre><p>评估的话可做可不做，如果多个模型可以比较一下，或者指标好看，比如拟合的很好可以吹一下，差了就不说了。再说一遍，一定要注意要验证是否可行，避免无用功。</p><h2 id="论文部分">论文部分</h2><h3 id="文档结构">文档结构</h3><ol type="1"><li><strong>摘要</strong></li><li><strong>目录</strong></li><li><strong>问题介绍</strong><ul><li>背景</li><li>重述</li><li>分析</li></ul></li><li><strong>符号表</strong></li><li><strong>基本假设</strong></li><li><strong>模型建立与求解</strong><ul><li>一、二、三</li></ul></li><li><strong>模型评估优缺点、灵敏性分析</strong></li></ol><h3 id="主体部分">主体部分</h3><p>方法引入 + 公式 + 运用图片 + 结果</p><ul><li><strong>说清楚为啥用</strong>：哪类的模型 + 实现什么目的</li><li><strong>说清楚如何用</strong>：计算公式 + 可能的过程图</li><li><strong>说清楚用结果</strong>：使用结果图 + 误差分析</li></ul><h2 id="注意事项">注意事项</h2><ul><li>看题目位置是第几题，第一题可以稍微水一些，后面第三题就要猛猛干。</li><li>一定要注意要验证是否可行，避免无用功。</li><li>画出来的图一定要美化一些，因为实际上大家的模型都差不多，最重要的还是你的图片，要比较帅。</li><li>摘要也很重要，这个建议要建模手在最后做完的时候再改一下。</li><li>做完之后记得补充符号表</li><li>无论建模、细节完成度多少，是否完成每个任务和作图，都要按照模板填够内容，不缺漏部分</li><li>论文手第一天就要干活，写背景调研什么的</li><li>图片需要细细打磨，下面贴一张分享会的ppt ![[屏幕截图 2025-04-22014046.png]]</li><li>建模手和论文手要好好沟通</li><li>建模手要注意评估优缺点，要注意灵敏度的分析设计，这个听分享会的话要用shap？我没用过反正是</li></ul>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>相机基础知识解读</title>
    <link href="/2025/04/13/%E6%91%84%E5%BD%B1/2025-04-13-%E7%9B%B8%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E8%A7%A3%E8%AF%BB/"/>
    <url>/2025/04/13/%E6%91%84%E5%BD%B1/2025-04-13-%E7%9B%B8%E6%9C%BA%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E8%A7%A3%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h1id="相机基础知识全解析从入门到精通">相机基础知识全解析：从入门到精通</h1><h2 id="前言">1.前言</h2><p>摄影不仅是一门记录生活的艺术，更是科技与创意碰撞的结晶。从最初的黑白胶片机到如今功能强大的数码相机，技术的不断革新为我们带来了无限可能。了解相机的基本构造和工作原理，是每一位摄影爱好者迈向专业的重要第一步。本文从多个层面全盘解读相机基础知识，帮助大家理解设备参数背后的原理和创作过程中如何灵活应用。（感谢ChatGPT和Deepseek的总结以及前人已有的总结）</p><h2 id="分类与认识">2.分类与认识</h2><h3 id="相机分类">2.1 相机分类</h3><ul><li><p><strong>单反相机（DSLR）：</strong></p><p>单镜头反光式照相机，这个单镜头是相对于双反来讲的，单反的这一个镜头既用来取景也用来成像。利用反光镜系统实现取景成像，具体来讲就是取景时，通过镜头入射的光线射到反光板上，然后被反光板反射到五棱镜上，再经过五棱镜的折射后，被拍摄者通过光学取景器观测到。按下快门曝光成像的时候，反光板抬起，光线直接射到感光元件上完成曝光成像。曝光结束反光板放下。具备快速响应和更强的手动操作能力，适合专业摄影师和严肃爱好者。现在逐渐被微单淘汰。</p></li><li><p><strong>无反相机（Mirrorless）：</strong></p><p>取消反光镜设计，直接用电子取景，好处就是没有反光板开闭带来的机震，体积更小、重量轻，同时保留了大部分单反相机的性能，单反有的他都有，近年来比较流行。</p></li><li><p><strong>便携式数码相机（DC）：</strong></p><p>就傻瓜相机，不能换镜头，操作简单、携带方便，适合普通人的日常记录和旅行摄影。这个时候就要提一嘴这个范畴里面的CCD了，这个玩意儿就是把普通相机的CMOS（一种图像传感器）换成CCD。不作评价，想买就买，但是出自于我个人的角度来看，CCD相机可以和泡泡玛特什么的莫名其妙的潮物坐一桌。具体可以看参考里面知乎大佬的介绍。</p></li><li><p><strong>手机相机：</strong></p><p>略。</p></li></ul><h3 id="感光元件种类">2.2 感光元件种类</h3><p>感光元件是相机的心脏，其性能直接影响图像质量。主要有两种类型：</p><ul><li><p><strong>CCD（电荷耦合器件）：</strong></p><p>电荷耦合器件（charge coupleddevice）的简称，它能够将光线变为电荷并将电荷存储及转移，也可将存储之电荷取出使电压发生变化。光电效应能使此种元件表面产生电荷，从而组成数位影像。成像效果细腻、色彩还原度高，但制造成本较高、能耗较大，实际上已经被CMOS所超越，逐渐淡出大众视野，但是最近有风潮又给他炒起来了。</p></li><li><p><strong>CMOS（互补金属氧化物半导体）：</strong></p><p>成本相对低、功耗较小，目前大部分主流相机采用此技术，同时技术进步也使得其画质不断提升。</p></li></ul><p>感光元件的尺寸（画幅）越大（如全画幅、APS-C），往往能够捕捉更多光线，从而在弱光环境下表现更优，同时动态范围和噪点控制也相对更好。</p><h3 id="画幅分类">2.3 画幅分类</h3><ul><li><p><strong>全画幅（Full Frame）：</strong></p><p>尺寸与传统35mm胶片一致（约36×24mm），成像素质顶尖，弱光噪点少、动态范围广、景深控制灵活，是专业摄影和高端视频拍摄的首选。缺点是机身和镜头体积较大，价格较高。</p></li><li><p><strong>半画幅（APS-C/残幅）：</strong></p><p>尺寸约为全画幅的一半（约23.6×15.7mm），因成本低、体积轻便，广泛用于入门级单反/无反相机。需注意镜头焦距需乘以转换系数（如1.5倍或1.6倍），适合日常拍摄、旅行及爱好者创作。画质弱于全画幅，但性价比突出。</p></li><li><p><strong>中画幅（Medium Format）：</strong></p><p>尺寸远超全画幅（如44×33mm或更大），拥有极致的分辨率、色彩深度与动态范围，专为商业广告、高端人像及艺术摄影设计。传统中画幅相机笨重昂贵，近年逐步向便携化发展（如富士GFX系列）。</p></li><li><p><strong>M4/3画幅（Micro Four Thirds）：</strong></p><p>尺寸约17.3×13mm，主打轻量化设计，机身和镜头体积小巧，适合视频拍摄、Vlog和户外机动需求（如无人机、运动相机）。画质弱于全画幅和APS-C，但视频性能优化较好。</p></li><li><p><strong>1英寸及以下（如1英寸、1/1.8"）：</strong></p><p>常见于卡片机、运动相机和智能手机，体积极致紧凑，但感光能力有限，依赖算法（多帧合成、AI降噪）提升画质。适合日常随手记录或社交媒体分享。</p></li></ul><h3 id="镜头与成像系统">2.4 镜头与成像系统</h3><p>主要关注以下几个参数：</p><ul><li><p><strong>焦距：</strong><br />焦距决定了视角和画面压缩效果。广角镜头适合风光、街拍；长焦镜头则常用于人像、野生动物摄影。</p></li><li><p><strong>光圈：</strong><br />光圈大小决定进光量和景深效果，常用的表述为f/值。较小的f值表示大光圈，能在弱光环境下获得更好的效果，同时创造柔美背景虚化。</p></li><li><p><strong>防抖技术：</strong><br />一些镜头或相机内置防抖功能，能够在低速快门情况下减小手抖影响，适用于室内或夜景拍摄。</p></li></ul><h3 id="认识按键">2.5 认识按键</h3><p>用相机还是要先明白都有什么按键的），下面的是从一篇小黑盒的帖子转来的，详细的图片就不搬运了，具体可以看原文：</p><ul><li><p><ahref="https://www.xiaoheihe.cn/app/bbs/link/148750337">【实用知识】关于相机的科普知识- 小黑盒</a></p></li><li><p><strong>基础控制区</strong></p><ul><li>电源开关：通常标记为 ON/OFF，部分相机集成在模式拨盘上。</li><li>快门按钮：半按对焦，全按拍摄（听到“滴”声表示对焦完成）。</li><li>模式拨盘：选择拍摄模式，如AUTO（全自动）、P（程序自动）、S/Tv（快门优先）、A/Av（光圈优先）、M（全手动）。</li><li>热靴接口：顶部金属槽，用于外接闪光灯或麦克风。</li></ul></li><li><p><strong>功能快捷键</strong></p><ul><li>ISO键：快速调整感光度（数值越高画面越亮，但噪点越多）。</li><li>曝光补偿键（±）：在自动模式下增减画面亮度（白加黑减原则）。</li><li>AF/MF切换键：切换自动对焦（AF）与手动对焦（MF）。</li><li>Q/Menu键：快速进入设置菜单或快捷操作界面。</li><li>方向键/拨轮：调整参数或切换对焦点。</li></ul></li><li><p><strong>其他重要按键</strong></p><ul><li>INFO/DISP：切换屏幕显示信息（直方图、水平仪等）。</li><li>删除键（垃圾桶图标）：删除照片或视频。</li><li>回放键（▶️图标）：查看已拍摄内容。</li></ul></li></ul><h3 id="认识界面与参数">2.6 认识界面与参数</h3><p>通过取景器或LCD屏幕，可以看到以下核心参数（不同机型显示略有差异）：</p><ul><li>⚡️ 闪光灯状态</li><li>📷+数字 剩余可拍摄张数</li><li>1/125 快门速度（分母越大，快门越快）</li><li>F5.6 光圈值（数值越小，光圈越大，背景虚化越强）</li><li>ISO 100 感光度</li><li>◼️▪️▪️▪️ 曝光标尺（指针居中时曝光正常）</li><li>AFS 单次自动对焦</li><li>⭕️●⭕️ 对焦点位置</li></ul><hr /><h2 id="曝光三要素">3.曝光三要素</h2><h3 id="光圈aperture">3.1 光圈（Aperture）</h3><p>光圈不仅影响进光量，还控制着景深：</p><ul><li><p><strong>大光圈（小f值）：</strong><br />允许更多光线进入，适合低光环境；同时能产生浅景深效果，使主体清晰而背景虚化。</p></li><li><p><strong>小光圈（大f值）：</strong><br />进光量减少，但景深增大，适用于风光或需要细节全景均衡的场景。</p></li></ul><h3 id="快门速度shutter-speed">3.2 快门速度（Shutter Speed）</h3><ul><li><p><strong>低速快门：</strong></p><p>曝光时间长，适合夜景、流水或者光轨拍摄，但需要三脚架支撑以防止模糊。</p></li><li><p><strong>高速快门：</strong></p><p>冻结运动效果，适合体育、野生动物等快速移动的物体，但可能导致曝光不足，拍出来一坨黑乎乎的东西。</p></li></ul><p>创意拍摄中，通过故意使用慢快门可以达到“运动模糊”效果，增加画面的动态韵律；在拍星轨的时候又是另外的路子，设置间隔多长时间拍一张，然后后期合成。</p><h3 id="iso感光度">3.3 ISO感光度</h3><ul><li><p><strong>低ISO值：</strong></p><p>噪点较少，画质好，适合光线充足场景。</p></li><li><p><strong>高ISO值：</strong></p><p>增加感光能力，适合低光环境，但噪点多。</p></li></ul><hr /><h2 id="相机测光与曝光补偿">4.相机测光与曝光补偿</h2><h3 id="测光模式">4.1 测光模式</h3><ul><li><p><strong>点测光：</strong></p><p>只测量画面中一个小区域，适用于希望突出表现主体的场景。</p></li><li><p><strong>中央重点测光：</strong></p><p>以画面中央为主，兼顾周边光线，适合大多数常规拍摄。</p></li><li><p><strong>矩阵/评价测光：</strong></p><p>分析整幅画面的光线，通过算法计算出最佳曝光值，适合一般场景使用。</p></li><li><p><strong>局部测光：</strong></p><p>对中央部分进行测光。当被摄主体位于局部位置，所占比不大且与背景反差大时用他。</p></li></ul><h3 id="曝光补偿">4.2 曝光补偿</h3><p>在自动模式下，摄像机有时无法准确捕捉复杂光线，此时可以利用曝光补偿功能：</p><ul><li><p><strong>正补偿：</strong><br />增加曝光量，用于暗部细节不足时。</p></li><li><p><strong>负补偿：</strong><br />减少曝光量，避免高光区域过曝，保留更多细节。</p></li></ul><p>理解这些设定，有助于在复杂光线环境中灵活应对，获得更准确的曝光效果。</p><hr /><h2 id="摄影模式">5.摄影模式</h2><ul><li><p><strong>M模式（全手动模式）：</strong></p><p>完全手动控制光圈、快门速度和ISO，需自行平衡曝光三角参数。适合经验丰富的摄影师应对复杂光线（如夜景、棚拍）或追求精准创作（如长曝光、星空摄影），但对操作要求高，需实时观察曝光标尺。反正不用他照样拍就行，没有必要硬要上，玩的开心就好。</p></li><li><p><strong>P模式（程序自动模式）：</strong></p><p>相机自动设定光圈和快门速度，比A档稍微多一点东西能手动。</p></li><li><p><strong>Av/A模式（光圈优先模式）：</strong></p><p>手动设定光圈值，相机自动匹配快门速度。通过控制光圈调整景深（如大光圈虚化背景、小光圈扩展景深），适合人像、风光、静物等需突出画面层次感的题材。</p></li><li><p><strong>Tv/S模式（快门优先模式）：</strong></p><p>手动设定快门速度，相机自动匹配光圈值。通过控制快门速度冻结动态（高速快门）或营造动感模糊（低速快门），适合运动、车流、流水等场景。</p></li><li><p><strong>Auto模式（全自动模式）：</strong></p><p>相机完全接管所有参数（包括闪光灯），用户仅需构图和按下快门。适合紧急抓拍或纯新手入门，但创作自由度极低，易受算法误判影响。</p></li><li><p><strong>B门模式（Bulb Mode）：</strong></p><p>手动控制快门开启时间（按下快门开始曝光，松开结束），适用于超长曝光（如星轨、光绘、烟花）。需搭配三脚架和快门线，避免机身抖动。</p></li><li><p><strong>场景模式（如人像、风景、夜景）：</strong></p><p>相机根据预设场景优化参数组合（如人像模式自动开大光圈、夜景模式提升ISO），适合特定题材快速拍摄，但灵活性弱于半自动模式（P/Av/Tv）。</p></li></ul><p>模式本质是“参数控制权”的分配，从Auto到M模式，用户逐步接管更多参数控制权，代价是操作复杂度提升，但创作空间同步扩大。</p><hr /><h2 id="白平衡与色彩管理">6.白平衡与色彩管理</h2><p>白平衡的基本概念是:“不管在任何光源下，都能将白色物体还原为白色”能在不同色温的光线下尽量的还原白色为白色。</p><p>一般情况下用自动白平衡即可。光线复杂时或对照片色调有特定效果需求时，可以通过设置不同的K值影响色调。比如偏暖或偏冷的色调选择。</p><ul><li>K值数字越小→越蓝（冷色调）→ 适合拍雪景、冰雕；</li><li>K值数字越大→越黄（暖色调）→ 适合咖啡馆、烛光晚餐。 ### 6.1白平衡基础</li></ul><p>白平衡主要用于校正不同光源下的色温差异：</p><ul><li><p><strong>自动白平衡（AWB）：</strong></p><p>相机会根据环境自动判断色温，但在复杂光源下可能出现偏色。</p></li><li><p><strong>手动设置：</strong></p><p>根据现场光源（如日光、钨丝灯、荧光灯等）进行手动调节，确保画面色彩准确。</p></li></ul><p>实际上这个玩意没必要，直接拍<strong>RAW</strong>甩给后期修就是了。</p><hr /><h2 id="对焦系统与焦点控制">7.对焦系统与焦点控制</h2><p><strong>1. 手动对焦（MF）</strong>：自己拧</p><ul><li><p><strong>啥时候用</strong>：</p><ul><li>拍微距（比如小虫子、花瓣细节）；</li><li>晚上拍星星或者光线特别暗；</li><li>自动对焦总对不上（比如拍笼子里的动物、隔着玻璃）。</li></ul></li><li><p><strong>缺点</strong>：慢，得自己拧镜头环，新手容易手抖糊片。</p></li></ul><p><strong>2.单次自动对焦（AF-S）</strong>：半按快门对焦一次，适合不动的东西。</p><ul><li><p><strong>啥时候用</strong>：</p><ul><li>拍风景、证件照、静物摆拍；</li><li>先对焦再平移构图（比如先对焦人脸，再把人物放画面左边）。</li><li>不是很适合拿来拍跑来跑去的小孩、宠物、体育比赛。</li></ul></li></ul><p><strong>3.连续自动对焦（AF-C）</strong>：选好模式按住连拍，抓拍会动的东西。</p><ul><li><p><strong>啥时候用</strong>：</p><ul><li>半按快门时焦点会跟着主体移动（比如拍跑步的人、飞鸟、汽车）；</li><li>连拍好用。</li></ul></li><li><p><strong>注意</strong>：背景太乱可能跟丢焦点，尽量选干净背景。</p></li></ul><p><strong>4.全自动对焦（AF-A）</strong>：会自己切换AF-S/AF-C（比如先对焦静止的人，突然他开始跑步，焦点自动跟上）。</p><hr /><h2 id="保存格式与色彩空间">8.保存格式与色彩空间</h2><ul><li><p><strong>RAW格式</strong>：未经压缩的原始数据文件（类似底片），完整记录感光元件捕捉的全部信息（包括未处理的色彩、动态范围和细节）。</p><ul><li><p><strong>优势</strong>：</p><ul><li>保留最大后期调整空间（可无损修正曝光、白平衡、色彩偏差等）；<br /></li><li>高动态范围减少高光过曝或暗部死黑风险；<br /></li><li>适合专业摄影、商业拍摄或需精细修图的场景。</li></ul></li><li><p><strong>缺点</strong>：</p><ul><li>文件体积大，存储和传输成本高；<br /></li><li>需专用软件（如Lightroom、Capture One）处理，无法直接分享；<br /></li><li>直出效果较平淡，依赖后期技术。</li></ul></li></ul></li><li><p><strong>JPEG格式</strong>：经过相机机内压缩处理的图像文件，直接生成可分享的成品图。</p><ul><li><p><strong>优势</strong>：</p><ul><li>文件体积小，兼容性强（手机、电脑无需解码）；<br /></li><li>机内算法优化直出色彩（如人像肤色、风光饱和度）；<br /></li><li>适合快速出片、社交媒体分享或非专业需求。</li></ul></li><li><p><strong>缺点</strong>：</p><ul><li>压缩损失细节，动态范围和色彩信息不可逆；<br /></li><li>后期调整空间极小（易出现色阶断裂或噪点）。</li></ul></li></ul></li></ul><p>反正拍照就是RAW就是了，JPEG是你后面修完输出的。色彩空间的话直接上sRGB。具体色彩空间和显示器那篇的色域有点像，可以去看看</p><hr /><p><em>【参考资料】</em><br /><a href="https://www.zhihu.com/question/601483588">销声匿迹十多年的 CCD相机为什么又火起来了，真的值得购买吗？ - 知乎</a>https://www.zhihu.com/tardis/zm/art/98369864?source_id=1005https://zhuanlan.zhihu.com/p/93835471https://www.zhihu.com/tardis/bd/art/397181356https://www.xiaoheihe.cn/app/bbs/link/148750337</p>]]></content>
    
    
    <categories>
      
      <category>摄影</category>
      
    </categories>
    
    
    <tags>
      
      <tag>摄影基础</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>四月是你的谎言</title>
    <link href="/2025/04/11/%E7%95%AA%E5%89%A7%E9%89%B4%E8%B5%8F/%E7%95%AA%E5%89%A7/2025-04-11-%E5%9B%9B%E6%9C%88%E6%98%AF%E4%BD%A0%E7%9A%84%E8%B0%8E%E8%A8%80/"/>
    <url>/2025/04/11/%E7%95%AA%E5%89%A7%E9%89%B4%E8%B5%8F/%E7%95%AA%E5%89%A7/2025-04-11-%E5%9B%9B%E6%9C%88%E6%98%AF%E4%BD%A0%E7%9A%84%E8%B0%8E%E8%A8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="四月是你的谎言-光影组节目">四月是你的谎言 光影组节目</h1><p>——能与你相遇的四月，就要来了。没有你的四月，就要来了。</p><p>在此再次感谢本次节目的搭档，是她向我推荐了这部番，同时也是她与我合作完成了这篇文稿和这次的播报（实际上更多的是她作为前辈带我这个新人呢呜呜），她为这次节目所作出的贡献远远大于我。</p><h2 id="剧段一">剧段一：</h2><p>来源：<ahref="https://www.bilibili.com/video/BV1ns411y72A/?spm_id_from=333.1391.0.0">四月是你的谎言（中配）</a></p><p>公生：口风琴？吹得还不错。（语气略带疑问，两句之间留停顿）</p><p>小椿：（背景音，后期可以做音效）美和和我说，和他相遇的瞬间，我的人生就改变了（带笑意，最后一句渐弱）。所见所闻所感，目之所及全部开始变得五彩斑斓起来（目之所及处停顿，后半句加强）全世界，都开始发光发亮（后半句加强）</p><p>（口琴声延续…）</p><h2 id="常规节目">常规节目：</h2><p>大家好，欢迎收听今天的北理之声-光影年代，我是主播张恒玮，我是主播王奕茹（介绍词）在动漫市场轻小说漫改横行，快餐式剧集频发的当下，有一部上映了十一年的动画，至今仍占据日网票选催泪动漫第二的好成绩，同时也成为了无数人心中入坑必看的神作的代表。即使上映了十多年的时间，直到今年四月，仍有不少人以自己的方式来纪念这部影片。||如果你也对纯爱类型的题材感兴趣，为这样一部口碑经典的动漫好奇的话，也许《四月是你的谎言》正是符合你期待的那部作品。在今天的光影年代节目中，让我们走进那个樱花飘落的四月，聆听《四月是你的谎言》这部作品中，音乐与爱的交响曲。</p><p>这个围绕着音乐与爱的故事，还要从一个不期而然的偶遇讲起。动漫的主人公有马公生自小就在母亲严格的教导之下学习钢琴，在大大小小的钢琴比赛中，屡次斩获冠军头衔。作为当之无愧的天才钢琴少年，几乎在所有人眼中，公生都与钢琴界冉冉升起的新星这一名号紧密相关。但未曾想，一场突如其来的变故，却断送了人们的美好愿景，打破了公生一直以来的钢琴梦想。一直教导严苛，不苟言笑的母亲，在癌症的肆虐下猝然离世；面对母亲身上突发的噩耗，伴随着无尽的悲伤，公生因此再也无法听见琴声，生活也变得晦暗无光。不过，一场突如其来的偶遇，却彻底改变了公生晦暗的生活，在一次偶然的机会下，等待好友的公生与樱花树下吹响手风琴的宫园薰不期而遇，公生被自由奔放的小提琴手薰所吸引，在误打误撞中，两人也成为了朋友。然而，薰阳光开朗的外表下却隐藏着不为人知的阴影，作为优秀的小提琴手。薰自小学习小提琴的动力，便是与作为天才的有马公生合奏。为此，薰以“喜欢共同的好友”的谎言编织相遇，隐藏下自己身患绝症的残酷命运，只为完成自小以来的合奏约定。然而，这场不期而至的相遇，不仅给公生仅剩下单调黑白键的世界重新填入乐章，也让薰的流星般璀璨的生命在倒计时中绽放出最炽热的光芒。在生命仅剩的时光里，薰用自己的音乐与爱，让公生得以明白，对于他而言音乐并不是束缚，而是与世界对话的语言，也教会了公生如何面对失去。最终，他在宫园薰离去的春天里，奏响了属于两人的永恒乐章。</p><h2 id="剧段二">剧段二：</h2><p>来源：<ahref="https://www.bilibili.com/video/BV1UG4y1w737/?spm_id_from=333.1391.0.0&amp;p=2&amp;vd_source=35efa20a3dc2d6382913a782f2bf8ad8">四谎_2_哔哩哔哩_bilibili</a></p><p>熏：你还在弹钢琴吗？</p><p>公生：已经不弹了</p><p>果然。你又在一个人消沉了。</p><p>公生：已经不行了，重要的人全都从我眼前离开，音乐把我真实的人都给带走了，最后只剩我孤身一人。</p><p>熏：不是还有我吗？有马，我要做手术了，在2月18号。我会拼尽全力的一直挣扎到最后一刻。都怪你，全部都是你的错。我像这样难堪的挣扎着，向着生的希望追逐着都是你的错，因为与你共度的时光让我产生了留恋，你不再拼一下吗？我们不是最擅长拼命了吗？我们不就是拼上性命去挣扎的演奏家吗？</p><p>公生：但是我已经一周没碰钢琴了。</p><p>熏：你给我伴奏的时候不也没碰钢琴吗。</p><p>公生：那时候因为打工偶尔也碰过，现在不可能弹得好的，这种状态还能弹才是奇迹了……</p><p>熏：又在低头看下面了。</p><p>（熏演奏小提琴）</p><p>熏：看奇迹什么的，这不就有了吗？</p><h2 id="常规节目-1">常规节目：</h2><p>作为日本动漫的经典之作，《四月是你的谎言》不仅是一部青春物语，更是一部音乐番，一部以音乐为血肉的经典之作。从第一集贝多芬的《月光》奏鸣曲到最后一集肖邦的《G小调第一叙事曲》，从主角二人初次合奏的圣-桑的《引子与回旋随想曲》到二人终究没有共同完成的克莱斯勒的《爱的忧伤》，剧中每一段古典乐都与剧情精准契合，成为了情感流淌的桥梁。是公生在《革命练习曲》的激流中挣脱母亲阴影，亦是在薰从《引子与回旋随想曲》的狂放中诠释生命的最后燃烧之时，音符与剧情早已融为一体，形成一种近乎宿命般的共振。</p><p>影片将音乐与剧情相伴相生，远远超越了单纯的“将音乐作为背景”，用音符为砖瓦构建出一座永远处于四月的城池。正如剧中薰所说：“音乐是自由的啊！”创作者正是将这种自由与古典乐的庄重交织，为易逝的青春编排出一部盛大的音乐会。而当在十年后仍能从很多人口中听到这场反复被演绎的音乐会的消息，便知这场四月的音乐会，早已铭刻在众人心中，达到永恒。</p><p>朱光潜有这样一句话：表面看来，悲剧的内容大多是可怖的东西，但它实际上绝不仅止于此。悲剧绝不仅仅是恐怖。恐怖只是使人感到痛苦，最后给人以阴郁和沮丧的感觉，而悲剧却令人感到鼓舞和振奋。而《四月是你的谎言》恰恰也是贯彻了这一理念的佳作，以在四月发生的悲剧为基底，却又迸发出惊人的生命力，催人成长，催人前进。</p><p>剧情上的所谓“谎言”，是指少女在生命进入倒计时后为拯救爱人而编织的最美丽的谎。宫园薰以”喜欢渡“的谎言来到曾经的天才少年公生的身边，叩响公生的心门，帮助公生战胜心魔。作者用这个看似轻巧俗套的套路，对日本物哀美学做出了精妙的诠释。正如《源氏物语》中所述夕颜花朝开而夕逝，薰所用的这个温柔的“谎言”背后却是无尽的哀伤。她选择在生命最后用谎言搭建相遇的桥梁，只为在消逝前用自己最后的生命活力拯救心上的天才演奏家，恰似樱花在盛放瞬间便预设了飘零的轨迹。这种倒计时叙事带来的张力，使每个温馨场景都笼罩着倒影般的哀愁，形成极具东方特质的悲剧审美空间。</p><p>正如所有在四月盛开的樱花都终归化为尘土，正如每一场演出都终归要结束，为公生带来希望与活力的薰最终还是倒在了那个樱花盛开的四月前，这一结局则揭示了生命"向死而生"的存在主义本质：所有看似永恒的美好，本质都是死神的缓刑令。这种对生命无意义的认识本应导向虚无，但在这部作品中，作者却借剧中人物对音乐的执念与热爱完成由虚无向存在的转折：薰在生命的最后仍然为了能与心爱的人同台演出而去进行最后的挣扎；有马最后在母亲爱人均离自己远去时仍怀揣着对生活的希望继续为世界弹奏巴赫与肖邦，这些认真生活的片段则构成了对荒诞世界的蔑视。正如加缪笔下的西西弗斯，明知巨石必将滚落仍坚持攀登，这是他对自己命运的蔑视；正如薰在那个最后的四月里笑着说“就算悲伤难抑，遍体鳞伤地处于谷底，也不能停下演奏。只有这样，我们才是真正活着的。”这是她对自己绝症的蔑视。至此我们才恍然：生命用存在的假象掩盖消逝的本质，而人类却在明知结局的清醒中，依然选择热烈地活着。正如罗曼·罗兰所说：“所谓英雄主义，不过是在看清生活真相后仍然热爱生活。”是啊，生命最壮烈的英雄主义，不在于规避消逝的必然，而在于将终局预设为盛放的华章。即使明日我将逝去，今日我仍会打好领带去迎接最后的晚霞与朝阳！</p><p>十年后的今日，日本的樱花前线依然以17公里每日的速度北移，樱花花瓣又以五厘米的秒速向下飘落，东京塔上又泛起粉色的光晕，而当现实中的赏樱者仰头凝视枝头这转瞬即逝的繁华，伸手接住以每秒五厘米的速度飘落的花瓣时，我想，他们也许不知道，樱花中还凝结有那首十年前的G小调第一叙事曲，也许不知道，樱花中曾蕴含着那位少女所演奏的小提琴的泛音。但也许，正如人们所知晓的那样，樱花最美之处，便是其坠落时的满天花雨——这也与熏留给世界的最后一个谎言不期而合：明明写着的是“永别”，但读出的却是“我在未来等你”。</p><p>能与你相遇的四月，就要来了。没有你的四月，就要来了。</p><h2 id="结束曲">结束曲：</h2><p>光るなら</p>]]></content>
    
    
    <categories>
      
      <category>番剧鉴赏</category>
      
      <category>番剧</category>
      
    </categories>
    
    
    <tags>
      
      <tag>番剧鉴赏</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo+Fluid+Obsidian博客搭建及优化</title>
    <link href="/2025/04/07/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-04-07-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/"/>
    <url>/2025/04/07/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-04-07-%E6%90%AD%E5%BB%BA%E8%87%AA%E5%B7%B1%E7%9A%84%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="前言">1.前言</h2><p>搭建这个博客的契机实际上是前段时间和一个学长吃饭的时候看到他自己建的个人博客，我之前也知道现存的相关开源项目十分成熟，然后就是脑瓜一拍开始干（bushi</p><p>这倒也算是解决了一直以来的没地方分享东西的问题。我是很想多去写点东西来记录折腾的有趣的各种小东西，记录自己欣赏过的艺术作品，记录自己的生活想法与感受的，很想在现在还有时间的时候多去写点长篇的文章来保护我自己的思考能力和语言表达能力，防止在短视频风暴中迷失自我。但是在哪里写这又是一个问题：发贴吧知乎小红书吧，一个是目前这些论坛的氛围个人不是很喜欢，也懒得天天去迎合氛围去叠甲；发空间或者朋友圈吧，这俩地方又不适合做长篇大论，一段小文字又满足不了我的表达欲，也讲不清楚我想说什么，而且我的微信好友也不一定愿意看；做视频发出来就更不用讲了，耗时间还要考虑社群氛围问题。</p><p>而个人博客的方案则很好的满足了我这个需求：我可以在自己的个人博客上随便说随便讲，述我之所想，录我之欲记，毕竟我这算是写给自己看的，也基本上没人来我这看这些文章；一方面这也算是一个有趣的小项目不是嘛？虽然用的是开源项目，但不妨碍我顺便就给前端的那一套东西给了解一下。</p><p>前言的最后一段还是献给可能来的读者吧，如果你也想搭建一个这样的个人博客，不妨阅读下去，我将会在这里写一些搭建的过程和个人推荐的写作工作流。</p><h2 id="搭建">2.搭建</h2><h3 id="所用到的工具">所用到的工具：</h3><ul><li><ahref="https://hexo.io/zh-cn/docs/">hexo</a>：博客框架，可以理解为blogs网站的骨架。</li><li><ahref="https://hexo.fluid-dev.com/docs/start/">Fluid</a>：blogs网站的主题，具体的配置按照这个官方文档讲的改就是了，文档十分详细，不再赘述。</li><li><ahref="https://docs.github.com/zh/pages/getting-started-with-github-pages">GithubPages</a>：静态网站托管服务，免费且方便，一个github账号只能有一个。</li><li><ahref="https://docs.github.com/zh/pages/getting-started-with-github-pages">Obsidian</a>：一个文本编辑器，配置好的话十分方便，插件丰富，可以完成模板导入，目录结构文件夹化等任务。</li><li><ahref="https://typoraio.cn/">Typora</a>：写markdown文件的轻量级编辑器，比自带的记事本多个渲染和快捷键的事儿。</li></ul><h3 id="安装">安装</h3><h4 id="前置依赖">前置依赖</h4><ul><li><ahref="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Node-js">Node.js</a>：是一个可以执行JavaScript 代码的软件程序。更准确地说，Node.js 是一个 JavaScript运行环境。</li><li><ahref="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85-Git">Git</a>：著名的开源分布式版本控制系统，用于敏捷高效地处理任何或小或大的项目。Github的Git就是他，可以理解为你的管理文件版本的管家，支持各版本保存、回滚、上传。</li></ul><h4 id="hexo安装">Hexo安装</h4><p>这里的步骤都要在git-bash命令行中做，路径为你要放博客的文件夹下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment"># 全局安装 Hexo 命令行工具（CLI）</span><br><span class="hljs-comment"># -g 表示全局安装，安装后可在任何目录使用 hexo 命令</span><br><span class="hljs-comment"># 需要提前安装 Node.js 和 npm（Node.js 包管理器）</span><br>npm install -g hexo-cli<br><br><span class="hljs-comment"># 验证 Hexo 是否安装成功，显示 Hexo 及其相关依赖的版本号</span><br><span class="hljs-comment"># 如果正常显示版本信息，说明环境配置正确</span><br>hexo -v<br><br><span class="hljs-comment"># 初始化一个新的 Hexo 项目到当前目录下的 my-blog 文件夹</span><br><span class="hljs-comment"># 该命令会创建项目目录结构并自动下载默认主题 landscape</span><br>hexo init my-blog<br><br><span class="hljs-comment"># 进入项目目录（后续操作都需要在此目录下执行）</span><br><span class="hljs-built_in">cd</span> my-blog<br><br><span class="hljs-comment"># 安装项目所需的本地依赖包</span><br><span class="hljs-comment"># 会读取 package.json 中的依赖项，安装到 node_modules 目录</span><br><span class="hljs-comment"># 这些依赖包括 hexo-server, hexo-deployer-git 等核心模块</span><br>npm install<br><br><span class="hljs-comment"># 生成静态网站文件（编译 Markdown 为 HTML）</span><br><span class="hljs-comment"># 生成的静态文件会保存在 public 目录中</span><br><span class="hljs-comment"># 每次内容更新后都需要重新生成</span><br>hexo g <span class="hljs-comment"># 完整命令是 hexo generate</span><br><br><span class="hljs-comment"># 启动本地开发服务器（默认端口 4000）</span><br><span class="hljs-comment"># 访问 http://localhost:4000 可以预览网站</span><br><span class="hljs-comment"># 支持热更新，修改内容后会自动刷新（但修改配置文件后需要重启服务）</span><br>hexo s <span class="hljs-comment"># 完整命令是 hexo server</span><br></code></pre></td></tr></table></figure><p>之后就能在本机的 http://localhost:4000 预览网站了。</p><h3 id="更换主题">更换主题</h3><p>本站所用的是Fluid：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-comment">#具体配置可以参考官方文档(https://hexo.fluid-dev.com/docs/)，写的很详细。</span><br>npm install --save hexo-theme-fluid<br><br><span class="hljs-comment">#安装好后可以在本机4000端口查看效果</span><br>hexo clean <span class="hljs-comment"># 清除已生成的静态网页文件  </span><br>hexo g <span class="hljs-comment"># 重新生成  </span><br>hexo s <span class="hljs-comment"># 本地启动</span><br><br><span class="hljs-comment">#如果git已经配置好可以直接上传</span><br>hexo d <span class="hljs-comment">#上传到你配置好的github托管服务器上，然后可以通过网页来查看，具体公网域名就不用管了，这玩意就已经可以在公网上浏览了。</span><br></code></pre></td></tr></table></figure><h2 id="写作">3.写作</h2><p>本人刚开始用的还是typora，但是每次插入图片，配置笔记属性啥的都要手动做，简直是敲代码届的耻辱好吧，于是就转向Obsidian来写blogs了，这篇文章也算是第一篇用Obsidian来写的。</p><p>首先是安装Obsidian，这个不说了直接看官方网站和相关文章：</p><ul><li><a href="https://help.obsidian.md/">Home - Obsidian Help</a></li><li><a href="https://forum-zh.obsidian.md/">Obsidian 中文论坛 - Obsidian知识管理 笔记</a></li></ul><p>你要是连markdown也不会写的话，那就先学markdown，挺好使的，你要是信息类行业少不了这个：</p><ul><li><a href="https://markdown.com.cn/basic-syntax/">Markdown 基本语法 |Markdown 教程</a></li></ul><p>具体的可以语法与快捷键结合。</p><h2 id="发布">4.发布</h2><p>先配置一下<code>hexo-deployer-git</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">npm install hexo-deployer-git --save<br></code></pre></td></tr></table></figure><p>改一下<code>_config.yml</code>文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">deploy:</span>  <br><span class="hljs-attr">type:</span> <span class="hljs-string">git</span>  <br><span class="hljs-attr">repo:</span> <span class="hljs-string">&lt;repository</span> <span class="hljs-string">url&gt;</span> <span class="hljs-comment"># https://github.com/&lt;GitHub用户名&gt;/&lt;GitHub用户名&gt;.github.io.git  </span><br><span class="hljs-attr">branch:</span> [<span class="hljs-string">branch</span>]  <br><span class="hljs-attr">token:</span> [<span class="hljs-string">token</span>]<br></code></pre></td></tr></table></figure><h2 id="工作流暂时">5.工作流（暂时）</h2><ul><li>使用new指令新建一篇博客</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo new &lt;文章名&gt;<br></code></pre></td></tr></table></figure><ul><li>打开obsidian开始写作</li><li>写作完了之后，终端本地预览</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo g  <br>hexo s<br></code></pre></td></tr></table></figure><ul><li>预览没问题之后，发布</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo d<br></code></pre></td></tr></table></figure><h2 id="优化">6.优化</h2><h3 id="分类树文件夹化自动分类">分类树文件夹化（自动分类）</h3><p>不可否认的是是项目就没有完美的，像是上述介绍的这套流程个人用上去还是有些很不顺的点，比如分类页的话，本来这个按照逻辑的话在本地写博客就应该是按照文件夹的包容关系来分，但是他原生的分类要在每篇博客前面的文件属性里面这样写：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hexo简介</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2008-08-08</span><br><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">web开发</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">前端</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">博客框架</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>这玩意让我咋管理？你的意思是我要记住每个文件是在那个目录树下？一个字都不能错？这不是给自己找事吗？本来分类就是为了便于管理，这不是本末倒置了吗</p><p>于是就去找，发现了个开源项目：</p><ul><li><ahref="https://github.com/xu-song/hexo-auto-category?tab=readme-ov-file">xu-song/hexo-auto-category:Generate categories automatically for each post in Hexo</a></li></ul><p>按照他<ahref="https://blog.eson.org/pub/e2f6e239/">官方文档</a>进行安装配置就行。有一点要注意的是如果存在文件没有分类组的话会发生一些奇妙的事情（好像）。</p><h3 id="git自动推送">Git自动推送</h3><p>在写完前几篇博客后我每次都要手动到git的bash下<code>hexo clean``hexo g``hexo d</code>一遍，很麻烦，然后就是想到为什么不能直接上自动化插件：</p><p>具体做法的原文档来源于：</p><ul><li><ahref="https://zhuanlan.zhihu.com/p/554333805">Obsidian+Git完美维护Hexo博客- 知乎</a></li></ul><h3 id="导入模板">导入模板</h3><p>obsidian原生支持模板功能，直接在设置里面配置一下路径，写个模板文件就行了</p><h2 id="后记">7.后记</h2><p>本网站对写博客时图片的插入还需要进一步的优化，详情可见这位大佬的博客，本文很多都是从他那来的：</p><ul><li><ahref="https://sagi-rastar.github.io/2023/11/10/%E5%85%B3%E4%BA%8E%E6%88%91%E4%BD%BF%E7%94%A8obsidian%E5%8A%A0hexo%E9%83%A8%E7%BD%B2%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%BF%87%E7%A8%8B/#3-1-1-4-%E5%B7%A5%E4%BD%9C%E6%B5%81%E8%AE%BE%E7%BD%AE">关于我使用obsidian加hexo部署个人博客的过程- SagiRastar's Blog</a></li><li><ahref="https://coffeelize.top/posts/Obsidian-to-Hexo.html">Obsidian2Hexo| 智朋的个人博客</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>折腾杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾的小杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>批处理文件（.bat）入门</title>
    <link href="/2025/04/07/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-04-07-%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6-.bat/"/>
    <url>/2025/04/07/%E6%8A%98%E8%85%BE%E6%9D%82%E9%A1%B9/2025-04-07-%E6%89%B9%E5%A4%84%E7%90%86%E6%96%87%E4%BB%B6-.bat/</url>
    
    <content type="html"><![CDATA[<h1 id="批处理文件.bat介绍">批处理文件（.bat）介绍</h1><p>批处理文件（Batch File，扩展名 <code>.bat</code>）是 Windows系统中的一种脚本文件，用于自动执行一系列命令。通过编写 <code>.bat</code>文件，可以轻松实现任务自动化、系统管理及文件操作等功能。</p><h2 id="如何编写和使用-.bat-文件">如何编写和使用 .bat 文件</h2><h3 id="编写">编写</h3><p>使用记事本或其他文本编辑器创建一个新文件，输入所需的命令和脚本逻辑，最后保存后修改后缀名即可</p><h3 id="使用">使用</h3><ul><li>双击 <code>.bat</code> 文件直接运行。</li><li>或在命令提示符下输入文件路径执行。</li><li>可结合 Windows 任务计划程序实现定时自动运行。</li></ul><h2 id="常用语法">常用语法</h2><ul><li><strong>注释：</strong> 用于说明脚本，不参与执行。</li></ul><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-comment">REM 这是一个注释</span><br>:: 这也是注释<br></code></pre></td></tr></table></figure><ul><li><p><strong>关闭命令回显：</strong> 防止在命令执行时显示命令内容。<figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br></code></pre></td></tr></table></figure></p></li><li><p><strong>输出信息：</strong> 用于在屏幕上显示文本。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">echo</span> Hello, World!<br></code></pre></td></tr></table></figure></p></li><li><p><strong>暂停脚本：</strong> 等待用户按任意键继续执行。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">pause</span><br></code></pre></td></tr></table></figure></p></li><li><p><strong>条件判断：</strong> 根据条件执行不同命令。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-keyword">if</span> <span class="hljs-keyword">exist</span> &quot;file.txt&quot; (<br>    <span class="hljs-built_in">echo</span> 文件存在<br>) <span class="hljs-keyword">else</span> (<br>    <span class="hljs-built_in">echo</span> 文件不存在<br>)<br></code></pre></td></tr></table></figure></p></li><li><p><strong>循环处理：</strong> 遍历文件或变量列表。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-keyword">for</span> <span class="hljs-variable">%%i</span> <span class="hljs-keyword">in</span> (*.txt) <span class="hljs-keyword">do</span> (<br>    <span class="hljs-built_in">echo</span> 找到文件：<span class="hljs-variable">%%i</span><br>)<br></code></pre></td></tr></table></figure></p></li><li><p><strong>变量使用：</strong> 设置并引用变量，也可通过<code>%1</code>, <code>%2</code> 接收命令行参数。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-built_in">set</span> name=World<br><span class="hljs-built_in">echo</span> Hello, <span class="hljs-variable">%name%</span>!<br></code></pre></td></tr></table></figure></p></li><li><p><strong>跳转标签：</strong> 使用 <code>goto</code>实现脚本流程控制（模拟函数）。</p><p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs bat"><span class="hljs-keyword">goto</span> :myLabel<br>:myLabel<br><span class="hljs-built_in">echo</span> 这是跳转到标签的示例<br></code></pre></td></tr></table></figure></p></li></ul><h2 id="代码示例">代码示例</h2><p>以下示例展示了如何检查文件是否存在，并输出相应信息：</p><figure class="highlight bat"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs bat">@<span class="hljs-built_in">echo</span> off<br><span class="hljs-built_in">echo</span> 检查文件是否存在...<br><span class="hljs-keyword">if</span> <span class="hljs-keyword">exist</span> &quot;test.txt&quot; (<br>    <span class="hljs-built_in">echo</span> 文件 test.txt 存在!<br>) <span class="hljs-keyword">else</span> (<br>    <span class="hljs-built_in">echo</span> 文件 test.txt 不存在!<br>)<br><span class="hljs-built_in">pause</span><br></code></pre></td></tr></table></figure><h2 id="其他注意事项">其他注意事项</h2><ul><li><p><strong>调试：</strong> 在脚本中加入 <code>pause</code>方便查看执行结果和逐步调试。</p></li><li><p><strong>环境兼容：</strong> 批处理文件专用于 Windows环境，其他系统（如 Linux）通常使用 Shell脚本（<code>.sh</code>）。</p></li><li><p><strong>安全性：</strong>避免在脚本中存储敏感信息，谨慎使用删除、格式化等危险命令。</p></li><li><p><strong>扩展应用：</strong> 批处理文件可以与 PowerShell脚本、VBScript 等其他自动化工具结合，处理更复杂的任务。</p></li></ul><hr /><p>参考资料：<br /><a href="https://cn.windows-office.net/?p=22398">Windows Office批处理文件介绍</a><br /><a href="https://blog.csdn.net/csfchh/article/details/106795352">CSDN批处理文件教程</a><br /><a href="https://baike.baidu.com/item/bat/365230">百度百科 - bat</a></p>]]></content>
    
    
    <categories>
      
      <category>折腾杂项</category>
      
    </categories>
    
    
    <tags>
      
      <tag>折腾的小杂项</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>显示器参数及相关知识解读</title>
    <link href="/2025/04/06/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/%E6%A6%82%E5%BF%B5%E9%98%90%E8%BF%B0/2025-04-05-%E6%98%BE%E7%A4%BA%E5%99%A8%E5%8F%82%E6%95%B0%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E8%A7%A3%E8%AF%BB/"/>
    <url>/2025/04/06/%E7%94%B5%E8%84%91%E7%A1%AC%E4%BB%B6/%E6%A6%82%E5%BF%B5%E9%98%90%E8%BF%B0/2025-04-05-%E6%98%BE%E7%A4%BA%E5%99%A8%E5%8F%82%E6%95%B0%E5%8F%8A%E7%9B%B8%E5%85%B3%E7%9F%A5%E8%AF%86%E8%A7%A3%E8%AF%BB/</url>
    
    <content type="html"><![CDATA[<h1 id="显示器相关参数与相关原理解读">显示器相关参数与相关原理解读</h1><p>最近买了个副屏，顺便写个文章整一下相关知识方便选购。</p><h2 id="彩色显示器原理">彩色显示器原理</h2><h3 id="前置知识">前置知识</h3><ul><li>液晶材料：一种合成的有机化合物，处于固态与液态之间，不通电时内部分子排列混乱不透光，通电时分子排列有秩序透光，当然也有相反的情况，通电不透光不通电透光。</li><li>光的偏振：光的偏振是横波振动方向的空间选择，通过偏振片的调控与检测光强变化，我们可以验证其横波特性及振动方向选择性。具体详见高中物理书。</li></ul><h3 id="主要思想">主要思想</h3><p>控制RGB值来混合出彩色出来。</p><h3 id="技术路线">技术路线</h3><h4 id="lcd">LCD</h4><h5 id="普通lcd">普通LCD</h5><p>这种还是比较主流也比较老的，最下面是一层背光层，发白光，底光层上面蒙上一层具体就是在那种相互垂直的两个偏振片中间加上一个液晶层，利用液晶对光的偏转能力来控制其光的偏转量，进而控制亮度。而彩色的话就在液晶层外加上彩色滤光片就行。普通的背光板就是反光板匀光板中间夹一层led灯带。当然在显示器打开的情况下显示黑屏的话，因为底光已经开了，同时液晶层在不通电的时候实际上也会对光有一部分偏转，故与不通电的纯黑色有区别，同时也会造成对比度的损失。</p><p>具体可以根据液晶层的默认状态分为下面三种：</p><ul><li>VA默认垂直，加电呈垂直螺旋状偏转透光，对比度高，可视角度一般，响应较慢，有些劣质的板子可能会有拖影，适合电影和3A用户。</li><li>IPS默认水平，加压水平平行偏转透光，对比度一般，可视角度广，响应适中，算是水桶板子，适合大多数场景。</li><li>TN默认水平螺旋偏转，加压垂直偏转不透光，对比度低，可视角度差，但是响应快，适合go学长瓦学弟。</li></ul><h5 id="qled">QLED</h5><p>这个是把LCD的基础上改进背光为蓝色，然后使用量子点涂料（量子点是一种极为微小的化合物，收蓝光之后会发射波长不同的光线，有点电子激发再回落基态的味道了）刷在基板上，解决的是普通LCD饱和度不行的问题，实际上还是归属于LCD。</p><h5 id="mini-led">mini-LED</h5><p>将背光板换成分块，在黑色区域直接关背光，其他和LCD一样，有利于高阶HDR的实现，但是有会出现调教不好有拖影或者光晕的问题。</p><h4 id="led">LED</h4><h5 id="oled">OLED</h5><p>有机发光二极管（Organic Light EmittingDiode），传统二极管好是好，但是每个像素上三个二极管，再集成为一块大屏幕就难以做到，于是就有了这个东西。用的是直接给荧光材料通电来实现发有颜色的光，三个集成就是一个像素。也可以看作像素级别的分区背光，无光晕且饱和度高，厚度薄，响应快，色域广，没背光功耗小，有柔性。缺点就是因为三种荧光材料寿命不同，容易烧屏（色彩残留，有色差），亮度峰值低，PWM调光、等效分辨率下降的问题。</p><h5 id="w-oled">W-OLED</h5><p>将三种荧光材料换成白色荧光材料，上面盖上RGBW偏振片（红绿蓝加上一个白），其中W是为了弥补亮度，但是W又对红绿蓝像素产生了白色光干扰，又回到了LCD的问题上了。</p><h5 id="qd-oled">QD-OLED</h5><p>将QLED里面的背光换成了蓝色荧光物质，还是属于LED里面，解决的是W-OLED的问题，但是量子点材料可能被外界光激发污染信号。</p><h5 id="micro-oled">micro-OLED</h5><p>微型的发光二极管，就是解决了传统每个像素上三个二极管，再集成为一块大屏幕就难以做到的问题，但是因为巨量转移技术不成熟所导致的价格贵，一块几十万。</p><h2 id="参数">参数</h2><h3 id="屏幕尺寸">屏幕尺寸</h3><p>指屏幕对角线的长度，单位通常是英寸（下面都直接写寸）。主流的那种十分正常的屏幕有24、27、32寸等，便携屏目前我见的（也不多）都14寸不等，一般来说24或者27比较主流，一般网吧差不多就这样，大一点的话可以选更大屏幕或者带鱼屏（富哥随意）。</p><h3 id="分辨率">分辨率</h3><p>平常见的最多的应该就是1080p（1920*1080）、2k（2560*1440，即16:9）、4k（3840*2160），有的时候还能看到像2.5k（16:10的主配，当然也有的人叫2560*1440为2.5k）。当然这只是常见的，很多情况下什么2k2.5k的叫法十分随意，其他的见下表（图源小黑盒）</p><figure><imgsrc="D:\blogs\source\img\inblogs\76a78db4df63fe2a9e93637edd70ab7.jpg"alt="76a78db4df63fe2a9e93637edd70ab7" /><figcaptionaria-hidden="true">76a78db4df63fe2a9e93637edd70ab7</figcaption></figure><p>还有就是这个玩意儿相当于乱叫，不能太深究，游戏群体，显示器厂家，电影行业，电视行业叫法全都不一个标准。下面举几个例子：</p><ul><li><p>常见的视频平台：标清是480p，高清是720p，超高清是1080p，蓝光是1080p60帧，4k是2160p，码率未知。</p></li><li><p>上海某电视台剪辑师说法：1080P10M叫高清，2560*1440M叫2K，3840*2160或4096*2160叫4K，而蓝光是特指蓝光盘，和磁带一样都是实体存储介质。</p></li><li><p>山东某电视台工作人员说法：480p为标准，720p为高清，1080p是超清。4k的就叫做4k。码率按mxf算。</p></li></ul><p>对于视频而言，不能光看分辨率，码率也很关键。视频分辨率是4k的，但码率如果是5m，那还不如10m的1080p清晰。再一个对于显示器而言，也不能光看分辨率，还要看ppi。国内视频不如自己下的资源清晰是因为码率太低了。具体的诸如找BT种子的相关资源网站或许之后有时间的话也会整理一下？</p><p>有些重度影视发烧友，甚至还要用PotPlayer软件调试视频色彩平衡还有什么解码方式，这个算是逛论坛的时候看到的。</p><p>显示上还有一点就是如果你用一张1080P照片，放到2K分辨率下，可能会出现更模糊的情况，1080P没有那么多精准像素点，靠2K屏模拟，所以有点胡，当然了，感知度不强。</p><p>有的网友指出OLED屏幕的分辨率要打八折，是像素的工作原理不同而导致的。</p><h4 id="基本单位">基本单位</h4><ul><li><p>px（像素）：像素是显示器上最小的显示单位，用来表示图像的基本构成。px就是指一个像素点。</p></li><li><p>pt（点）：描述字体大小。在数字设备上，pt 与 px的转换通常依赖于设备的分辨率或 ppi（如 72ppi 或 96ppi）。</p></li><li><p>ppi（每英寸像素数）：用来衡量显示屏的像素密度，即每英寸包含的像素数。公式为：</p></li></ul><p><span class="math display">\[PPI = \frac{\sqrt{(宽度像素数)^2 +(高度像素数)^2}}{屏幕对角线长度（英寸）}\]</span></p><ul><li>dpi（每英寸点数）描述打印机输出的精细程度，表示每英寸能够打印的点数。有时dpi 和 ppi 会混淆，但严格来说，dpi 更多用于打印领域，而 ppi则用于显示设备。</li></ul><h3 id="面板选择">面板选择</h3><p>具体详见发光原理，一般来说直接IPS或者OLED，玩3A和电影的可以考虑VA，高端FPS上TN.</p><h3 id="刷新率">刷新率</h3><p>就是帧数，越高越流畅，没啥好讲的，像我这种就敲敲键盘打打gal的上个60Hz够了，打电动的尤其是fps玩家越高越好。</p><h3 id="亮度">亮度</h3><h4 id="单位">单位</h4><p>首先明确一点就是在显示器的亮度上一般用的是尼特（nit）来刻画单位光强密度，在其他地方可能还会见到诸如：</p><ul><li>坎德拉（光强的国际制七个主单位之一，光源在某一方向上的发光强度）：衡量光源在某一方向上的发光强度，大概可以拿以点光源的光强除上以点光源为圆心的包络球的球面度来理解。1坎德拉是光源在给定方向（频率540×10¹²Hz，对应绿光）发出1/683瓦特每球面度的辐射强度时产生的发光强度。</li><li>烛光：旧单位，比坎德拉稍小，约的话可以直接等于坎德拉，现在基本上被废。</li><li>流明（光照强度之和，整体发出的可见光总量）：1流明 =1坎德拉×1球面度（lm = cd·sr）</li><li>尼特（光源或反射表面单位面积的发光强度）：1尼特 = 1坎德拉/平方米（nt= cd/m²）</li><li>勒克斯（照度的单位，表示的单位面积接收到的光通量）：1勒克斯 =1流明/平方米（lx = lm/m²）</li></ul><p>总的来说光通量（流明）是指光源所有方向上发射出光的能力，发光强度（坎德拉）是特定方向上的发光能力，亮度（尼特）是单位面积的发出或反射的发光强度，照度（勒克斯）是单位面积所入射的光量。</p><h4 id="例子">例子</h4><p>电影院中屏幕大概是50nit，户外手机一般为300nit往上，所以电影院不能看手机。当然，要是算流明的话电影院屏幕远远大于手机</p><p>索尼HDR电视的亮度能干到10000nit，大多数HDR设备最高2000nit，再高就是瞎眼神器。</p><p>智能手机/平板电脑：200 至 1000+尼特，400-500可以在白天看，200nit太阳下看不清。</p><p>笔记本电脑/显示器：200 至 600+尼特，不建议太高，上限200低端，上限400足够，看不清建议拉窗帘而不是调亮度。笔者刚买的副屏就是400nit的。</p><h3 id="对比度">对比度</h3><p>对比度指的是一幅图像中明暗区域最亮的白和最暗的黑之间的比值，差异范围越大代表对比越大，差异范围越小代表对比越小。对比度高，可以展示更多的亮部和暗部细节，让画面更有层次。</p><p>对比度的相关判断可以直接点击<ahref="https://www.pingmudiy.com/screentest/#welcome">这个链接</a>，用烧屏网的相关工具进行测试。这里就不放图了，避免莫名其妙的压缩导致不准。</p><h3 id="接口">接口</h3><ul><li><p><strong>VGA</strong>：上古模拟信号接口，上次见还是家里面的古董老机器，仅限视频传输，容易受到干扰，信号容易失真，字容易糊仅支持低分辨率（如1080p@60Hz），逐渐被淘汰，但是在几十年前十分风光。</p></li><li><p><strong>DVI</strong>：为了弥补 VGA接口的不足，推出了能同时支持模拟信号和数字信号传输的 DVI接口，能干到1080p@144Hz，但是缺点就是不支持音频信号。现在也基本上见不到了，就不再详细说明。</p></li><li><p><strong>HDMI</strong>：主流数字接口，支持音画同步传输。HDMI2.0带宽18Gbps，可承载1440p@144Hz、1080p@240Hz以及4K<spanclass="citation" data-cites="60Hz">@60Hz</span>；HDMI2.1带宽48Gbps，支持4K@120Hz或8K<span class="citation"data-cites="60Hz">@60Hz</span>，增加了对动态HDR的支持，适用于游戏主机与高端显卡。</p></li><li><p><strong>DisplayPort（DP）</strong>：PC领域专业接口，DP1.4支持4K@120HzHDR或8K@60Hz HDR，支持3:1的DSC压缩技术；DP2.0带宽提升至80Gbps，可原生支持8K@60Hz。</p></li><li><p><strong>USB-C</strong>：多功能接口，支持视频传输（需DP AltMode）、数据传输与充电（PD协议）。部分显示器通过USB-C直连笔记本实现「一线通」，但需注意带宽限制（如USB3.2 Gen2仅支持4K@60Hz）。</p></li></ul><p>电竞用户优先选DP 1.4或HDMI2.1及以上；轻薄本用户也可考虑USB-C一线通；多设备切换需求可关注显示器是否配备KVM功能。</p><p>具体而言可以用接口带宽来算一下所支持的分辨率，公式如下： <spanclass="math display">\[总像素*子像素*色深*刷新率 = 总带宽\]</span> 其中： <span class="math display">\[总像素=横向分辨率*纵向分辨率\]</span></p><p><span class="math display">\[子像素=RGB色素数=3\]</span></p><p>假设要输出4K、10bit、144Hz的画面： <span class="math display">\[3840*2160*3*10bit*144 = 35.8Gbps。\]</span></p><h3 id="色域">色域</h3><h4 id="概述">概述</h4><p>就是能够显示的色彩范围，越高表现度越好，标准的话主流的有NTSC（有点老）、sRGB、P3和AdobeRGB，一般来说看sRGB就行，日常95%以上，设计相关或者有其他偏好的话就上99%或者100%sRGB的就好。想要进一步了解更多就继续看</p><h4 id="拓展">拓展</h4><ul><li><strong>sRGB</strong>：由微软公司和惠普公司主导，是windows系统的UI和各类软件中默认应用的色域，也是互联网中图形图像信息的标准色域。但是sRGB色域在CIE-1931中覆盖面积不高，色彩还原度有限，绿色部分的覆盖率较低，目前市面上大部分显示器都能轻松达到96%以上的sRGB色域覆盖。</li><li><strong>Adobe RGB</strong>：Adobe公司在sRGB不够用的时候出的，玩摄影剪辑的都比较熟悉，他家的PS、AI、PR之类的十分流行。其色域覆盖区域更广，显示色彩更丰富，大多应用于高端的艺术设计专业显示器中，价格昂贵。</li><li><strong>DCI-P3色域</strong>：其主要由美国电影行业提出，是数字影像领域中比较新的色域标准，着重人类视觉的真实体验，匹配电影的色彩表现要求。相比sRGB色域，其覆盖了更多的红色和绿色空间。但是我见的倒是相对少一些。</li><li><strong>Rec.2020</strong>：国际电信组织将其作为一个涵盖各影像广播的参数规划、视其为高画质投影机/电视和相关无线电视广播设备的参考标准。这些包含：解析度(resolution)、帧速率(framerate)、位元深度(bit depth)、色域等。</li><li><strong>P3</strong>：广义上包含了 DCI-P3 和 DisplayP3，前者是影视行业标准，后者是 Apple 在 DCI-P3 基础上参考了 sRGB而修订出的自己的标准，在白点和伽马上与 DCI-P3不同，但是能覆盖的颜色相同，相对于 sRGB 除了蓝色都有较大提升。</li><li><strong>NTSC</strong>：由美国国家电视标准委员会在 1953年订制，目的是为了给当时刚出现不久的 CRT彩色电视定制一套标准，由于实在是太过于古老（Apple DOS 3.1 诞生于 1978年， MS-DOS 诞生于 1980 年）早已不适用于现代显示器，更最重要的是对于PC（广义的）和移动设备来说，几乎没有内容创作者是以 NTSC为工作空间的，它保留下来最多的用途还是用于比较其他的色彩空间。</li><li><strong>REC-709</strong>：是 sRGB的影视行业（高清电视）名称，属于早期彩色电视所用的色域标准，也是目前最为广泛的色域标准，我国影视行业至今仍在使用此标准。</li></ul><p>其中AdobeRGB和DCI-P3色域远大于sRGB，显示的色彩范围更丰富，也被称为广色域。一般来说达到92%DCI-P3就可以说是广色域屏幕了。</p><figure><imgsrc="https://pic2.zhimg.com/v2-3a55b4540248ffc6c308c23af36f4181_r.jpg"alt="【科普】电视显示器色域科普：sRGB，DCI-P3，Adobe RGB色域，Rec.2020,广色域都是些啥？一文读懂 - 知乎" /><figcaptionaria-hidden="true">【科普】电视显示器色域科普：sRGB，DCI-P3，AdobeRGB色域，Rec.2020,广色域都是些啥？一文读懂 - 知乎</figcaption></figure><h4 id="几个误区">几个误区</h4><ul><li><strong>多色域显示器</strong></li></ul><p>有的专业显示器会支持不同的色域，因为广色域显示器的作用范围往往都超越sRGB，但是如果是用广义显示器来显示sRGB的话，可能会产生一些偏色与失真，即便它的色彩极为饱和。于是就要进行一些色域的缩限，就是在平常情况下将其缩放在sRGB的范围内，来保证图片不会失真。具备色域限缩功能的显示器都会特别标注支持多种色域，让用户在日常使用中使用sRGB色域显示，而在摄影修图或者印刷校样的时候，可以切换AdobeRGB色域显示，确保色彩的可靠性。</p><ul><li><strong>色域覆盖超100%</strong></li></ul><p>比如说厂家发布的新眼球，然后将那个色域标注为比如130%，即超出sRGB范围，达到了标准面积的130%，但是这有可能有一个雷点就是，他可能会利用色欲域的偏移来达到一个指标的优化，实际上的图片是失真了的。</p><ul><li><strong>72%的NTSC</strong></li></ul><p>有很多无良厂家和媒体给出过这么一个等式：72% NTSC = 100sRGB.并且以此来宣传自己的屏幕很优秀，能够用于专业的工作，不比当年 MacBook Pro100% sRGB 差，理由就是用 NTSC 测试的话，当年的 MacBook Pro 屏幕也是 72%NTSC色域。这实际上是利用了消费者认知的一个信息差，想以此来标榜自己的显示器，需要擦亮眼睛。</p><h3 id="色深">色深</h3><p>色深色深即色彩深度，色彩深度是计算机图形学领域表示在位图或者视频帧缓冲区中储存1像素的颜色所用的位数，它也称为位/像素（bpp）。色彩深度越高，可用的颜色就越多，过渡会更加丝滑。</p><p>色深表示显示器对单色通道的灰阶划分精度，8 bit 对应每通道 256级灰阶（RGB 三通道共 1670 万色），10 bit 则为 1024 级（10.7亿色）。更高的色深能减少色彩断层现象，尤其在渐变场景（如天空、阴影过渡）中表现更自然。</p><p>目前主流显示器多采用 8 bit 原生色深，部分 IPS 面板通过FRC（帧率控制） 技术抖动模拟 10 bit 效果（标注为 8 bit+FRC）。原生 10bit 面板成本较高，多见于专业设计屏或高端 OLED 屏幕。大部分 8 bit够了。</p><p><strong>注意</strong>：某些厂商会模糊标注“10.7亿色”，实际可能为抖动实现。</p><h3 id="色准">色准</h3><p>色准是衡量颜色「准确度」的指标，简单来说，就是让显示器显示什么颜色，就是什么颜色。一般用ΔE（显示颜色与标准颜色之间的偏差）来表示（数值越小越好）。</p><p>衡量参数为Delta E（△E），数值越小，色彩还原越好。</p><ul><li>△E ≤ 1：人眼几乎无法察觉色差，适合专业摄影、印刷校色。</li><li>△E ≤ 2：满足设计、影视后期等创作需求。</li><li>△E &gt; 3：肉眼可见偏色，需通过校色仪校准。</li></ul><p>专业显示器出厂前会进行校色并附赠 <strong>ΔE报告</strong>，部分型号支持硬件级校准（如 LUT写入）。日常使用中，环境光变化与面板老化可能导致色准偏移，建议定期使用校色仪（如Datacolor SpyderX、X-Rite i1Display Pro）重新校准。校色时需注意：</p><ul><li><p>预热显示器 30 分钟以上。</p></li><li><p>关闭动态对比度与 HDR 功能。</p></li><li><p>选择与工作流匹配的色域。</p></li></ul><h3 id="hdr">HDR</h3><p>这个概念这几年应该算是比较火，全称High-DynamicRange，高动态范围成像，简单的来说就是开了看着会更爽，可以在认证处看一下是什么级别。</p><p>它可以通过提升显示器的<strong>亮度范围</strong>和<strong>对比度</strong>，还原更接近真实世界的明暗细节与色彩层次。与传统SDR（标准动态范围）相比，HDR能同时保留高光部分的纹理（如阳光下的云层）和暗部场景的细节（如阴影中的岩石），显著增强画面立体感与沉浸感。</p><h4 id="标准">标准</h4><p>业界暂无统一标准。</p><ul><li><strong>HDR10</strong>：基础标准，使用静态元数据（全片统一亮度参数），支持10 bit 色深，峰值亮度通常要求 ≥1000尼特，广泛适用于游戏、影视内容。</li><li><strong>HDR10+</strong>：升级版，引入动态元数据（逐帧优化亮度），兼容性较强。</li><li><strong>Dolby Vision</strong>：杜比实验室推出的高端标准，支持 12 bit色深与动态元数据，对硬件要求更高，画面表现更细腻，多用于高端电视与流媒体（如Netflix）。</li><li><strong>DisplayHDR</strong>：由 VESA 基于HDR10制定的显示器认证体系，分多个等级（如 DisplayHDR400/600/1000），标注峰值亮度、色域覆盖等参数（例：DisplayHDR 1000 需满足1000 尼特峰值亮度、99% DCI-P3 色域）。</li></ul><h4 id="注意">注意</h4><ul><li>部分显示器仅支持 HDR 信号输入，但亮度不足或缺乏分区背光，实际效果与SDR 差异不大。</li><li>DR 对暗室环境更友好，强光下高亮优势难以体现。</li><li>需片源、播放设备、显示器均支持 HDR 才能生效，缺一不可。</li><li>HDR对游戏不是很必要，游戏在信号源上就有先天优势。</li><li>当我们看到一个电视机或者显示器，宣传自己支持HDR的时候，会有以下两种可能性。第一，电视机或显示器从显示驱动芯片到显示面板都支持HDR标准。第二，电视机或显示器的显示驱动芯片支持HDR解码，但是显示面板并不一定能够通过HDR认证。例如SDR的标准是100nit，HDR认证的最低标准是400nit，介于100nit和400nit之间显示面板，通过显示驱动芯片对HDR的支持，可以提供比SDR高的多的动态范围，让用户体验到接近HDR的视觉体验。</li></ul><h3 id="重量">重量</h3><p>便携屏要考虑一下，防止抱着一块砖到处转，这个就比较看个人了。</p><h3 id="支架与挂壁支持">支架与挂壁支持</h3><p>详见自己的需求，这里略。</p><h2 id="工具汇总">工具汇总</h2><ul><li>对比度：<ahref="https://www.pingmudiy.com/screentest/#welcome">烧屏网</a>。</li><li>DisplayHDR小软件，自己找一找吧。</li></ul><h2 id="参考">参考</h2><p><ahref="https://cn.windows-office.net/?p=10479">什么是屏幕亮度尼特？您需要多少尼特？</a></p><p><ahref="https://zhuanlan.zhihu.com/p/606290120">【科普】电视显示器色域科普：sRGB，DCI-P3，AdobeRGB色域，Rec.2020,广色域都是些啥？一文读懂 - 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/562781181">科普百篇系列（155）液晶彩色显示屏的构造原理 - 知乎</a></p><p><ahref="https://baike.baidu.com/item/光的偏振/1277912">光的偏振_百度百科</a></p><p><ahref="https://www.bilibili.com/video/BV1Me4y1k72b?spm_id_from=333.788.videopod.sections&amp;vd_source=35efa20a3dc2d6382913a782f2bf8ad8">【硬核科普】一个视频带你了解LCDOLED QLED mini-LED等显示技术的区别_哔哩哔哩_bilibili</a></p><p><ahref="https://www.zhihu.com/question/407170937">流明，尼特，勒克斯，烛光，坎德拉有什么区别有什么关系啊？怎么使用？为啥屏幕只用尼特来计量？- 知乎</a></p><p><ahref="https://blog.csdn.net/didi_ya/article/details/122241863">【科普】显示器VGA、DVI、HDMI、DP等各种接口详细科普_显示器接口-CSDN博客</a></p><p><ahref="https://zhuanlan.zhihu.com/p/440706026">一文搞懂，显示器接口的VGA、HDMI、DVI 和 DisplayPort 、雷霹、Type-C接口有什么区别？ -知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/70673207">显示器接口都有哪些？- 知乎</a></p><p><ahref="https://zhuanlan.zhihu.com/p/394352018">【显示器科普知识6】液晶显示器技术参数：对比度- 知乎</a></p><p><ahref="https://zhuanlan.zhihu.com/p/398281787">硬核科普│什么是HDR？一文秒懂为何大家都向往HDR模式！- 知乎</a></p><p><a href="https://zhuanlan.zhihu.com/p/70383462">基础px、pt、ppi的知识- 知乎</a></p><p><a href="https://zh.wikipedia.org/wiki/色彩深度">色彩深度 -维基百科，自由的百科全书</a></p><p><ahref="https://zhuanlan.zhihu.com/p/259139655#:~:text=色深代表着画面颜色的「细腻程度」，也以简单理解为颜色数量的多少。%20并且，数值越大就越细腻，同时色彩过渡就更加平滑自然。%20目前主流显示器的色深一般是6%20bit、8bit和10bit。%20具体而言，色深8bit指的是红（R）、绿（G）、蓝（B）这三原色，在显示颜色时各有2的%208次方种（即%20256%20种）。,种不同的绿、256种不同的蓝，这三种原色组合起来，总的颜色数量就是256×256×256%3D16.7%20百万。%20以此类推，10bit的色数就是%2010.7%20亿，而6bit的色数是%200.26%20百万。%20由此可见6bit的色数是相对偏少的，因此色彩显示效果就比较差。">色深、色域、色准、HDR、防撕裂你都懂吗？- 知乎</a></p>]]></content>
    
    
    <categories>
      
      <category>电脑硬件</category>
      
      <category>概念阐述</category>
      
    </categories>
    
    
    <tags>
      
      <tag>硬件</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>基于人体关键点识别的摔倒检测算法</title>
    <link href="/2025/04/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/2025-04-05-%E5%9F%BA%E4%BA%8E%E4%BA%BA%E4%BD%93%E5%85%B3%E9%94%AE%E7%82%B9%E8%AF%86%E5%88%AB%E7%9A%84%E6%91%94%E5%80%92%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/"/>
    <url>/2025/04/05/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E9%A1%B9%E7%9B%AE%E5%AE%9E%E8%B7%B5/2025-04-05-%E5%9F%BA%E4%BA%8E%E4%BA%BA%E4%BD%93%E5%85%B3%E9%94%AE%E7%82%B9%E8%AF%86%E5%88%AB%E7%9A%84%E6%91%94%E5%80%92%E6%A3%80%E6%B5%8B%E7%AE%97%E6%B3%95/</url>
    
    <content type="html"><![CDATA[<h1id="基于人体关键点识别的摔倒检测算法">基于人体关键点识别的摔倒检测算法</h1><p>最开始我们做跌倒检测的时候用的是传统的单纯用yolo等目标检测算法，但是在交流中我们也发现一个问题，就是传统的目标检测难以区分摔倒与跑跳坐下蹲下等动作之间的区别，即难以实现类间分类，然后就是一拍脑门想起来了可以基于人体关键点识别来做跌倒检测，和其他的动作区分开来，而且这个方案已经比较成熟了，详细可见下面的参考文献。在这里先做一下算法的调研。之后等这个项目结题后再进行具体模型的分享。</p><h2 id="现存算法">现存算法</h2><h3 id="传统时空分析">传统时空分析</h3><p>通过实时跟踪人体骨骼关键点（如头、肩、膝盖、脚踝等），分析这些点的位置变化规律来判断是否跌倒。优点是直观和解释性强，适合实时的检测；缺点为数据缺失时可能出错，这个在鲁棒性上可以做一些工作。</p><pre><code class=" mermaid">flowchart LR    A[视频/图像输入] --&gt; B[关键点提取]    B --&gt; C[动态特征计算]    C --&gt; D[分类决策]    D --&gt; E&#123;&#123;跌倒判定结果&#125;&#125;    %% 关键点提取模块    subgraph keypoint_extract [关键点提取]        direction TB        B1[OpenPose] --&gt;|输出关键点| B2[BlazePose]    end    %% 动态特征计算模块    subgraph feature_cal [动态特征计算]        direction TB        C1[质心高度&lt;br&gt;（头部/躯干骤降）]:::feature        C2[关节角度&lt;br&gt;（躯干-地面夹角）]:::feature        C3[运动速度&lt;br&gt;（垂直加速度突增）]:::feature    end    %% 分类决策模块    subgraph decision [分类决策]        direction TB        D1[阈值法]:::decision --&gt;|&quot;高度 &lt; 阈值?&quot;| D1a[报警]        D2[机器学习模型]:::decision --&gt; D2a[SVM] &amp; D2b[随机森林]    end    %% 应用样式    class A input;    class B,B1,B2 process;    class C,C1,C2,C3 feature;    class D,D1,D2 decision;    class E result;</code></pre><ul><li><p>关键点提取：</p><p>人体关键点检测模型（如OpenPose、BlazePose）从视频中抓取人体关键点坐标。</p></li><li><p>动态特征计算：</p></li></ul><p>​ 质心高度：头部或躯干关键点的高度突然下降可能是跌倒信号。</p><p>​关节角度：如肩膀-膝盖连线与地面的夹角急剧变小（例如从站立时的90°到跌倒后的接近0°）。</p><p>​运动速度：头部或躯干在垂直方向的加速度骤增（例如跌倒时的“失重”瞬间）。</p><ul><li>分类决策：</li></ul><p>​ 手动调阈值：设定特征阈值（如质心高度低于膝盖时判定跌倒）。</p><p>​ 机器学习模型：用SVM或随机森林基于特征组合分类。直接上机器学习算了。</p><hr /><h3 id="深度学习时序建模">深度学习时序建模</h3><p>算力和数据要求比较高。</p><ul><li>LSTM：分析关键点序列的时序变化，捕捉“跌倒前-跌倒中-跌倒后”的动态过程。<ul><li>例如，专利CN112163564A将人体分为头、躯干、腿三区域，用LSTM记忆动作轨迹，预判跌倒风险。<br /></li></ul></li><li>3DCNN：直接输入视频片段，同时提取空间（姿态）和时间（动作）特征（勉强算吧，做出来了也是勾八）。<br /></li><li>图卷积网络（GCN）：将人体骨骼视为图结构，分析关节间的关联性，适合处理复杂动作。这个网络还不咋熟，到时候再学一下。</li></ul><hr /><h3id="基于clahe与形态学的目标骨架提取"><strong>基于CLAHE与形态学的目标骨架提取</strong></h3><p>这个主要是骨架提取的，不需要深度学习模型，计算资源需求不高，但是可能在复杂背景下的鲁棒性不足。</p><ul><li><strong>图像增强</strong>：使用限制对比度自适应直方图均衡化（CLAHE）提升图像对比度，突出人体轮廓。</li><li><strong>骨架提取</strong>：<ol type="1"><li>背景差分法分离运动目标，形态学闭运算填充空洞。</li><li>边缘检测（如Sobel算子）提取人体轮廓，中值滤波去噪。</li><li>细化算法生成人体骨架，提取近似关键点（如头部、四肢末端）。</li></ol></li></ul><hr /><h3 id="拓展">拓展</h3><p><strong>遮挡问题</strong>：</p><p>使用时空滤波（如滑动窗口滤波）填补遮挡导致的关键点缺失。</p><p><strong>实时性优化</strong>：</p><ul><li><p>采用模型蒸馏技术，将大模型的知识迁移到小模型。</p></li><li><p>通过OpenVINO™等工具将模型部署到边缘设备，减少云端依赖。</p></li></ul><p><strong>鲁棒性优化（这个robust的翻译见一次骂一次）</strong></p><ul><li>多传感器融合，比如加个手环上面整点加速计之类的，但是这个成本直接干上去了</li></ul>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>项目实践</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>标准分数-Z-Score</title>
    <link href="/2025/04/04/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%B0%8F%E5%B7%A5%E5%85%B7/2025-04-04-%E6%A0%87%E5%87%86%E5%88%86%E6%95%B0-Z-Score/"/>
    <url>/2025/04/04/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%B0%8F%E5%B7%A5%E5%85%B7/2025-04-04-%E6%A0%87%E5%87%86%E5%88%86%E6%95%B0-Z-Score/</url>
    
    <content type="html"><![CDATA[<h1 id="z-score">Z-Score</h1><h2 id="一简介">一、简介</h2><p>一种衡量数据点相对于总体均值的位置的分数，可将不同量纲或不同分布的数据转化到同一标准下（标准正态分布），方便比较。正值表示数据大小在均值之上，负值则在均值之下。</p><hr /><h2 id="二公式">二、公式</h2><p><span class="math display">\[\frac{X-\bar{X} }{s}\]</span></p><p>及均值差除以标准差。matlab中可以直接使用<code>zscore()</code>函数。</p><hr /><h2 id="三应用">三、应用</h2><ul><li><strong>异常值检测</strong> zscore 可用于判断异常值（Outlier）：通常设置阈值（如 2 或 3），如果一个数据的 |z|值大于该阈值，则该数据可能为异常值。 例如：若 |z| &gt;3，则通常认为该数据偏离均值过远，可以进一步检查是否为异常情况。这个可以从正态分布中类比出来，约68% 的数据落在 [-1, 1] 范围内，约 95% 的数据落在 [-2, 2] 范围内，约99.7% 的数据落在 [-3, 3] 范围内</li><li><strong>数据标准化</strong> 在机器学习或数据挖掘中，通过对数据进行zscore 标准化，可以消除量纲影响，利于建模。</li><li><strong>比较不同数据集</strong> 由于 zscore消除了原始数据的均值和标准差的影响，所以可以将来自不同数据集的数值进行直接比较。</li></ul><hr /><h2 id="四局限性">四、局限性</h2><p>zscore对于数据的分布有一定的要求，越靠近正态分布的情况下越好。</p><p>zscore消除了数据原有的实际意义，缺乏可解释性，结果只能用于比较。如果需要解释数据的真实意义，还需要还原原值。</p><hr /><h2 id="参考资料">参考资料</h2><p><ahref="https://blog.csdn.net/qy20115549/article/details/53117742">数据标准化方法z-score讲解(matlab)_matlabzscore函数-CSDN博客</a></p><p><ahref="https://baike.baidu.com/item/Z分数/8268473">Z分数_百度百科</a></p><p><a href="https://zhuanlan.zhihu.com/p/69074703">数据标准化（一） -Z-Score标准化 - 知乎</a></p><p><ahref="https://blog.csdn.net/qq_39482438/article/details/110873346">Z-Score：定义，公式和 数据标准化-CSDN博客</a></p>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>小工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>优劣解距离法-TOPSIS</title>
    <link href="/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95-TOPSIS/"/>
    <url>/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E4%BC%98%E5%8A%A3%E8%A7%A3%E8%B7%9D%E7%A6%BB%E6%B3%95-TOPSIS/</url>
    
    <content type="html"><![CDATA[<h1 id="优劣解距离法-topsis">优劣解距离法-TOPSIS</h1><h2 id="一建模">一、建模</h2><p>TOPSIS进行建模，大致分为以下四个步骤：</p><ol type="1"><li>将原始矩阵正向化</li><li>将正向化矩阵标准化</li><li>计算得分并归一化</li></ol><p>个人感觉跟熵权法是有很多的相通之处的，二者应该可以相互混着用。</p><h3 id="矩阵正向化">矩阵正向化</h3><p>在生活中，常见的指标有四种：</p><table><thead><tr><th>指标名称</th><th>指标特点</th><th>例子</th></tr></thead><tbody><tr><td>极大型（效益型）指标</td><td>越大（多）越好</td><td>成绩、GDP增速、企业利润</td></tr><tr><td>极小型（成本型）指标</td><td>越小（少）越好</td><td>费用、坏品率、污染程度</td></tr><tr><td>中间型指标</td><td>越接近某个值越好</td><td>水质量评估时的PH值</td></tr><tr><td>区间型指标</td><td>落在某个区间最好</td><td>体温、水中植物性营养物量</td></tr></tbody></table><p>那么，在TOPSIS方法中，就是要将所有指标进行统一正向化，即统一转化为极大型指标。那么就需要极小型、中间型以及区间型的指标进行转化为极大型指标。</p><p><strong>极小型转极大型</strong>： <span class="math display">\[x_{new}= \frac{\max - x_i}{\max - \min}\]</span> 如果所有的元素均为正数，那么也可以使用：</p><p><span class="math display">\[x_{new}=\frac{1}{x_i}\]</span></p><p><strong>中间型转极大型：</strong>指标值既不要太大也不要太小，取某特定值最好（如水质量评估PH值）。设<spanclass="math inline">\(\{x_i\}\)</span>是一组中间型指标序列，且最佳的数据为<span class="math inline">\(x_{best}\)</span>，那么正向化的公式如下：<span class="math display">\[M = \max\{|x_i - x_{best}|\}\]</span> <span class="math display">\[\bar{x}_i = 1 - \frac{|x_i - x_{best}|}{M}\]</span> <strong>区间型指标：</strong>指标值落在某个区间内最好，例如人的体温在36°～37°这个区间比较好。设<spanclass="math inline">\(\{x_i\}\)</span>是一组区间型指标序列，且最佳的区间为<spanclass="math inline">\([a,b]\)</span>，那么正向化的公式如下： <spanclass="math display">\[M = \max\{a - \min\{x_i\}, \max\{x_i\} - b\},\ \tilde{x}_i =\begin{cases}1 - \frac{a - x_i}{M}, &amp; x_i &lt; a \\1, &amp; a \leq x_i \leq b \\1 - \frac{x_i - b}{M}, &amp; x_i &gt; b\end{cases}\]</span> 实际上这里跟熵权法里面讲过的那个正向化基本上一模一样，具体见<ahref="熵权法(EWM).md">熵权法</a></p><h3 id="矩阵标准化">矩阵标准化</h3><p>标准化的目的就是消除不同量纲的影响。</p><p>假设有n个要评价的对象，m个评价指标（已经正向化了）构成的正向化矩阵如下：</p><p><span class="math display">\[X =\begin{bmatrix}x_{11} &amp; x_{12} &amp; \cdots &amp; x_{1m} \\x_{21} &amp; x_{22} &amp; \cdots &amp; x_{2m} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\x_{n1} &amp; x_{n2} &amp; \cdots &amp; x_{nm}\end{bmatrix}\]</span> 那么对其标准化后的矩阵记为Z，Z的每一个元素：</p><p><span class="math display">\[z_{ij} = \frac{x_{ij}}{\sqrt{\sum_{i=1}^{n}x_{ij}^2}}\]</span> 标准化矩阵Z：</p><p><span class="math display">\[Z =\begin{bmatrix}z_{11} &amp; z_{12} &amp; \cdots &amp; z_{1m} \\z_{21} &amp; z_{22} &amp; \cdots &amp; z_{2m} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\z_{n1} &amp; z_{n2} &amp; \cdots &amp; z_{nm}\end{bmatrix}\]</span>注意：标准化的方法不唯一，但目的都是为了去量纲。比如熵权法那一章就还介绍过存在负数时直接上</p><p><span class="math display">\[z_{ij} = \frac{x_{ij} - \min\{x_{1j}, x_{2j}, \ldots,x_{nj}\}}{\max\{x_{1j}, x_{2j}, \ldots, x_{nj}\} - \min\{x_{1j}, x_{2j},\ldots, x_{nj}\}}\]</span></p><h3 id="计分归一化">计分归一化</h3><p>最大值：</p><p><span class="math display">\[Z^+ = (\max\{z_{11},z_{21},\cdots,z_{n1}\},\max\{z_{12},z_{22},\cdots,z_{n2}\}, \cdots,\max\{z_{1m},z_{2m},\cdots,z_{nm}\})\]</span> 最小值： <span class="math display">\[Z^- = (\min\{z_{11},z_{21},\cdots,z_{n1}\},\min\{z_{12},z_{22},\cdots,z_{n2}\}, \cdots,\min\{z_{1m},z_{2m},\cdots,z_{nm}\})\]</span> 定义第 <span class="math inline">\(i(i =1,2,…,n)\)</span>个评价对象与最大值的距离： <spanclass="math display">\[D_i^+ = \sqrt{\sum_{j=1}^{m}(Z_j^+ - z_{ij})^2}\]</span> 定义第 <span class="math inline">\(i(i = 1,2,…,n)\)</span>个评价对象与最小值的距离：</p><p><span class="math display">\[D_i^- = \sqrt{\sum_{j=1}^{m}(Z_j^- - z_{ij})^2}\]</span> 那么，我们可以计算得出第 <span class="math inline">\(i(i =1,2,…,n)\)</span> 个评价对象未归一化的得分：</p><p><span class="math display">\[S_i = \frac{D_i^-}{D_i^+ + D_i^-}\]</span> 很明显 <span class="math inline">\(0 \leq S_i \leq1\)</span>，且 <span class="math inline">\(S_i\)</span> 越大 <spanclass="math inline">\(D_i^+\)</span> 越小，即越接近最大值。</p><h2 id="二扩展">二、扩展</h2><h4 id="权重结合">权重结合</h4><p>上述过程默认了各项指标的权重相同，但在实际的评价中指标都是有各自的权重，因此应该用权重对公式进行修正，修正后的公式如下，ω代表权重。<span class="math display">\[D_i^+ = \sqrt{\sum_{j=1}^{m}\omega_j(Z_j^+ - z_{ij})^2},\ D_i^- =\sqrt{\sum_{j=1}^{m}\omega_j(Z_j^- - z_{ij})^2}\]</span> 这里就可以直接上熵权法，当然，专家瞎打分也不是不行。</p><h4 id="本质推导">本质推导</h4><p>公式：</p><p><span class="math display">\[S_i = \frac{D_i^-}{D_i^+ + D_i^-}\]</span> 实际上是：</p><p><span class="math display">\[\frac{x - \min}{\max - \min} \rightarrow \frac{x - \min}{(\max - x) + (x- \min)} \rightarrow \frac{x与最小值的距离}{x与最大值的距离 +x与最小值的距离}\]</span> <span class="math inline">\(D_i^+\)</span>与<spanclass="math inline">\(D_i^-\)</span>实际上是<strong>欧氏距离</strong>，这个的本质思想和熵权法的实际上是有很多的相同之处的。</p><h2 id="参考">参考</h2><p><ahref="https://blog.csdn.net/weixin_43819566/article/details/112342602">清风数学建模学习笔记——TOPSIS法（优劣解距离法）-CSDN博客</a></p><p><ahref="https://zhuanlan.zhihu.com/p/564302492">数学建模——常考评价类模型介绍- 知乎</a></p><p><ahref="https://zhuanlan.zhihu.com/p/266689519">TOPSIS(逼近理想解)算法原理详解与代码实现- 知乎</a></p>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>评价类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>模糊综合评价法-FCE</title>
    <link href="/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7%E6%B3%95-FCE/"/>
    <url>/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E6%A8%A1%E7%B3%8A%E7%BB%BC%E5%90%88%E8%AF%84%E4%BB%B7%E6%B3%95-FCE/</url>
    
    <content type="html"><![CDATA[<h1 id="模糊综合评价法">模糊综合评价法</h1><p>量分为 <strong>确定性</strong> 和 <strong>不确定性</strong>：</p><ul><li><strong>确定性</strong>：经典数学（几何、代数）</li><li><strong>不确定性</strong>：<ol type="1"><li>随机性（概率论、随机过程）如掷筛子，观看那一面向上，这种现象的规律性靠概率统计去刻画。</li><li>灰性（灰色系统）</li><li>模糊性（模糊数学）如“今天天气很热”、“小伙子很帅”等，靠模糊数学去刻画。</li></ol></li></ul><p>而模糊综合评价法是一种基于 <strong>模糊数学</strong> 的综合<strong>评价方法</strong>。该综合评价法根据模糊数学的<strong>隶属度理论</strong>把定性评价转化为定量评价，即用模糊数学对受到多种因素制约的事物或对象做出一个总体的评价。它具有结果清晰，系统性强的特点，能较好地解决模糊的、难以量化的问题，适合各种<strong>非确定性问题的解决</strong>。</p><h2 id="经典集合和模糊集合的基本概念">经典集合和模糊集合的基本概念</h2><h3 id="经典集合classical-set和特征函数">经典集合（classicalset）和特征函数</h3><ul><li><strong>经典集合</strong>：具有相同属性的事物的集体，例如：颜色、性别、手机品牌等、自然数集。</li><li>集合的基本属性：互斥、确定，就是从高中以来我们一直所认为的集合。</li></ul><h3 id="模糊集合fuzzy-set和隶属函数">模糊集合（fuzzyset）和隶属函数</h3><ul><li><p><strong>模糊集合</strong>：用来描述模糊性概念的集合。（帅、高、白、年轻…）</p></li><li><p>与经典集合相比，模糊集合承认亦此亦彼，即不具有确定性和互斥性，而我们很多情况下都是这样的集合，比如25年第一次校赛B题。</p></li><li><p>数学中对于模糊集合的刻画：<strong>隶属函数</strong></p><p><span class="math display">\[\mathbf{u_A: U \rightarrow [0,1]}\]</span> 其中注意与 <span class="math inline">\(\{0, 1\}\)</span>的区别，<span class="math inline">\(\{0, 1\}\)</span>只有两种可能，<span class="math inline">\([0, 1]\)</span>有无数种可能。</p></li></ul><h2 id="隶属函数的确定方法">隶属函数的确定方法</h2><h3 id="模糊统计法">模糊统计法</h3><p>自己捏数或者放问卷。</p><h3 id="借助已有的客观尺度">借助已有的客观尺度</h3><p>比如用恩格尔系数描述家庭贫富状况。</p><h3 id="指派法">指派法</h3><p><strong>根据问题的性质直接套用某些分布作为隶属函数，主观性较强。</strong></p><figure><imgsrc="D:\blogs\source\img\inblogs\533fb99c13fa8f6ca63aeb208c4bf273.png"alt="img" /><figcaption aria-hidden="true">img</figcaption></figure><p>其中，梯形分布用得较多。</p><h2 id="应用模糊综合评价">应用：模糊综合评价</h2><h3 id="评价问题概述">评价问题概述</h3><p>模糊评价问题是要解决的问题是：</p><blockquote><p>① 把论域中的对象对应评语集中的一个指定的评语。 ②将方案作为评语集并选择一个最优的方案。</p></blockquote><p>在模糊综合评价中，引入三个集合：（下面的符号和概念中的符号表示的<strong>含义不同</strong>）</p><ul><li><strong>因素集（评价指标集）</strong> <span class="math inline">\(U= \{u_1,u_2,...,u_n\}\)</span></li><li><strong>评语集（评价的结果集）</strong> <spanclass="math inline">\(V = \{v_1,v_2,..,v_m\}\)</span></li><li><strong>权重集（指标的权重）</strong> <span class="math inline">\(A= \{a_1,a_2,...,a_n\}\)</span></li></ul><h3 id="一级模糊综合评价">一级模糊综合评价</h3><ol type="1"><li><p><strong>确定因素集</strong></p><p>一级模糊评价中，n 往往较小（一般 ≤ 5）且 指标间相关性不强。</p></li><li><p><strong>确定评语集</strong></p></li><li><p><strong>第三步：确定各因素的权重</strong></p><p>确定权重的方法有很多，如：Delphi法（专家调查法，即瞎几把捏数法）、加权平均法、众人评估法。但是建议：当没有数据的时候可采取层次分析法，有数据的时候可采取熵权法。</p></li><li><p><strong>第四步：确定模糊综合评判矩阵，对每个元素做出评价</strong></p></li><li><p><strong>第五步：模糊综合评判</strong></p></li></ol><h3 id="多级模糊综合评价">多级模糊综合评价</h3><p>一级模糊综合评价是多级模糊综合评价的基础。它是将一级模糊评价因素集指标的相关性指标进行统一综合，因为上文讲过一级模糊评价的指标之间是相关性不强的，那么这样相关性指标在只考虑这一种因素的情况下是不相关的，即相对不相关。然后对每个相关性指标进行综合，求得只看这一组指标对于评语集的隶属度，此方法进行类推，最后再综合。</p><h2 id="总结">总结</h2><ol type="1"><li>隶属函数有三种确定方法，要根据实际情况来选择使用。</li><li>极大型（极小型）指标，和模糊集合的三类（偏小型、中间型、偏大型）是两种概念，注意区分。</li><li>模糊综合评价的因素指标是相关性不强的，如果有相关项较强的需要进行多级模糊综合评价，级数一般不超过3层。</li></ol>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>评价类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>主成分分析-PCA</title>
    <link href="/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90-PCA/"/>
    <url>/2025/04/01/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-04-01-%E4%B8%BB%E6%88%90%E5%88%86%E5%88%86%E6%9E%90-PCA/</url>
    
    <content type="html"><![CDATA[<h1 id="主成分分析-pca">主成分分析-PCA</h1><p>主成分分析（PCA）是一种降维算法，通过将原始变量进行线性组合，生成互不相关的主成分，从而保留数据的主要信息，以此来去噪，提升数据处理速度。PCA常用于数据简化、聚类分析及解决回归中多重共线性问题，但在解释主成分时往往较为模糊，故不常用于评价模型。</p><hr /><h2 id="一简介">一、简介</h2><ul><li><strong>目标：</strong>用较少的新变量替代原来较多的变量，尽可能保留原有信息。<br /></li><li><strong>应用：</strong> 数据降维、去除噪声、提升数据处理速度。<br /></li><li><strong>适用场景</strong>：指标高度相关易于解释、可解释需求低。</li><li><strong>局限性</strong>：非线性关系处理的不好，贡献度若是不足可能会丢失细节。</li></ul><hr /><h2 id="二思想">二、思想</h2><p>假设有 <span class="math inline">\(n\)</span> 个样本和 <spanclass="math inline">\(p\)</span> 个指标，构成一个 $ n p$的样本矩阵：</p><p><span class="math display">\[X = \begin{bmatrix}x_{11} &amp; x_{12} &amp; \cdots &amp; x_{1p} \\x_{21} &amp; x_{22} &amp; \cdots &amp; x_{2p} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\x_{n1} &amp; x_{n2} &amp; \cdots &amp; x_{np} \\\end{bmatrix}= (x_1, x_2, \cdots, x_p)\]</span> 目标是寻找新的变量 $ z_1, z_2, , z_m $（其中 $ m p$），使其满足：</p><p><span class="math display">\[\begin{cases}z_1 = l_{11}x_1 + l_{12}x_2 + \cdots + l_{1p}x_p \\z_2 = l_{21}x_1 + l_{22}x_2 + \cdots + l_{2p}x_p \\\vdots \\z_m = l_{m1}x_1 + l_{m2}x_2 + \cdots + l_{mp}x_p \\\end{cases}\]</span> <strong>系数 $ l_{ij} $ 的确定原则：</strong></p><ol type="1"><li>不同主成分之间彼此不相关。</li><li>第一主成分是所有线性组合中方差最大的。</li><li>第二主成分在与第一主成分不相关的条件下方差最大。</li><li>依此类推，直到选出 $ m $ 个主成分。</li></ol><hr /><h2 id="三计算步骤">三、计算步骤</h2><h3 id="数据标准化">1. 数据标准化</h3><ul><li><p><strong>计算均值和标准差：</strong> <span class="math display">\[\bar{x}_j = \frac{1}{n} \sum_{i=1}^{n} x_{ij},\quad S_j =\sqrt{\frac{\sum_{i=1}^{n}(x_{ij}-\bar{x}_j)^2}{n-1}}\]</span></p></li><li><p><strong>标准化数据：</strong> <span class="math display">\[X_{ij} = \frac{x_{ij}-\bar{x}_j}{S_j}\]</span></p></li><li><p><strong>标准化后的矩阵：</strong> <span class="math display">\[X = \begin{bmatrix}X_{11} &amp; X_{12} &amp; \cdots &amp; X_{1p} \\X_{21} &amp; X_{22} &amp; \cdots &amp; X_{2p} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\X_{n1} &amp; X_{n2} &amp; \cdots &amp; X_{np} \\\end{bmatrix}\]</span></p></li></ul><h3 id="计算协方差矩阵">2. 计算协方差矩阵</h3><ul><li><strong>定义：</strong> <span class="math display">\[R = \begin{bmatrix}r_{11} &amp; r_{12} &amp; \cdots &amp; r_{1p} \\r_{21} &amp; r_{22} &amp; \cdots &amp; r_{2p} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\r_{p1} &amp; r_{p2} &amp; \cdots &amp; r_{pp} \\\end{bmatrix},\quad r_{ij} = \frac{1}{n-1}\sum_{k=1}^{n} X_{ki} X_{kj}\]</span></li></ul><h3 id="求解特征值和特征向量">3. 求解特征值和特征向量</h3><ul><li><p><strong>特征值：</strong> <span class="math display">\[\lambda_1 \geq \lambda_2 \geq \cdots \geq \lambda_p \geq 0\]</span> （且 $ R $ 为半正定矩阵）</p></li><li><p><strong>对应的特征向量：</strong> <span class="math display">\[a_1 = \begin{bmatrix} a_{11} \\ a_{21} \\ \vdots \\ a_{p1}\end{bmatrix},\quada_2 = \begin{bmatrix} a_{12} \\ a_{22} \\ \vdots \\ a_{p2}\end{bmatrix},\quad \dots,\quada_p = \begin{bmatrix} a_{1p} \\ a_{2p} \\ \vdots \\ a_{pp} \end{bmatrix}\]</span></p></li><li></li></ul><h3 id="计算贡献率和累计贡献率">4. 计算贡献率和累计贡献率</h3><ul><li><p><strong>贡献率：</strong> <span class="math display">\[\text{贡献率} = \frac{\lambda_i}{\sum_{k=1}^{p}\lambda_k}\]</span></p></li><li><p><strong>累计贡献率：</strong> <span class="math display">\[\text{累计贡献率} =\frac{\sum_{k=1}^{i}\lambda_k}{\sum_{k=1}^{p}\lambda_k}\quad(i=1,2,\dots,p)\]</span></p></li><li></li></ul><h3 id="写出主成分">5. 写出主成分</h3><p>一般选择累计贡献率超过 80% 的前 ( m ) 个主成分：</p><p><span class="math display">\[F_i = a_{1i}X_1 + a_{2i}X_2 + \cdots + a_{pi}X_p,\quad (i=1,2,\dots,m)\]</span></p><h3 id="主成分的解释">6. 主成分的解释</h3><p>根据各指标在主成分中的载荷大小判断该主成分代表的含义，载荷越大的指标对该主成分的影响越大。</p><hr /><h2 id="四扩展">四、扩展</h2><ol type="1"><li><strong>聚类分析：</strong>可通过降维简化自变量，便于图形展示。</li><li><strong>回归分析：</strong> 可用于缓解多重共线性问题。</li><li><strong>因子分析：</strong> PCA实际上是因子分析的一种特例，但因子分析在解释方面更具优势，建议多用因子分析。</li></ol><hr /><h2 id="参考资料">参考资料</h2><p><ahref="https://blog.csdn.net/weixin_43819566/article/details/113800120">清风数学建模学习笔记——主成分分析(PCA)原理详解及案例分析_x10为生均教育经费对以上指标数据做主成分分析，并提取主成分-CSDN博客</a></p><p><ahref="https://developer.baidu.com/article/details/3015610">数学建模中的主成分分析(PCA)详解与应用-百度开发者中心</a></p><p><ahref="https://zhuanlan.zhihu.com/p/677797684">【数模百科】一文讲清楚主成分分析PCA（附python代码）- 知乎</a></p>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>评价类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>皮尔逊相关系数-PEARSON</title>
    <link href="/2025/03/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%B0%8F%E5%B7%A5%E5%85%B7/2025-03-31-%E7%9A%AE%E5%B0%94%E9%80%8A%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/"/>
    <url>/2025/03/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E5%B0%8F%E5%B7%A5%E5%85%B7/2025-03-31-%E7%9A%AE%E5%B0%94%E9%80%8A%E7%9B%B8%E5%85%B3%E7%B3%BB%E6%95%B0/</url>
    
    <content type="html"><![CDATA[<h1 id="皮尔逊相关系数">皮尔逊相关系数</h1><p>方差描述的是单个变量的离散程度，协方差给方差的一个 <spanclass="math inline">\((X - E[X])^2\)</span> 变成 <spanclass="math inline">\((X - E[X])(Y - E[Y])\)</span>，就能衡量的是两个变量偏离各自均值后乘积的平均值，反映了两变量共同变化的趋势。但由于协方差受变量的单位影响，难以直接比较，所以我们就要将其无量纲化，除上各自的标准差就好。</p><h2 id="定义">定义</h2><p>皮尔逊相关系数（通常称为<strong>线性相关系数</strong>）用于刻画变量 X与 Y 之间的线性关系。其定义为： <span class="math display">\[\rho_{X, Y} = \frac{\operatorname{cov}(X, Y)}{\sigma_X \sigma_Y} =\frac{E\left[(X - E[X])(Y - E[Y])\right]}{\sigma_X \sigma_Y} =\frac{E(XY) - E(X)E(Y)}{\sqrt{E\left(X^2\right) - [E(X)]^2}\sqrt{E\left(Y^2\right) - [E(Y)]^2}}\]</span></p><blockquote><p><strong>注：</strong> 当 X 与 Y存在其他非线性关系时，皮尔逊相关系数无法正确反映两者之间的关系。</p></blockquote><hr /><h2 id="相关系数的性质">相关系数的性质</h2><ol type="1"><li><p><strong>独立性与不相关性：</strong></p><p>如果 X 和 Y 独立，则 <span class="math inline">\(\rho_{X,Y} =0\)</span>；但反过来，<span class="math inline">\(\rho_{X,Y} =0\)</span> 不一定说明 X 与 Y 独立，除非二者服从二维正态分布。</p></li><li><p><strong>取值范围：</strong></p></li></ol><p><span class="math display">\[-1 \leq \rho_{X,Y} \leq 1\]</span></p><hr /><h2 id="两组指标相关系数的计算">两组指标相关系数的计算</h2><h3 id="均值">均值：</h3><p><span class="math display">\[\bar{X} = \frac{1}{n}\sum_{i=1}^{n} X_i,\quad \bar{Y} =\frac{1}{n}\sum_{i=1}^{n} Y_i\]</span></p><h3 id="方差无偏估计">方差（无偏估计）：</h3><p><span class="math display">\[\sigma_X^2 = \frac{1}{n-1}\sum_{i=1}^{n}(X_i - \bar{X})^2,\quad\sigma_Y^2 = \frac{1}{n-1}\sum_{i=1}^{n}(Y_i - \bar{Y})^2\]</span></p><h3 id="样本协方差">样本协方差：</h3><p><span class="math display">\[\operatorname{cov}(X,Y) = \frac{1}{n-1}\sum_{i=1}^{n}(X_i - \bar{X})(Y_i- \bar{Y})\]</span></p><h3 id="相关系数">相关系数：</h3><p><span class="math display">\[r = \frac{\sum_{i=1}^{n}(X_i - \bar{X})(Y_i -\bar{Y})}{\sqrt{\sum_{i=1}^{n}(X_i - \bar{X})^2}\sqrt{\sum_{i=1}^{n}(Y_i - \bar{Y})^2}}\]</span></p><blockquote><p><strong>说明：</strong>分母中用的是各自的标准差，目的是将协方差无量纲化，从而消除不同变量之间单位和量级的影响，使得计算结果统一在([-1, 1]) 之间。</p></blockquote><hr /><h2 id="判断标准">判断标准</h2><p>根据计算得出的相关系数 (r)的绝对值，可以判断两个变量之间的相关性强弱：</p><table><thead><tr><th>|r|</th><th>相关强度</th></tr></thead><tbody><tr><td>0.8-1.0</td><td>极强相关</td></tr><tr><td>0.6-0.8</td><td>强相关</td></tr><tr><td>0.4-0.6</td><td>中等程度相关</td></tr><tr><td>0.2-0.4</td><td>弱相关</td></tr><tr><td>0.0-0.2</td><td>极弱相关或无相关</td></tr></tbody></table><hr /><h2 id="其它参考资源">其它参考资源</h2><ul><li><a href="#">带你深入理解期望、方差、协方差的含义</a></li><li><a href="https://www.zhihu.com/question/19734616">知乎：如何理解Pearson 相关系数</a></li><li><ahref="https://blog.csdn.net/MoreAction_/article/details/106195689">相关系数——皮尔逊相关系数的公式及其理解_皮尔逊相关系数公式-CSDN博客</a></li></ul>]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>小工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>熵权法-EWM</title>
    <link href="/2025/03/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-03-31-%E7%86%B5%E6%9D%83%E6%B3%95(EWM)/"/>
    <url>/2025/03/31/%E6%95%B0%E5%AD%A6%E5%BB%BA%E6%A8%A1/%E8%AF%84%E4%BB%B7%E7%B1%BB%E6%A8%A1%E5%9E%8B/2025-03-31-%E7%86%B5%E6%9D%83%E6%B3%95(EWM)/</url>
    
    <content type="html"><![CDATA[<h1 id="熵权法-ewm">熵权法-EWM</h1><h2 id="背景">背景</h2><p>一种常见于数学建模的更为客观的分配权重的方法，因为层次分析法主观性太强，专家打分实际上就是自己瞎几把打，故引入熵权法。</p><h2 id="思路">思路</h2><p>对于一组数据指标，如果它的方差越大，就说明这个数据的相似度越小，就是它所贡献度就越大。极端来看，就如果对于某项指标来讲，他的所有的值是一样的，那么它的相似度是最大的，基于这个指标来进行判别的权重可以直接设为0。熵是不确定度的一种度量，不确定性越大，熵就越大，信息量就越大，它的对最终决策的影响权重应该就设置得更高一些。</p><p>举个清风数学建模的例子，小张和小王是两个高中生，小张学习好回回期末考满分，小王学习不好考试常常不及格。在一次考试中，小张还是考了满分，而小王也考了满分。那就很不一样了，小王这里包含的信息就非常大，所对应的权重也就高一些。</p><h2 id="定义">定义</h2><ul><li><p><strong>信息量</strong></p><p>定义信息量为：<br /><span class="math display">\[I(x) = -\ln(p(x))\]</span></p></li><li><p><strong>信息熵</strong> 定义信息熵为各信息量的期望值： <spanclass="math display">\[H(X) = -\sum_{i=1}^{n} p(x_i)\ln(p(x_i))\]</span> 当所有事件均等时，熵达到最大值：<br /><span class="math display">\[H(X) = \ln(n)\]</span></p></li></ul><hr /><h2 id="计算步骤">计算步骤</h2><p>熵权法主要包括以下三个步骤：</p><h3 id="数据标准化">数据标准化</h3><p>假设有个对象和个指标，原始数据构成矩阵（要先正向化）：</p><p><span class="math display">\[X = \begin{bmatrix}x_{11} &amp; x_{12} &amp; \cdots &amp; x_{1m} \\x_{21} &amp; x_{22} &amp; \cdots &amp; x_{2m} \\\vdots &amp; \vdots &amp; \ddots &amp; \vdots \\x_{n1} &amp; x_{n2} &amp; \cdots &amp; x_{nm}\end{bmatrix}\]</span></p><h4 id="正向化处理">正向化处理</h4><ul><li><strong>要求</strong>：后续计算概率时，每个元素必须为非负值。<br /></li><li><strong>处理</strong>：如果其中存在负数，则需采用特定方法将其标准化到[0,1] 区间。</li></ul><table><thead><tr><th>指标名称</th><th>指标特点</th><th>例子</th></tr></thead><tbody><tr><td>极大型指标（正向指标）</td><td>越大越好</td><td>成绩、利润、GDP增速</td></tr><tr><td>极小型指标（负向指标）</td><td>越小越好</td><td>花费、污染程度、失业率</td></tr><tr><td>中间型指标</td><td>越接近某个值越好</td><td>水质量评估时的PH值</td></tr><tr><td>区间型指标</td><td>落在某个区间最好</td><td>体温、水中某物质含量</td></tr></tbody></table><ul><li>极小型转极大型：</li></ul><p><span class="math display">\[x_i = \max\{x_1, x_2, ..., x_i\} - x_i\]</span></p><p>注：若所有元素均为正数，可以直接取倒数。</p><ul><li>中间行转极大型：</li></ul><p>中间型指标序列，且最佳数值为 <spanclass="math inline">\(x_{best}\)</span>，<spanclass="math inline">\(x_{new}\)</span>为正向化之后的极大型指标，正向化公式：</p><p><span class="math display">\[  M = \max\{|x_i - x_{best}|\}\]</span></p><p><span class="math display">\[x_{new} = 1 - \frac{|x_i - x_{best}|}{M}\]</span></p><ul><li>区间型转极大型:</li></ul><p>区间型指标序列，且最佳数值为 <spanclass="math inline">\(x_{best}\)</span>，<spanclass="math inline">\(x_{new}\)</span>为正向化之后的极大型指标，正向化公式： <span class="math display">\[M = \max\{a - \min\{x_i\}, \max\{x_i\} - b\}\]</span></p><p><span class="math display">\[x_{new} =\begin{cases}1 - \frac{a - x}{M}, &amp; x &lt; a \\1, &amp; a \leq x \leq b \\1 - \frac{x - b}{M}, &amp; x &gt; b\end{cases}\]</span></p><h4 id="标准化方法">标准化方法</h4><ul><li><p><strong>方法一</strong>（适用于无负数情况）： <spanclass="math display">\[z_{ij} = \frac{x_{ij}}{\sqrt{\sum_{i=1}^{n} x_{ij}^2}}\]</span></p></li><li><p><strong>方法二</strong>（存在负数时）： <spanclass="math display">\[z_{ij} = \frac{x_{ij} - \min\{x_{1j}, x_{2j}, \ldots,x_{nj}\}}{\max\{x_{1j}, x_{2j}, \ldots, x_{nj}\} - \min\{x_{1j}, x_{2j},\ldots, x_{nj}\}}\]</span></p></li></ul><hr /><h3 id="计算概率矩阵">计算概率矩阵</h3><p>从标准化矩阵出发，计算各样本在每个指标下所占的比重，构成概率矩阵：</p><p><span class="math display">\[p_{ij} = \frac{z_{ij}}{\sum_{i=1}^{n} z_{ij}}\]</span> 这样确保每一列（每个指标）的概率和为1。</p><hr /><h3 id="计算信息熵与熵权">计算信息熵与熵权</h3><h4 id="计算信息熵">计算信息熵</h4><p>计算信息熵：</p><p><span class="math display">\[e_j = -\frac{1}{\ln n} \sum_{i=1}^{n} p_{ij}\ln(p_{ij}) \quad(j=1,2,\ldots,m)\]</span> <em>注意：当 <span class="math inline">\(p_{ij}=0\)</span>时，约定 <span class="math inline">\(\ln(0)=0\)</span> 。</em></p><p>这里除以 <span class="math inline">\(\ln n\)</span> 使得 <spanclass="math inline">\(e_j\)</span> 被归一化到 <spanclass="math inline">\([0,1]\)</span> 区间。</p><h4 id="计算信息效用值">计算信息效用值</h4><p>定义信息效用值 <span class="math inline">\(d_j\)</span> 为： <spanclass="math display">\[d_j = 1 - e_j\]</span> 信息效用值越大，表示该指标包含的信息越多。</p><h4 id="归一化得熵权">归一化得熵权</h4><p>最终，将各指标的信息效用值归一化，得到熵权 <spanclass="math inline">\(\omega_j\)</span>： <span class="math display">\[\omega_j = \frac{d_j}{\sum_{j=1}^{m} d_j} \quad (j=1,2,\ldots,m)\]</span></p><h4 id="得分">得分</h4><p><span class="math display">\[score_i =  \sum_{j=1}^{m} w_{j}z_{ij} \quad (i=1,2,\ldots,n)\]</span></p><h2 id="示例代码">示例代码</h2><p>（转自<ahref="https://blog.csdn.net/m0_46246301/article/details/106735607">这篇帖子</a>）</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><code class="hljs matlab"><span class="hljs-comment">% 代码实战一下吧，如下是清风老师的课程里的例子，自己再敲了一下代码并简化了一丢丢？</span><br>clc,clear;<br><br><span class="hljs-comment">% 定义函数</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[lnP]</span> = <span class="hljs-title">My_log</span><span class="hljs-params">(P)</span></span><br>    <span class="hljs-comment">% 当矩阵P中的元素为0时，返回0</span><br>    n = <span class="hljs-built_in">size</span>(P,<span class="hljs-number">1</span>);<br>    m = <span class="hljs-built_in">size</span>(P,<span class="hljs-number">2</span>);<br>    lnP = <span class="hljs-built_in">zeros</span>(n,m);<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:n*m<br>        <span class="hljs-keyword">if</span> P(<span class="hljs-built_in">i</span>) == <span class="hljs-number">0</span><br>            lnP(<span class="hljs-built_in">i</span>) = <span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">else</span><br>            lnP(<span class="hljs-built_in">i</span>) = <span class="hljs-built_in">log</span>(P(<span class="hljs-built_in">i</span>));<br>        <span class="hljs-keyword">end</span><br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% 传入三个参数：</span><br><span class="hljs-comment">% i为第几列,type为指标类型(1：极小型， 2：中间型， 3：区间型),A_col为对应列向量</span><br><span class="hljs-comment">% 返回正向化后的列向量A_col</span><br><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">[A_col]</span> = <span class="hljs-title">Positivization</span><span class="hljs-params">(i,type,A_col)</span></span><br>    <br>    <span class="hljs-keyword">if</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">1</span>        <span class="hljs-comment">% 极小型</span><br>        <span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;第&#x27;</span>,num2str(<span class="hljs-built_in">i</span>),<span class="hljs-string">&#x27;列是极小型&#x27;</span>] )<br>        A_col = min_to_max(A_col);<br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">2</span>    <span class="hljs-comment">% 中间型</span><br>        <span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;第&#x27;</span>,num2str(<span class="hljs-built_in">i</span>),<span class="hljs-string">&#x27;列是中间型&#x27;</span>] )<br>        value = input(<span class="hljs-string">&#x27;请输入最佳值： &#x27;</span>);<br>        A_col = mid_to_max(A_col, value);<br>    <span class="hljs-keyword">elseif</span> <span class="hljs-built_in">type</span> == <span class="hljs-number">3</span>    <span class="hljs-comment">% 区间型</span><br>        <span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;第&#x27;</span>,num2str(<span class="hljs-built_in">i</span>),<span class="hljs-string">&#x27;列是区间型&#x27;</span>] )<br>        l = input(<span class="hljs-string">&#x27;请输入区间的下界： &#x27;</span>);<br>        r = input(<span class="hljs-string">&#x27;请输入区间的上界： &#x27;</span>); <br>        A_col = inter_to_max(A_col, l, r);<br>    <span class="hljs-keyword">else</span><br>        <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;没有这种类型的指标,请检查type是否输入错误&#x27;</span>)<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><br><span class="hljs-comment">% 1、导入数据</span><br>load data_river.mat<br><span class="hljs-comment">% 2、正向化</span><br>[n,m] = <span class="hljs-built_in">size</span>(A);<br><span class="hljs-built_in">disp</span>([<span class="hljs-string">&#x27;该数据一共有&#x27;</span>,num2str(n),<span class="hljs-string">&#x27;个评价对象,有&#x27;</span>,num2str(m),<span class="hljs-string">&#x27;个评价指标&#x27;</span>])<br>jud = input([<span class="hljs-string">&#x27;这&#x27;</span> num2str(m) <span class="hljs-string">&#x27;个指标是否需要进行正向化处理，需要请输入1 ，不需要输入0：&#x27;</span>]);<br><span class="hljs-keyword">if</span> jud == <span class="hljs-number">1</span><br>    col_list = input(<span class="hljs-string">&#x27;请输入需要正向化的指标所在列组成的列表，如第2、3列，需输入[2,3]: &#x27;</span>);<br>    type_list = input(<span class="hljs-string">&#x27;请输入这些列的指标类型组成的列表（1：极小型， 2：中间型， 3：区间型): &#x27;</span>);<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">i</span> = <span class="hljs-number">1</span>:<span class="hljs-built_in">size</span>(col_list,<span class="hljs-number">2</span>)  <span class="hljs-comment">% 列</span><br>        A(:,col_list(<span class="hljs-built_in">i</span>)) = Positivization(col_list(<span class="hljs-built_in">i</span>),type_list(<span class="hljs-built_in">i</span>),A(:,col_list(<span class="hljs-built_in">i</span>)));<br>    <span class="hljs-keyword">end</span><br><span class="hljs-keyword">end</span><br><span class="hljs-comment">% 3、标准化</span><br><span class="hljs-keyword">if</span> <span class="hljs-built_in">isempty</span>(<span class="hljs-built_in">find</span>(A &lt; <span class="hljs-number">0</span>))<br>    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;不存在负数，标准化后的矩阵为:&#x27;</span>)<br>    <span class="hljs-comment">% A_stand = A./ repmat(sum(A.*A).^(1/2),n,1) % 按列求和</span><br>    A_stand = (A - <span class="hljs-built_in">repmat</span>(<span class="hljs-built_in">min</span>(A),n,<span class="hljs-number">1</span>))./(<span class="hljs-built_in">repmat</span>(<span class="hljs-built_in">max</span>(A)-<span class="hljs-built_in">min</span>(A),n,<span class="hljs-number">1</span>)) <br><span class="hljs-keyword">else</span><br>    <span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;存在负数，标准化后的矩阵为:&#x27;</span>)<br>    A_stand = (A - <span class="hljs-built_in">repmat</span>(<span class="hljs-built_in">min</span>(A),n,<span class="hljs-number">1</span>))./(<span class="hljs-built_in">repmat</span>(<span class="hljs-built_in">max</span>(A)-<span class="hljs-built_in">min</span>(A),n,<span class="hljs-number">1</span>)) <br><span class="hljs-keyword">end</span><br><span class="hljs-comment">% 4、计算概率矩阵:相当于每个标准化后的指标归一化</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;概率矩阵为:&#x27;</span>)<br>P = A_stand./<span class="hljs-built_in">repmat</span>(sum(A_stand),n,<span class="hljs-number">1</span>)<br><span class="hljs-comment">% 5、计算每个指标的信息熵</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;指标的信息熵:&#x27;</span>)<br>E = -sum(P.*My_log(P))/<span class="hljs-built_in">log</span>(n)<br><span class="hljs-comment">% 6、计算权重</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;指标对应的权重:&#x27;</span>)<br>W = (<span class="hljs-number">1</span>-E)./sum(E)<br><span class="hljs-comment">% 归一化</span><br>W = W./sum(W)<br><span class="hljs-comment">% 7、计算最终得分</span><br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;最终综合得分为:&#x27;</span>)<br>score = sum(W.*A_stand,<span class="hljs-number">2</span>)<br>score_stand = score ./ sum(score);<br>[score_stand_sort, index] = <span class="hljs-built_in">sort</span>(score_stand, <span class="hljs-string">&#x27;descend&#x27;</span>);<br><span class="hljs-built_in">disp</span>(<span class="hljs-string">&#x27;最终名次为:&#x27;</span>)<br><span class="hljs-built_in">disp</span>(index)<br></code></pre></td></tr></table></figure><hr /><h2 id="扩展">扩展</h2><ol type="1"><li><strong>修正TOPSIS法</strong>：可利用熵权法修正TOPSIS法，使决策更加客观。</li><li><strong>主客观权重综合</strong>：将客观赋权（熵权法）与主观赋权相结合，可获得更合理的权重分配。</li><li><strong>其他客观赋权方法</strong>：例如灰色关联分析法也可作为计算权重的方法。</li><li><strong>标准化方法选择</strong>：不同的标准化方法会得到不同的 (Z)矩阵，需根据实际情况选择合适方法。</li></ol><hr /><h2 id="模型总结">模型总结</h2><ul><li><strong>第一步</strong>：检查输入矩阵中是否存在负数，并进行必要的标准化处理，确保数据非负。</li><li><strong>第二步</strong>：计算每个指标下每个样本的比重，构成概率矩阵。</li><li><strong>第三步</strong>：利用概率矩阵计算各指标的信息熵，然后计算信息效用值，最后归一化得到各指标的权重。</li></ul><hr />]]></content>
    
    
    <categories>
      
      <category>数学建模</category>
      
      <category>评价类模型</category>
      
    </categories>
    
    
    <tags>
      
      <tag>数学建模</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>XGBoost公式文档</title>
    <link href="/2025/03/31/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/2025-03-31-XGBoost&#39;s_latex/"/>
    <url>/2025/03/31/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0/%E5%85%AC%E5%BC%8F%E6%8E%A8%E5%AF%BC/2025-03-31-XGBoost&#39;s_latex/</url>
    
    <content type="html"><![CDATA[<h1 id="xgboost技术文档">XGBoost技术文档</h1><h2 id="参数设置">参数设置</h2><p>见代码</p><h2 id="涉及到的相关数学公式">涉及到的相关数学公式：</h2><ul><li><strong>模型目标函数</strong>：</li></ul><p><span class="math display">\[\text{Obj}(\theta)^{(t)} = \sum_{i=1}^n L(y_i, \hat{y}_i) + \sum_{k=1}^K\Omega(f_k)\]</span></p><ul><li><strong>正则项</strong></li></ul><p><span class="math display">\[\Omega(f) = \gamma T + \frac{1}{2} \lambda \sum_{j=1}^T w_j^2\]</span></p><ul><li><strong>目标函数近似</strong></li></ul><p><span class="math display">\[\text{Obj}(\theta)^{(t)} \approx \sum_{i=1}^n \left[ g_i f_t(x_i) +\frac{1}{2} h_i f_t^2(x_i) \right] + \Omega(f_t)\]</span></p><ul><li><strong>增益</strong></li></ul><p><span class="math display">\[\text{Gain} = \frac{1}{2} \left[ \frac{(\sum_{i \in I_L} g_i)^2}{\sum_{i\in I_L} h_i + \lambda} + \frac{(\sum_{i \in I_R} g_i)^2}{\sum_{i \inI_R} h_i + \lambda} - \frac{(\sum_{i \in I} g_i)^2}{\sum_{i \in I} h_i +\lambda} \right] - \gamma\]</span></p><ul><li><strong>对数损失</strong></li></ul><p><span class="math display">\[\text{LogLoss} = -\frac{1}{N} \sum_{i=1}^N \left[ y_i \log p_i + (1-y_i)\log(1-p_i) \right]\]</span></p><ul><li><strong>分类错误率</strong></li></ul><p><span class="math display">\[\text{Error} = \frac{1}{N} \sum_{i=1}^N \mathbb{I}(\hat{y}_i \neq y_i)\]</span></p>]]></content>
    
    
    <categories>
      
      <category>机器学习</category>
      
      <category>公式推导</category>
      
    </categories>
    
    
    <tags>
      
      <tag>机器学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
